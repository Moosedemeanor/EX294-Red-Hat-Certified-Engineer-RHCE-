2021-06-01 12:15:07,194 p=124512 u=ansible n=ansible | ansible1.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: Warning: Permanently added 'ansible1.example.com,192.168.11.201' (ECDSA) to the list of known hosts.\r\nansible@ansible1.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-01 12:15:07,257 p=124512 u=ansible n=ansible | ansible4.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: Warning: Permanently added 'ansible4.example.com,192.168.11.204' (ECDSA) to the list of known hosts.\r\nansible@ansible4.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-01 12:15:07,263 p=124512 u=ansible n=ansible | ansible3.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: Warning: Permanently added 'ansible3.example.com,192.168.11.203' (ECDSA) to the list of known hosts.\r\nansible@ansible3.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-01 12:15:07,315 p=124512 u=ansible n=ansible | ansible2.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: Warning: Permanently added 'ansible2.example.com,192.168.11.202' (ECDSA) to the list of known hosts.\r\nansible@ansible2.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-01 12:15:07,519 p=124512 u=ansible n=ansible | control.example.com | FAILED! => {
    "msg": "Missing sudo password"
}
2021-06-01 12:16:22,568 p=125270 u=ansible n=ansible | ansible1.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ansible@ansible1.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-01 12:16:22,613 p=125270 u=ansible n=ansible | ansible2.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ansible@ansible2.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-01 12:16:22,618 p=125270 u=ansible n=ansible | ansible3.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ansible@ansible3.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-01 12:16:22,620 p=125270 u=ansible n=ansible | ansible4.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ansible@ansible4.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-01 12:16:23,066 p=125270 u=ansible n=ansible | control.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-01 12:18:57,849 p=126699 u=ansible n=ansible | ansible3.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ansible@ansible3.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-01 12:18:57,856 p=126699 u=ansible n=ansible | ansible4.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ansible@ansible4.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-01 12:18:57,878 p=126699 u=ansible n=ansible | ansible2.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ansible@ansible2.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-01 12:18:58,378 p=126699 u=ansible n=ansible | control.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-01 12:18:58,607 p=126699 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-01 12:23:24,618 p=128780 u=ansible n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: control

2021-06-01 12:23:24,619 p=128780 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-01 12:23:24,619 p=128780 u=ansible n=ansible | skipping: no hosts matched
2021-06-01 12:23:24,619 p=128780 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-01 12:23:38,368 p=128878 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-01 12:23:38,376 p=128878 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-01 12:23:39,514 p=128878 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:23:39,522 p=128878 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-01 12:23:40,095 p=128878 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "value of state must be one of: reloaded, restarted, started, stopped, got: absent"}
2021-06-01 12:23:40,096 p=128878 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-01 12:23:40,096 p=128878 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-01 12:23:55,037 p=129320 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-01 12:23:55,044 p=129320 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-01 12:23:55,967 p=129320 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:23:55,975 p=129320 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-01 12:23:56,556 p=129320 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "value of state must be one of: reloaded, restarted, started, stopped, got: stoppped"}
2021-06-01 12:23:56,557 p=129320 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-01 12:23:56,558 p=129320 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-01 12:24:08,783 p=129734 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-01 12:24:08,791 p=129734 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-01 12:24:09,751 p=129734 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:24:09,759 p=129734 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-01 12:24:10,903 p=129734 u=ansible n=ansible | changed: [control.example.com]
2021-06-01 12:24:10,904 p=129734 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-01 12:24:10,905 p=129734 u=ansible n=ansible | control.example.com        : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-01 12:25:33,443 p=130691 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-01 12:25:33,450 p=130691 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-01 12:25:34,564 p=130691 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:25:34,572 p=130691 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-01 12:25:35,174 p=130691 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:25:35,181 p=130691 u=ansible n=ansible | TASK [install vsftpd] *******************************************************************************************
2021-06-01 12:25:38,545 p=130691 u=ansible n=ansible | changed: [control.example.com]
2021-06-01 12:25:38,551 p=130691 u=ansible n=ansible | TASK [enable the vsftpd service] ********************************************************************************
2021-06-01 12:25:38,962 p=130691 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "value of state must be one of: reloaded, restarted, started, stopped, got: enabled"}
2021-06-01 12:25:38,965 p=130691 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-01 12:25:38,965 p=130691 u=ansible n=ansible | control.example.com        : ok=3    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-01 12:36:01,532 p=135756 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-01 12:36:01,541 p=135756 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-01 12:36:03,686 p=135756 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:36:03,692 p=135756 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-01 12:36:04,276 p=135756 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:36:04,283 p=135756 u=ansible n=ansible | TASK [install vsftpd] *******************************************************************************************
2021-06-01 12:36:06,662 p=135756 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:36:06,668 p=135756 u=ansible n=ansible | TASK [set up repository directory] ******************************************************************************
2021-06-01 12:36:07,060 p=135756 u=ansible n=ansible | changed: [control.example.com]
2021-06-01 12:36:07,066 p=135756 u=ansible n=ansible | TASK [start the vsftpd service] *********************************************************************************
2021-06-01 12:36:07,465 p=135756 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "Unsupported parameters for (systemd) module: enable Supported parameters include: daemon_reexec, daemon_reload, enabled, force, masked, name, no_block, scope, state, user"}
2021-06-01 12:36:07,466 p=135756 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-01 12:36:07,466 p=135756 u=ansible n=ansible | control.example.com        : ok=4    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-01 12:36:46,744 p=136756 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-01 12:36:46,751 p=136756 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-01 12:36:47,678 p=136756 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:36:47,685 p=136756 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-01 12:36:48,267 p=136756 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:36:48,273 p=136756 u=ansible n=ansible | TASK [install vsftpd] *******************************************************************************************
2021-06-01 12:36:50,607 p=136756 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:36:50,612 p=136756 u=ansible n=ansible | TASK [set up repository directory] ******************************************************************************
2021-06-01 12:36:50,996 p=136756 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:36:51,003 p=136756 u=ansible n=ansible | TASK [start the vsftpd service] *********************************************************************************
2021-06-01 12:36:51,407 p=136756 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "Could not find the requested service ftp: host"}
2021-06-01 12:36:51,408 p=136756 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-01 12:36:51,408 p=136756 u=ansible n=ansible | control.example.com        : ok=4    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-01 12:37:33,330 p=137767 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-01 12:37:33,337 p=137767 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-01 12:37:34,250 p=137767 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:37:34,257 p=137767 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-01 12:37:34,829 p=137767 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:37:34,835 p=137767 u=ansible n=ansible | TASK [install vsftpd] *******************************************************************************************
2021-06-01 12:37:37,148 p=137767 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:37:37,154 p=137767 u=ansible n=ansible | TASK [set up repository directory] ******************************************************************************
2021-06-01 12:37:37,539 p=137767 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:37:37,545 p=137767 u=ansible n=ansible | TASK [start the vsftpd service] *********************************************************************************
2021-06-01 12:37:38,100 p=137767 u=ansible n=ansible | changed: [control.example.com]
2021-06-01 12:37:38,102 p=137767 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-01 12:37:38,102 p=137767 u=ansible n=ansible | control.example.com        : ok=5    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-01 12:43:06,692 p=140854 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-01 12:43:06,700 p=140854 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-01 12:43:08,810 p=140854 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:43:08,816 p=140854 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-01 12:43:09,392 p=140854 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:43:09,398 p=140854 u=ansible n=ansible | TASK [install vsftpd] *******************************************************************************************
2021-06-01 12:43:11,837 p=140854 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:43:11,843 p=140854 u=ansible n=ansible | TASK [set up repository directory] ******************************************************************************
2021-06-01 12:43:12,220 p=140854 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:43:12,226 p=140854 u=ansible n=ansible | TASK [mount the install dvd to /var/ftp/repo] *******************************************************************
2021-06-01 12:43:12,606 p=140854 u=ansible n=ansible | changed: [control.example.com]
2021-06-01 12:43:12,612 p=140854 u=ansible n=ansible | TASK [start the vsftpd service] *********************************************************************************
2021-06-01 12:43:13,022 p=140854 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:43:13,023 p=140854 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-01 12:43:13,023 p=140854 u=ansible n=ansible | control.example.com        : ok=6    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-01 12:43:19,174 p=141741 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-01 12:43:19,181 p=141741 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-01 12:43:20,095 p=141741 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:43:20,102 p=141741 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-01 12:43:20,685 p=141741 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:43:20,691 p=141741 u=ansible n=ansible | TASK [install vsftpd] *******************************************************************************************
2021-06-01 12:43:23,069 p=141741 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:43:23,076 p=141741 u=ansible n=ansible | TASK [set up repository directory] ******************************************************************************
2021-06-01 12:43:23,453 p=141741 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:43:23,459 p=141741 u=ansible n=ansible | TASK [mount the install dvd to /var/ftp/repo] *******************************************************************
2021-06-01 12:43:23,831 p=141741 u=ansible n=ansible | changed: [control.example.com]
2021-06-01 12:43:23,837 p=141741 u=ansible n=ansible | TASK [start the vsftpd service] *********************************************************************************
2021-06-01 12:43:24,251 p=141741 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:43:24,253 p=141741 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-01 12:43:24,253 p=141741 u=ansible n=ansible | control.example.com        : ok=6    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-01 12:43:40,951 p=142690 u=ansible n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: control

2021-06-01 12:43:40,951 p=142690 u=ansible n=ansible | [WARNING]: No hosts matched, nothing to do

2021-06-01 12:43:47,287 p=142739 u=ansible n=ansible | control.example.com | FAILED | rc=2 >>
[Errno 2] No such file or directory: b'll': b'll'

2021-06-01 12:43:52,130 p=142936 u=ansible n=ansible | control.example.com | CHANGED | rc=0 >>


2021-06-01 12:44:58,250 p=143565 u=ansible n=ansible | localhost | FAILED | rc=2 >>
[Errno 2] No such file or directory: b'blk': b'blk'

2021-06-01 12:45:04,676 p=143642 u=ansible n=ansible | localhost | FAILED | rc=127 >>
/bin/sh: blk: command not foundnon-zero return code

2021-06-01 12:45:08,407 p=143697 u=ansible n=ansible | localhost | CHANGED | rc=0 >>
/dev/sda1: UUID="6723-A89C" TYPE="vfat" PARTLABEL="EFI System Partition" PARTUUID="f957f2fb-2cf0-481b-b944-52bbf9077bce"
/dev/sda2: UUID="1e4b2b4a-ea26-430e-978c-de3884071e82" TYPE="xfs" PARTUUID="423ca2a1-f532-40ed-801e-c5b8ffe482de"
/dev/sda3: UUID="0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9" TYPE="LVM2_member" PARTUUID="d738623e-710e-4494-bc7f-dd2fa4c6f6e3"
/dev/sr0: UUID="2020-04-04-08-21-15-00" LABEL="RHEL-8-2-0-BaseOS-x86_64" TYPE="iso9660" PTUUID="47055c33" PTTYPE="dos"
/dev/mapper/rhel-root: UUID="e582775b-f787-42fb-a7da-e66ffb7a210a" TYPE="xfs"
/dev/mapper/rhel-swap: UUID="521d3469-ac8d-490e-9c79-a6fd59024de4" TYPE="swap"

2021-06-01 12:45:19,057 p=143796 u=ansible n=ansible | localhost | FAILED | rc=127 >>
/bin/sh: lsdlk: command not foundnon-zero return code

2021-06-01 12:45:23,214 p=143845 u=ansible n=ansible | localhost | CHANGED | rc=0 >>
NAME          MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda             8:0    0   20G  0 disk 
├─sda1          8:1    0  600M  0 part /boot/efi
├─sda2          8:2    0    1G  0 part /boot
└─sda3          8:3    0 18.4G  0 part 
  ├─rhel-root 253:0    0 16.4G  0 lvm  /
  └─rhel-swap 253:1    0    2G  0 lvm  [SWAP]
sr0            11:0    1  7.9G  0 rom  

2021-06-01 12:45:35,707 p=143964 u=ansible n=ansible | control.example.com | CHANGED | rc=0 >>


2021-06-01 12:45:40,686 p=144175 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-01 12:45:40,693 p=144175 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-01 12:45:42,600 p=144175 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:45:42,606 p=144175 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-01 12:45:43,185 p=144175 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:45:43,192 p=144175 u=ansible n=ansible | TASK [install vsftpd] *******************************************************************************************
2021-06-01 12:45:45,549 p=144175 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:45:45,555 p=144175 u=ansible n=ansible | TASK [set up repository directory] ******************************************************************************
2021-06-01 12:45:45,934 p=144175 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:45:45,940 p=144175 u=ansible n=ansible | TASK [mount the install dvd to /var/ftp/repo] *******************************************************************
2021-06-01 12:45:46,310 p=144175 u=ansible n=ansible | changed: [control.example.com]
2021-06-01 12:45:46,316 p=144175 u=ansible n=ansible | TASK [start the vsftpd service] *********************************************************************************
2021-06-01 12:45:46,729 p=144175 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:45:46,731 p=144175 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-01 12:45:46,731 p=144175 u=ansible n=ansible | control.example.com        : ok=6    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-01 12:46:55,636 p=145519 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-01 12:46:55,643 p=145519 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-01 12:46:56,745 p=145519 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:46:56,752 p=145519 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-01 12:46:57,323 p=145519 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:46:57,330 p=145519 u=ansible n=ansible | TASK [install vsftpd] *******************************************************************************************
2021-06-01 12:46:59,652 p=145519 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:46:59,658 p=145519 u=ansible n=ansible | TASK [set up repository directory] ******************************************************************************
2021-06-01 12:47:00,045 p=145519 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:47:00,051 p=145519 u=ansible n=ansible | TASK [mount the install dvd to /var/ftp/repo] *******************************************************************
2021-06-01 12:47:00,442 p=145519 u=ansible n=ansible | changed: [control.example.com]
2021-06-01 12:47:00,448 p=145519 u=ansible n=ansible | TASK [start the vsftpd service] *********************************************************************************
2021-06-01 12:47:00,870 p=145519 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:47:00,871 p=145519 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-01 12:47:00,871 p=145519 u=ansible n=ansible | control.example.com        : ok=6    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-01 12:50:14,608 p=147764 u=ansible n=ansible | localhost | CHANGED | rc=0 >>
# Example config file /etc/vsftpd/vsftpd.conf
#
# The default compiled in settings are fairly paranoid. This sample file
# loosens things up a bit, to make the ftp daemon more usable.
# Please see vsftpd.conf.5 for all compiled in defaults.
#
# READ THIS: This example file is NOT an exhaustive list of vsftpd options.
# Please read the vsftpd.conf.5 manual page to get a full idea of vsftpd's
# capabilities.
#
# Allow anonymous FTP? (Beware - allowed by default if you comment this out).
anonymous_enable=NO
#
# Uncomment this to allow local users to log in.
local_enable=YES
#
# Uncomment this to enable any form of FTP write command.
write_enable=YES
#
# Default umask for local users is 077. You may wish to change this to 022,
# if your users expect that (022 is used by most other ftpd's)
local_umask=022
#
# Uncomment this to allow the anonymous FTP user to upload files. This only
# has an effect if the above global write enable is activated. Also, you will
# obviously need to create a directory writable by the FTP user.
# When SELinux is enforcing check for SE bool allow_ftpd_anon_write, allow_ftpd_full_access
#anon_upload_enable=YES
#
# Uncomment this if you want the anonymous FTP user to be able to create
# new directories.
#anon_mkdir_write_enable=YES
#
# Activate directory messages - messages given to remote users when they
# go into a certain directory.
dirmessage_enable=YES
#
# Activate logging of uploads/downloads.
xferlog_enable=YES
#
# Make sure PORT transfer connections originate from port 20 (ftp-data).
connect_from_port_20=YES
#
# If you want, you can arrange for uploaded anonymous files to be owned by
# a different user. Note! Using "root" for uploaded files is not
# recommended!
#chown_uploads=YES
#chown_username=whoever
#
# You may override where the log file goes if you like. The default is shown
# below.
#xferlog_file=/var/log/xferlog
#
# If you want, you can have your log file in standard ftpd xferlog format.
# Note that the default log file location is /var/log/xferlog in this case.
xferlog_std_format=YES
#
# You may change the default value for timing out an idle session.
#idle_session_timeout=600
#
# You may change the default value for timing out a data connection.
#data_connection_timeout=120
#
# It is recommended that you define on your system a unique user which the
# ftp server can use as a totally isolated and unprivileged user.
#nopriv_user=ftpsecure
#
# Enable this and the server will recognise asynchronous ABOR requests. Not
# recommended for security (the code is non-trivial). Not enabling it,
# however, may confuse older FTP clients.
#async_abor_enable=YES
#
# By default the server will pretend to allow ASCII mode but in fact ignore
# the request. Turn on the below options to have the server actually do ASCII
# mangling on files when in ASCII mode. The vsftpd.conf(5) man page explains
# the behaviour when these options are disabled.
# Beware that on some FTP servers, ASCII support allows a denial of service
# attack (DoS) via the command "SIZE /big/file" in ASCII mode. vsftpd
# predicted this attack and has always been safe, reporting the size of the
# raw file.
# ASCII mangling is a horrible feature of the protocol.
#ascii_upload_enable=YES
#ascii_download_enable=YES
#
# You may fully customise the login banner string:
#ftpd_banner=Welcome to blah FTP service.
#
# You may specify a file of disallowed anonymous e-mail addresses. Apparently
# useful for combatting certain DoS attacks.
#deny_email_enable=YES
# (default follows)
#banned_email_file=/etc/vsftpd/banned_emails
#
# You may specify an explicit list of local users to chroot() to their home
# directory. If chroot_local_user is YES, then this list becomes a list of
# users to NOT chroot().
# (Warning! chroot'ing can be very dangerous. If using chroot, make sure that
# the user does not have write access to the top level directory within the
# chroot)
#chroot_local_user=YES
#chroot_list_enable=YES
# (default follows)
#chroot_list_file=/etc/vsftpd/chroot_list
#
# You may activate the "-R" option to the builtin ls. This is disabled by
# default to avoid remote users being able to cause excessive I/O on large
# sites. However, some broken FTP clients such as "ncftp" and "mirror" assume
# the presence of the "-R" option, so there is a strong case for enabling it.
#ls_recurse_enable=YES
#
# When "listen" directive is enabled, vsftpd runs in standalone mode and
# listens on IPv4 sockets. This directive cannot be used in conjunction
# with the listen_ipv6 directive.
listen=NO
#
# This directive enables listening on IPv6 sockets. By default, listening
# on the IPv6 "any" address (::) will accept connections from both IPv6
# and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6
# sockets. If you want that (perhaps because you want to listen on specific
# addresses) then you must run two copies of vsftpd with two configuration
# files.
# Make sure, that one of the listen options is commented !!
listen_ipv6=YES

pam_service_name=vsftpd
userlist_enable=YES

2021-06-01 12:50:31,226 p=147914 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-01 12:50:31,240 p=147914 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-01 12:50:32,360 p=147914 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:50:32,367 p=147914 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-01 12:50:32,938 p=147914 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:50:32,945 p=147914 u=ansible n=ansible | TASK [install vsftpd] *******************************************************************************************
2021-06-01 12:50:35,293 p=147914 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:50:35,299 p=147914 u=ansible n=ansible | TASK [set up repository directory] ******************************************************************************
2021-06-01 12:50:35,691 p=147914 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:50:35,697 p=147914 u=ansible n=ansible | TASK [mount the install dvd to /var/ftp/repo] *******************************************************************
2021-06-01 12:50:36,068 p=147914 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:50:36,075 p=147914 u=ansible n=ansible | TASK [ensure vsftpd settings via jinja2 template] ***************************************************************
2021-06-01 12:50:36,169 p=147914 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'vsftpd_syslog_enable' is undefined"}
2021-06-01 12:50:36,170 p=147914 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-01 12:50:36,171 p=147914 u=ansible n=ansible | control.example.com        : ok=5    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-01 12:51:45,755 p=149178 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-01 12:51:45,763 p=149178 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-01 12:51:46,873 p=149178 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:51:46,879 p=149178 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-01 12:51:47,461 p=149178 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:51:47,468 p=149178 u=ansible n=ansible | TASK [install vsftpd] *******************************************************************************************
2021-06-01 12:51:49,836 p=149178 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:51:49,842 p=149178 u=ansible n=ansible | TASK [set up repository directory] ******************************************************************************
2021-06-01 12:51:50,243 p=149178 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:51:50,249 p=149178 u=ansible n=ansible | TASK [mount the install dvd to /var/ftp/repo] *******************************************************************
2021-06-01 12:51:50,626 p=149178 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:51:50,633 p=149178 u=ansible n=ansible | TASK [ensure vsftpd settings via jinja2 template] ***************************************************************
2021-06-01 12:51:51,393 p=149178 u=ansible n=ansible | changed: [control.example.com]
2021-06-01 12:51:51,399 p=149178 u=ansible n=ansible | TASK [start the vsftpd service] *********************************************************************************
2021-06-01 12:51:51,818 p=149178 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:51:51,819 p=149178 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-01 12:51:51,819 p=149178 u=ansible n=ansible | control.example.com        : ok=7    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-01 12:52:00,135 p=150296 u=ansible n=ansible | localhost | CHANGED | rc=0 >>
anonymous_enable=YES

2021-06-01 12:52:44,571 p=150613 u=ansible n=ansible | localhost | CHANGED => {
    "ansible_facts": {
        "pkg_mgr": "dnf"
    },
    "changed": true,
    "msg": "",
    "rc": 0,
    "results": [
        "Installed: ftp-0.17-78.el8.x86_64"
    ]
}
2021-06-01 12:55:07,075 p=152044 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-01 12:55:07,082 p=152044 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-01 12:55:08,194 p=152044 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:55:08,200 p=152044 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-01 12:55:08,768 p=152044 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:55:08,774 p=152044 u=ansible n=ansible | TASK [install vsftpd] *******************************************************************************************
2021-06-01 12:55:11,141 p=152044 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:55:11,147 p=152044 u=ansible n=ansible | TASK [set up repository directory] ******************************************************************************
2021-06-01 12:55:11,551 p=152044 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:55:11,557 p=152044 u=ansible n=ansible | TASK [mount the install dvd to /var/ftp/repo] *******************************************************************
2021-06-01 12:55:11,933 p=152044 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:55:11,940 p=152044 u=ansible n=ansible | TASK [ensure vsftpd settings via jinja2 template] ***************************************************************
2021-06-01 12:55:12,686 p=152044 u=ansible n=ansible | changed: [control.example.com]
2021-06-01 12:55:12,693 p=152044 u=ansible n=ansible | TASK [start the vsftpd service] *********************************************************************************
2021-06-01 12:55:13,108 p=152044 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:55:13,110 p=152044 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-01 12:55:13,110 p=152044 u=ansible n=ansible | control.example.com        : ok=7    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-01 12:55:18,075 p=153120 u=ansible n=ansible | localhost | SUCCESS => {
    "ansible_facts": {
        "pkg_mgr": "dnf"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-01 12:55:21,244 p=153204 u=ansible n=ansible | localhost | CHANGED | rc=0 >>
anonymous_enable=YES
anon_root=/var/ftp/repo
no_anon_password=YES
hide_ids=YES
pasv_min_port=40000
pasv_max_port=50000

2021-06-01 12:55:55,406 p=153445 u=ansible n=ansible | localhost | CHANGED => {
    "ansible_facts": {
        "pkg_mgr": "dnf"
    },
    "changed": true,
    "msg": "",
    "rc": 0,
    "results": [
        "Removed: vsftpd-3.0.3-33.el8.x86_64"
    ]
}
2021-06-01 12:56:04,272 p=153662 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-01 12:56:04,279 p=153662 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-01 12:56:05,223 p=153662 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:56:05,229 p=153662 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-01 12:56:05,813 p=153662 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:56:05,820 p=153662 u=ansible n=ansible | TASK [install vsftpd] *******************************************************************************************
2021-06-01 12:56:09,013 p=153662 u=ansible n=ansible | changed: [control.example.com]
2021-06-01 12:56:09,019 p=153662 u=ansible n=ansible | TASK [set up repository directory] ******************************************************************************
2021-06-01 12:56:09,407 p=153662 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:56:09,414 p=153662 u=ansible n=ansible | TASK [mount the install dvd to /var/ftp/repo] *******************************************************************
2021-06-01 12:56:09,798 p=153662 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 12:56:09,805 p=153662 u=ansible n=ansible | TASK [ensure vsftpd settings via jinja2 template] ***************************************************************
2021-06-01 12:56:10,538 p=153662 u=ansible n=ansible | changed: [control.example.com]
2021-06-01 12:56:10,544 p=153662 u=ansible n=ansible | TASK [start the vsftpd service] *********************************************************************************
2021-06-01 12:56:11,085 p=153662 u=ansible n=ansible | changed: [control.example.com]
2021-06-01 12:56:11,086 p=153662 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-01 12:56:11,086 p=153662 u=ansible n=ansible | control.example.com        : ok=7    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-01 12:56:15,081 p=154880 u=ansible n=ansible | localhost | CHANGED | rc=0 >>
anonymous_enable=YES
anon_root=/var/ftp/repo
no_anon_password=YES
hide_ids=YES
pasv_min_port=40000
pasv_max_port=50000

2021-06-01 13:00:32,191 p=156717 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  found a tab character that violate intendation

The error appears to be in '/home/ansible/setupreposerver.yml': line 6, column 1, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    anonymous_enable: yes
	  local_enable: yes
^ here
There appears to be a tab character at the start of the line.

YAML does not use tabs for formatting. Tabs should be replaced with spaces.

For example:
    - name: update tooling
      vars:
        version: 1.2.3
#    ^--- there is a tab there.

Should be written as:
    - name: update tooling
      vars:
        version: 1.2.3
# ^--- all spaces here.

2021-06-01 13:00:58,390 p=156906 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-01 13:00:58,398 p=156906 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-01 13:00:59,507 p=156906 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 13:00:59,513 p=156906 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-01 13:01:00,086 p=156906 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 13:01:00,093 p=156906 u=ansible n=ansible | TASK [install vsftpd] *******************************************************************************************
2021-06-01 13:01:02,513 p=156906 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 13:01:02,519 p=156906 u=ansible n=ansible | TASK [set up repository directory] ******************************************************************************
2021-06-01 13:01:02,898 p=156906 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 13:01:02,904 p=156906 u=ansible n=ansible | TASK [mount the install dvd to /var/ftp/repo] *******************************************************************
2021-06-01 13:01:03,276 p=156906 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 13:01:03,283 p=156906 u=ansible n=ansible | TASK [ensure vsftpd settings via jinja2 template] ***************************************************************
2021-06-01 13:01:03,894 p=156906 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 13:01:03,900 p=156906 u=ansible n=ansible | TASK [start the vsftpd service] *********************************************************************************
2021-06-01 13:01:04,313 p=156906 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 13:01:04,314 p=156906 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-01 13:01:04,314 p=156906 u=ansible n=ansible | control.example.com        : ok=7    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-01 13:02:02,810 p=158381 u=ansible n=ansible | localhost | CHANGED | rc=0 >>
anonymous_enable=YES
anon_root=/var/ftp/repo
no_anon_password=YES
hide_ids=YES
pasv_min_port=40000
pasv_max_port=50000

2021-06-01 13:03:09,521 p=158965 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-01 13:03:09,528 p=158965 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-01 13:03:10,628 p=158965 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 13:03:10,635 p=158965 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-01 13:03:11,215 p=158965 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 13:03:11,222 p=158965 u=ansible n=ansible | TASK [install vsftpd] *******************************************************************************************
2021-06-01 13:03:13,568 p=158965 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 13:03:13,574 p=158965 u=ansible n=ansible | TASK [set up repository directory] ******************************************************************************
2021-06-01 13:03:13,962 p=158965 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 13:03:13,973 p=158965 u=ansible n=ansible | TASK [mount the install dvd to /var/ftp/repo] *******************************************************************
2021-06-01 13:03:14,346 p=158965 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 13:03:14,352 p=158965 u=ansible n=ansible | TASK [ensure vsftpd settings via jinja2 template] ***************************************************************
2021-06-01 13:03:15,109 p=158965 u=ansible n=ansible | changed: [control.example.com]
2021-06-01 13:03:15,115 p=158965 u=ansible n=ansible | TASK [start the vsftpd service] *********************************************************************************
2021-06-01 13:03:15,530 p=158965 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 13:03:15,532 p=158965 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-01 13:03:15,532 p=158965 u=ansible n=ansible | control.example.com        : ok=7    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-01 13:03:34,362 p=160166 u=ansible n=ansible | localhost | CHANGED | rc=0 >>
anonymous_enable=True
local_enable=True
write_enable=True
anon_upload_enable=True
dirmessage_enable=YES
xferlog_enable=YES
connect_from_port_20=YES
pam_service_name=vsftpd
userlist_enable=YES

2021-06-01 13:06:13,862 p=161322 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-01 13:06:13,870 p=161322 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-01 13:06:14,983 p=161322 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 13:06:14,990 p=161322 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-01 13:06:15,572 p=161322 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 13:06:15,578 p=161322 u=ansible n=ansible | TASK [install vsftpd] *******************************************************************************************
2021-06-01 13:06:17,926 p=161322 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 13:06:17,933 p=161322 u=ansible n=ansible | TASK [set up repository directory] ******************************************************************************
2021-06-01 13:06:18,318 p=161322 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 13:06:18,325 p=161322 u=ansible n=ansible | TASK [mount the install dvd to /var/ftp/repo] *******************************************************************
2021-06-01 13:06:18,712 p=161322 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 13:06:18,718 p=161322 u=ansible n=ansible | TASK [createrepo on the new repo] *******************************************************************************
2021-06-01 13:06:19,084 p=161322 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": true, "cmd": "createrepo /var/ftp/repo", "delta": "0:00:00.002436", "end": "2021-06-01 13:06:19.047818", "msg": "non-zero return code", "rc": 127, "start": "2021-06-01 13:06:19.045382", "stderr": "/bin/sh: createrepo: command not found", "stderr_lines": ["/bin/sh: createrepo: command not found"], "stdout": "", "stdout_lines": []}
2021-06-01 13:06:19,085 p=161322 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-01 13:06:19,085 p=161322 u=ansible n=ansible | control.example.com        : ok=5    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-01 13:07:22,577 p=162643 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  did not find expected key

The error appears to be in '/home/ansible/setupreposerver.yml': line 35, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      state: latest
    - name: createrepo on the new repo
    ^ here

2021-06-01 13:07:47,964 p=162825 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-01 13:07:47,972 p=162825 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-01 13:07:49,067 p=162825 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 13:07:49,073 p=162825 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-01 13:07:49,655 p=162825 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 13:07:49,661 p=162825 u=ansible n=ansible | TASK [install vsftpd] *******************************************************************************************
2021-06-01 13:07:52,019 p=162825 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 13:07:52,025 p=162825 u=ansible n=ansible | TASK [set up repository directory] ******************************************************************************
2021-06-01 13:07:52,419 p=162825 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 13:07:52,425 p=162825 u=ansible n=ansible | TASK [mount the install dvd to /var/ftp/repo] *******************************************************************
2021-06-01 13:07:52,804 p=162825 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 13:07:52,811 p=162825 u=ansible n=ansible | TASK [install createrepo] ***************************************************************************************
2021-06-01 13:07:57,103 p=162825 u=ansible n=ansible | changed: [control.example.com]
2021-06-01 13:07:57,110 p=162825 u=ansible n=ansible | TASK [createrepo on the new repo] *******************************************************************************
2021-06-01 13:07:57,497 p=162825 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": true, "cmd": "createrepo /var/ftp/repo", "delta": "0:00:00.010193", "end": "2021-06-01 13:07:57.460329", "msg": "non-zero return code", "rc": 1, "start": "2021-06-01 13:07:57.450136", "stderr": "Error while creating temporary repodata directory: /var/ftp/repo/.repodata/: Read-only file system", "stderr_lines": ["Error while creating temporary repodata directory: /var/ftp/repo/.repodata/: Read-only file system"], "stdout": "", "stdout_lines": []}
2021-06-01 13:07:57,498 p=162825 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-01 13:07:57,498 p=162825 u=ansible n=ansible | control.example.com        : ok=6    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-01 14:47:54,268 p=169552 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-01 14:47:54,276 p=169552 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-01 14:47:56,425 p=169552 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 14:47:56,431 p=169552 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-01 14:47:57,006 p=169552 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 14:47:57,012 p=169552 u=ansible n=ansible | TASK [install vsftpd] *******************************************************************************************
2021-06-01 14:47:59,459 p=169552 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 14:47:59,465 p=169552 u=ansible n=ansible | TASK [set up repository directory] ******************************************************************************
2021-06-01 14:47:59,844 p=169552 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 14:47:59,850 p=169552 u=ansible n=ansible | TASK [mount the install dvd to /var/ftp/repo] *******************************************************************
2021-06-01 14:48:00,220 p=169552 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 14:48:00,227 p=169552 u=ansible n=ansible | TASK [ensure vsftpd settings via jinja2 template] ***************************************************************
2021-06-01 14:48:00,983 p=169552 u=ansible n=ansible | changed: [control.example.com]
2021-06-01 14:48:00,989 p=169552 u=ansible n=ansible | TASK [start the vsftpd service] *********************************************************************************
2021-06-01 14:48:01,409 p=169552 u=ansible n=ansible | ok: [control.example.com]
2021-06-01 14:48:01,410 p=169552 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-01 14:48:01,411 p=169552 u=ansible n=ansible | control.example.com        : ok=7    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-01 14:48:08,835 p=170673 u=ansible n=ansible | localhost | CHANGED | rc=0 >>
# Ansible managed
anonymous_enable=True
local_enable=True
write_enable=True
anon_upload_enable=True
dirmessage_enable=YES
xferlog_enable=YES
connect_from_port_20=YES
pam_service_name=vsftpd
userlist_enable=YES

2021-06-02 12:26:11,864 p=286217 u=ansible n=ansible | localhost | CHANGED | rc=0 >>
-rw-------. 1 root root 210 Jun  1 14:48 /etc/vsftpd/vsftpd.conf

2021-06-02 12:26:57,267 p=286574 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-02 12:26:57,274 p=286574 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-02 12:26:58,451 p=286574 u=ansible n=ansible | ok: [control.example.com]
2021-06-02 12:26:58,458 p=286574 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-02 12:26:59,051 p=286574 u=ansible n=ansible | ok: [control.example.com]
2021-06-02 12:26:59,058 p=286574 u=ansible n=ansible | TASK [install vsftpd] *******************************************************************************************
2021-06-02 12:27:01,657 p=286574 u=ansible n=ansible | ok: [control.example.com]
2021-06-02 12:27:01,664 p=286574 u=ansible n=ansible | TASK [set up repository directory] ******************************************************************************
2021-06-02 12:27:02,055 p=286574 u=ansible n=ansible | ok: [control.example.com]
2021-06-02 12:27:02,062 p=286574 u=ansible n=ansible | TASK [mount the install dvd to /var/ftp/repo] *******************************************************************
2021-06-02 12:27:02,454 p=286574 u=ansible n=ansible | ok: [control.example.com]
2021-06-02 12:27:02,460 p=286574 u=ansible n=ansible | TASK [ensure vsftpd settings via jinja2 template] ***************************************************************
2021-06-02 12:27:02,540 p=286574 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "Could not find or access 'vsftpd.j2'\nSearched in:\n\t/home/ansible/templates/vsftpd.j2\n\t/home/ansible/vsftpd.j2\n\t/home/ansible/templates/vsftpd.j2\n\t/home/ansible/vsftpd.j2 on the Ansible Controller.\nIf you are using a module and expect the file to exist on the remote, see the remote_src option"}
2021-06-02 12:27:02,541 p=286574 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-02 12:27:02,541 p=286574 u=ansible n=ansible | control.example.com        : ok=5    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-02 12:27:18,697 p=287470 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-02 12:27:18,705 p=287470 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-02 12:27:19,616 p=287470 u=ansible n=ansible | ok: [control.example.com]
2021-06-02 12:27:19,623 p=287470 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-02 12:27:20,204 p=287470 u=ansible n=ansible | ok: [control.example.com]
2021-06-02 12:27:20,211 p=287470 u=ansible n=ansible | TASK [install vsftpd] *******************************************************************************************
2021-06-02 12:27:22,573 p=287470 u=ansible n=ansible | ok: [control.example.com]
2021-06-02 12:27:22,580 p=287470 u=ansible n=ansible | TASK [set up repository directory] ******************************************************************************
2021-06-02 12:27:22,970 p=287470 u=ansible n=ansible | ok: [control.example.com]
2021-06-02 12:27:22,976 p=287470 u=ansible n=ansible | TASK [mount the install dvd to /var/ftp/repo] *******************************************************************
2021-06-02 12:27:23,356 p=287470 u=ansible n=ansible | ok: [control.example.com]
2021-06-02 12:27:23,363 p=287470 u=ansible n=ansible | TASK [ensure vsftpd settings via jinja2 template] ***************************************************************
2021-06-02 12:27:23,996 p=287470 u=ansible n=ansible | changed: [control.example.com]
2021-06-02 12:27:24,002 p=287470 u=ansible n=ansible | TASK [start the vsftpd service] *********************************************************************************
2021-06-02 12:27:24,445 p=287470 u=ansible n=ansible | ok: [control.example.com]
2021-06-02 12:27:24,447 p=287470 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-02 12:27:24,447 p=287470 u=ansible n=ansible | control.example.com        : ok=7    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-02 12:27:28,836 p=288510 u=ansible n=ansible | localhost | CHANGED | rc=0 >>
---x-wx--T. 1 root root 210 Jun  1 14:48 /etc/vsftpd/vsftpd.conf

2021-06-02 12:27:37,055 p=288601 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-02 12:27:37,063 p=288601 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-02 12:27:37,982 p=288601 u=ansible n=ansible | ok: [control.example.com]
2021-06-02 12:27:37,989 p=288601 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-02 12:27:38,164 p=288601 u=ansible n=ansible |  [ERROR]: User interrupted execution

2021-06-02 12:27:47,395 p=288906 u=ansible n=ansible | PLAY [set up the control host as a repository] ******************************************************************
2021-06-02 12:27:47,403 p=288906 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-02 12:27:48,315 p=288906 u=ansible n=ansible | ok: [control.example.com]
2021-06-02 12:27:48,324 p=288906 u=ansible n=ansible | TASK [turn off the firewalld service] ***************************************************************************
2021-06-02 12:27:48,903 p=288906 u=ansible n=ansible | ok: [control.example.com]
2021-06-02 12:27:48,910 p=288906 u=ansible n=ansible | TASK [install vsftpd] *******************************************************************************************
2021-06-02 12:27:51,239 p=288906 u=ansible n=ansible | ok: [control.example.com]
2021-06-02 12:27:51,245 p=288906 u=ansible n=ansible | TASK [set up repository directory] ******************************************************************************
2021-06-02 12:27:51,642 p=288906 u=ansible n=ansible | ok: [control.example.com]
2021-06-02 12:27:51,649 p=288906 u=ansible n=ansible | TASK [mount the install dvd to /var/ftp/repo] *******************************************************************
2021-06-02 12:27:52,037 p=288906 u=ansible n=ansible | ok: [control.example.com]
2021-06-02 12:27:52,044 p=288906 u=ansible n=ansible | TASK [ensure vsftpd settings via jinja2 template] ***************************************************************
2021-06-02 12:27:52,684 p=288906 u=ansible n=ansible | changed: [control.example.com]
2021-06-02 12:27:52,693 p=288906 u=ansible n=ansible | TASK [start the vsftpd service] *********************************************************************************
2021-06-02 12:27:53,119 p=288906 u=ansible n=ansible | ok: [control.example.com]
2021-06-02 12:27:53,121 p=288906 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-02 12:27:53,121 p=288906 u=ansible n=ansible | control.example.com        : ok=7    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-02 12:27:55,813 p=289939 u=ansible n=ansible | localhost | CHANGED | rc=0 >>
-rw-------. 1 root root 210 Jun  1 14:48 /etc/vsftpd/vsftpd.conf

2021-06-02 12:30:38,818 p=291105 u=ansible n=ansible | ERROR! No argument passed to command module
2021-06-02 12:30:52,483 p=291185 u=ansible n=ansible | ERROR! No argument passed to command module
2021-06-02 12:31:27,092 p=291428 u=ansible n=ansible | ansible1.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: root@ansible1.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-02 12:31:56,517 p=291650 u=ansible n=ansible | ansible1.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: root@ansible1.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-02 12:32:32,174 p=291900 u=ansible n=ansible | [WARNING]: Consider using the file module with state=directory rather than running 'mkdir'.  If you need to use
command because file is insufficient you can add 'warn: false' to this command task or set
'command_warnings=False' in ansible.cfg to get rid of this message.

2021-06-02 12:32:32,174 p=291900 u=ansible n=ansible | ansible1.example.com | CHANGED | rc=0 >>


2021-06-02 12:33:00,625 p=292134 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "gid": 0,
    "group": "root",
    "mode": "0755",
    "owner": "root",
    "path": "/etc/yum.repos.d/oldrepo",
    "secontext": "unconfined_u:object_r:system_conf_t:s0",
    "size": 6,
    "state": "directory",
    "uid": 0
}
2021-06-02 12:36:53,327 p=293819 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "checksum": "ccf907e03cf0fbbc883391166f63a346ea915251",
    "dest": "/etc/yum.repos.d/rhce.repo",
    "gid": 0,
    "group": "root",
    "md5sum": "8541ca12804ec738a7082f94e4bebd26",
    "mode": "0644",
    "owner": "root",
    "secontext": "system_u:object_r:system_conf_t:s0",
    "size": 339,
    "src": "/root/.ansible/tmp/ansible-tmp-1622651812.5093126-293846-269402925404207/source",
    "state": "file",
    "uid": 0
}
2021-06-02 12:39:30,105 p=294956 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/*.repo",
    "state": "absent"
}
2021-06-02 12:40:31,080 p=295415 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-02 12:43:34,986 p=296709 u=ansible n=ansible | ansible1.example.com | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Failed to download metadata for repo 'rhel-8-for-x86_64-baseos-rpms': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried",
    "rc": 1,
    "results": []
}
2021-06-02 12:44:32,116 p=297162 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "checksum": "715ba578bbaa4d0dbebde789bd14e2aa4bb27756",
    "dest": "/etc/yum.repos.d/rhce.repo",
    "gid": 0,
    "group": "root",
    "md5sum": "25a1856e5967ff88b67a6164b463c804",
    "mode": "0644",
    "owner": "root",
    "secontext": "system_u:object_r:system_conf_t:s0",
    "size": 792,
    "src": "/root/.ansible/tmp/ansible-tmp-1622652271.337498-297189-211954708848697/source",
    "state": "file",
    "uid": 0
}
2021-06-02 12:45:08,674 p=297244 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "msg": "",
    "rc": 0,
    "results": [
        "Installed: ftp-0.17-78.el8.x86_64"
    ]
}
2021-06-02 12:45:28,498 p=297622 u=ansible n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "checksum": "715ba578bbaa4d0dbebde789bd14e2aa4bb27756",
    "dest": "/etc/yum.repos.d/rhce.repo",
    "gid": 0,
    "group": "root",
    "md5sum": "25a1856e5967ff88b67a6164b463c804",
    "mode": "0644",
    "owner": "root",
    "secontext": "system_u:object_r:system_conf_t:s0",
    "size": 792,
    "src": "/root/.ansible/tmp/ansible-tmp-1622652327.2122753-297642-176952090440806/source",
    "state": "file",
    "uid": 0
}
2021-06-02 12:45:37,937 p=297728 u=ansible n=ansible | ansible3.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "checksum": "715ba578bbaa4d0dbebde789bd14e2aa4bb27756",
    "dest": "/etc/yum.repos.d/rhce.repo",
    "gid": 0,
    "group": "root",
    "md5sum": "25a1856e5967ff88b67a6164b463c804",
    "mode": "0644",
    "owner": "root",
    "secontext": "system_u:object_r:system_conf_t:s0",
    "size": 792,
    "src": "/root/.ansible/tmp/ansible-tmp-1622652336.9418523-297755-124172951650922/source",
    "state": "file",
    "uid": 0
}
2021-06-02 12:45:47,773 p=297827 u=ansible n=ansible | ansible4.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "checksum": "715ba578bbaa4d0dbebde789bd14e2aa4bb27756",
    "dest": "/etc/yum.repos.d/rhce.repo",
    "gid": 0,
    "group": "root",
    "md5sum": "25a1856e5967ff88b67a6164b463c804",
    "mode": "0644",
    "owner": "root",
    "secontext": "system_u:object_r:system_conf_t:s0",
    "size": 792,
    "src": "/root/.ansible/tmp/ansible-tmp-1622652345.5392637-297854-146796855160103/source",
    "state": "file",
    "uid": 0
}
2021-06-02 12:45:57,812 p=297961 u=ansible n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-02 12:46:04,745 p=298038 u=ansible n=ansible | ansible3.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-02 12:46:11,473 p=298115 u=ansible n=ansible | ansible4.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-02 12:46:54,667 p=298213 u=ansible n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "msg": "",
    "rc": 0,
    "results": [
        "Installed: ftp-0.17-78.el8.x86_64"
    ]
}
2021-06-02 12:48:59,324 p=298550 u=ansible n=ansible | ansible3.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Invalid/incorrect password: Permission denied, please try again.",
    "unreachable": true
}
2021-06-02 12:49:44,305 p=299417 u=ansible n=ansible | ansible3.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "msg": "",
    "rc": 0,
    "results": [
        "Installed: ftp-0.17-78.el8.x86_64"
    ]
}
2021-06-02 12:50:35,696 p=299778 u=ansible n=ansible | ansible4.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "msg": "",
    "rc": 0,
    "results": [
        "Installed: ftp-0.17-78.el8.x86_64"
    ]
}
2021-06-05 09:38:22,113 p=338251 u=ansible n=ansible | ansible2.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ansible@ansible2.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-05 09:38:22,258 p=338251 u=ansible n=ansible | ansible4.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ansible@ansible4.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-05 09:38:22,282 p=338251 u=ansible n=ansible | ansible3.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ansible@ansible3.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-05 09:38:22,586 p=338251 u=ansible n=ansible | control.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-05 09:38:23,765 p=338251 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-05 11:04:15,068 p=351994 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-05 11:04:19,246 p=352063 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "checksum": "ccf907e03cf0fbbc883391166f63a346ea915251",
    "dest": "/etc/yum.repos.d/rhce.repo",
    "gid": 0,
    "group": "root",
    "md5sum": "8541ca12804ec738a7082f94e4bebd26",
    "mode": "0644",
    "owner": "root",
    "secontext": "system_u:object_r:system_conf_t:s0",
    "size": 339,
    "src": "/root/.ansible/tmp/ansible-tmp-1622905458.2850742-352090-205807024291655/source",
    "state": "file",
    "uid": 0
}
2021-06-05 11:04:24,533 p=352131 u=ansible n=ansible | ansible1.example.com | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Failed to download metadata for repo 'rhel-8-for-x86_64-baseos-rpms': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried",
    "rc": 1,
    "results": []
}
2021-06-05 11:07:16,453 p=353372 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-05 11:07:20,821 p=353431 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "checksum": "ccf907e03cf0fbbc883391166f63a346ea915251",
    "dest": "/etc/yum.repos.d/rhce.repo",
    "gid": 0,
    "group": "root",
    "mode": "0644",
    "owner": "root",
    "path": "/etc/yum.repos.d/rhce.repo",
    "secontext": "system_u:object_r:system_conf_t:s0",
    "size": 339,
    "state": "file",
    "uid": 0
}
2021-06-05 11:07:26,781 p=353494 u=ansible n=ansible | ansible1.example.com | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Failed to download metadata for repo 'rhel-8-for-x86_64-baseos-rpms': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried",
    "rc": 1,
    "results": []
}
2021-06-05 11:10:09,234 p=354674 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-05 11:15:21,701 p=354733 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "checksum": "ccf907e03cf0fbbc883391166f63a346ea915251",
    "dest": "/etc/yum.repos.d/rhce.repo",
    "gid": 0,
    "group": "root",
    "mode": "0644",
    "owner": "root",
    "path": "/etc/yum.repos.d/rhce.repo",
    "secontext": "system_u:object_r:system_conf_t:s0",
    "size": 339,
    "state": "file",
    "uid": 0
}
2021-06-05 11:15:26,492 p=356943 u=ansible n=ansible | ansible1.example.com | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Failed to download metadata for repo 'rhel-8-for-x86_64-baseos-rpms': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried",
    "rc": 1,
    "results": []
}
2021-06-05 11:15:42,232 p=357013 u=ansible n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-05 11:15:47,159 p=357156 u=ansible n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "checksum": "ccf907e03cf0fbbc883391166f63a346ea915251",
    "dest": "/etc/yum.repos.d/rhce.repo",
    "gid": 0,
    "group": "root",
    "md5sum": "8541ca12804ec738a7082f94e4bebd26",
    "mode": "0644",
    "owner": "root",
    "secontext": "system_u:object_r:system_conf_t:s0",
    "size": 339,
    "src": "/root/.ansible/tmp/ansible-tmp-1622906146.2441783-357190-193541007635207/source",
    "state": "file",
    "uid": 0
}
2021-06-05 11:15:52,415 p=357231 u=ansible n=ansible | ansible2.example.com | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Failed to download metadata for repo 'rhel-8-for-x86_64-baseos-rpms': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried",
    "rc": 1,
    "results": []
}
2021-06-05 11:15:58,192 p=357301 u=ansible n=ansible |  [ERROR]: User interrupted execution

2021-06-05 11:16:58,329 p=357768 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-05 11:17:01,433 p=357820 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "checksum": "715ba578bbaa4d0dbebde789bd14e2aa4bb27756",
    "dest": "/etc/yum.repos.d/redpen.repo",
    "gid": 0,
    "group": "root",
    "md5sum": "25a1856e5967ff88b67a6164b463c804",
    "mode": "0644",
    "owner": "root",
    "secontext": "system_u:object_r:system_conf_t:s0",
    "size": 792,
    "src": "/root/.ansible/tmp/ansible-tmp-1622906220.6921816-357840-173187898664959/source",
    "state": "file",
    "uid": 0
}
2021-06-05 11:17:07,749 p=357881 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-05 11:17:12,299 p=357965 u=ansible n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-05 11:17:15,320 p=358024 u=ansible n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "checksum": "715ba578bbaa4d0dbebde789bd14e2aa4bb27756",
    "dest": "/etc/yum.repos.d/redpen.repo",
    "gid": 0,
    "group": "root",
    "md5sum": "25a1856e5967ff88b67a6164b463c804",
    "mode": "0644",
    "owner": "root",
    "secontext": "system_u:object_r:system_conf_t:s0",
    "size": 792,
    "src": "/root/.ansible/tmp/ansible-tmp-1622906234.5841289-358044-11378314543072/source",
    "state": "file",
    "uid": 0
}
2021-06-05 11:17:21,678 p=358085 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-05 11:19:11,932 p=358162 u=ansible n=ansible | ansible3.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-05 11:19:15,128 p=358964 u=ansible n=ansible | ansible3.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "checksum": "715ba578bbaa4d0dbebde789bd14e2aa4bb27756",
    "dest": "/etc/yum.repos.d/redpen.repo",
    "gid": 0,
    "group": "root",
    "md5sum": "25a1856e5967ff88b67a6164b463c804",
    "mode": "0644",
    "owner": "root",
    "secontext": "system_u:object_r:system_conf_t:s0",
    "size": 792,
    "src": "/root/.ansible/tmp/ansible-tmp-1622906354.3771226-358984-157887380708198/source",
    "state": "file",
    "uid": 0
}
2021-06-05 11:19:22,371 p=359025 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-05 11:19:26,646 p=359109 u=ansible n=ansible | ansible4.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-05 11:19:29,726 p=359168 u=ansible n=ansible | ansible4.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "checksum": "715ba578bbaa4d0dbebde789bd14e2aa4bb27756",
    "dest": "/etc/yum.repos.d/redpen.repo",
    "gid": 0,
    "group": "root",
    "md5sum": "25a1856e5967ff88b67a6164b463c804",
    "mode": "0644",
    "owner": "root",
    "secontext": "system_u:object_r:system_conf_t:s0",
    "size": 792,
    "src": "/root/.ansible/tmp/ansible-tmp-1622906368.9814837-359195-161604173028439/source",
    "state": "file",
    "uid": 0
}
2021-06-05 11:19:37,559 p=359230 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-05 13:19:50,987 p=360884 u=ansible n=ansible | ansible1.example.com | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "failures": [
        "No package vsftp available."
    ],
    "msg": "Failed to install some of the specified packages",
    "rc": 1,
    "results": []
}
2021-06-05 13:19:56,461 p=360976 u=ansible n=ansible |  [ERROR]: User interrupted execution

2021-06-05 13:20:59,980 p=361402 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "msg": "",
    "rc": 0,
    "results": [
        "Installed: vsftpd-3.0.3-33.el8.x86_64"
    ]
}
2021-06-05 13:21:14,118 p=361549 u=ansible n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "msg": "",
    "rc": 0,
    "results": [
        "Installed: vsftpd-3.0.3-33.el8.x86_64"
    ]
}
2021-06-05 13:21:29,576 p=361685 u=ansible n=ansible | ansible3.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "msg": "",
    "rc": 0,
    "results": [
        "Installed: vsftpd-3.0.3-33.el8.x86_64"
    ]
}
2021-06-05 13:21:45,085 p=361835 u=ansible n=ansible | ansible4.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "msg": "",
    "rc": 0,
    "results": [
        "Installed: vsftpd-3.0.3-33.el8.x86_64"
    ]
}
2021-06-05 13:22:49,524 p=362435 u=ansible n=ansible | localhost | FAILED! => {
    "changed": false,
    "msg": "value of state must be one of: reloaded, restarted, started, stopped, got: enabled"
}
2021-06-05 13:22:55,614 p=362520 u=ansible n=ansible | localhost | SUCCESS => {
    "changed": false,
    "name": "vsftpd",
    "state": "started",
    "status": {
        "ActiveEnterTimestamp": "Tue 2021-06-01 12:56:11 EDT",
        "ActiveEnterTimestampMonotonic": "253047317790",
        "ActiveExitTimestampMonotonic": "0",
        "ActiveState": "active",
        "After": "systemd-journald.socket sysinit.target network-online.target basic.target system.slice",
        "AllowIsolate": "no",
        "AllowedCPUs": "",
        "AllowedMemoryNodes": "",
        "AmbientCapabilities": "",
        "AssertResult": "yes",
        "AssertTimestamp": "Tue 2021-06-01 12:56:11 EDT",
        "AssertTimestampMonotonic": "253047313116",
        "Before": "shutdown.target multi-user.target",
        "BlockIOAccounting": "no",
        "BlockIOWeight": "[not set]",
        "CPUAccounting": "no",
        "CPUAffinity": "",
        "CPUQuotaPerSecUSec": "infinity",
        "CPUSchedulingPolicy": "0",
        "CPUSchedulingPriority": "0",
        "CPUSchedulingResetOnFork": "no",
        "CPUShares": "[not set]",
        "CPUUsageNSec": "[not set]",
        "CPUWeight": "[not set]",
        "CacheDirectoryMode": "0755",
        "CanIsolate": "no",
        "CanReload": "no",
        "CanStart": "yes",
        "CanStop": "yes",
        "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend",
        "CollectMode": "inactive",
        "ConditionResult": "yes",
        "ConditionTimestamp": "Tue 2021-06-01 12:56:11 EDT",
        "ConditionTimestampMonotonic": "253047313116",
        "ConfigurationDirectoryMode": "0755",
        "Conflicts": "shutdown.target",
        "ControlGroup": "/system.slice/vsftpd.service",
        "ControlPID": "0",
        "DefaultDependencies": "yes",
        "Delegate": "no",
        "Description": "Vsftpd ftp daemon",
        "DevicePolicy": "auto",
        "DynamicUser": "no",
        "EffectiveCPUs": "",
        "EffectiveMemoryNodes": "",
        "ExecMainCode": "0",
        "ExecMainExitTimestampMonotonic": "0",
        "ExecMainPID": "154839",
        "ExecMainStartTimestamp": "Tue 2021-06-01 12:56:11 EDT",
        "ExecMainStartTimestampMonotonic": "253047317779",
        "ExecMainStatus": "0",
        "ExecStart": "{ path=/usr/sbin/vsftpd ; argv[]=/usr/sbin/vsftpd /etc/vsftpd/vsftpd.conf ; ignore_errors=no ; start_time=[Tue 2021-06-01 12:56:11 EDT] ; stop_time=[Tue 2021-06-01 12:56:11 EDT] ; pid=154838 ; code=exited ; status=0 }",
        "FailureAction": "none",
        "FileDescriptorStoreMax": "0",
        "FragmentPath": "/usr/lib/systemd/system/vsftpd.service",
        "GID": "[not set]",
        "GuessMainPID": "yes",
        "IOAccounting": "no",
        "IOSchedulingClass": "0",
        "IOSchedulingPriority": "0",
        "IOWeight": "[not set]",
        "IPAccounting": "no",
        "IPEgressBytes": "18446744073709551615",
        "IPEgressPackets": "18446744073709551615",
        "IPIngressBytes": "18446744073709551615",
        "IPIngressPackets": "18446744073709551615",
        "Id": "vsftpd.service",
        "IgnoreOnIsolate": "no",
        "IgnoreSIGPIPE": "yes",
        "InactiveEnterTimestampMonotonic": "0",
        "InactiveExitTimestamp": "Tue 2021-06-01 12:56:11 EDT",
        "InactiveExitTimestampMonotonic": "253047313649",
        "InvocationID": "80a12d3ed374438daf816cb4a283d53e",
        "JobRunningTimeoutUSec": "infinity",
        "JobTimeoutAction": "none",
        "JobTimeoutUSec": "infinity",
        "KeyringMode": "private",
        "KillMode": "control-group",
        "KillSignal": "15",
        "LimitAS": "infinity",
        "LimitASSoft": "infinity",
        "LimitCORE": "infinity",
        "LimitCORESoft": "infinity",
        "LimitCPU": "infinity",
        "LimitCPUSoft": "infinity",
        "LimitDATA": "infinity",
        "LimitDATASoft": "infinity",
        "LimitFSIZE": "infinity",
        "LimitFSIZESoft": "infinity",
        "LimitLOCKS": "infinity",
        "LimitLOCKSSoft": "infinity",
        "LimitMEMLOCK": "65536",
        "LimitMEMLOCKSoft": "65536",
        "LimitMSGQUEUE": "819200",
        "LimitMSGQUEUESoft": "819200",
        "LimitNICE": "0",
        "LimitNICESoft": "0",
        "LimitNOFILE": "262144",
        "LimitNOFILESoft": "1024",
        "LimitNPROC": "7069",
        "LimitNPROCSoft": "7069",
        "LimitRSS": "infinity",
        "LimitRSSSoft": "infinity",
        "LimitRTPRIO": "0",
        "LimitRTPRIOSoft": "0",
        "LimitRTTIME": "infinity",
        "LimitRTTIMESoft": "infinity",
        "LimitSIGPENDING": "7069",
        "LimitSIGPENDINGSoft": "7069",
        "LimitSTACK": "infinity",
        "LimitSTACKSoft": "8388608",
        "LoadState": "loaded",
        "LockPersonality": "no",
        "LogLevelMax": "-1",
        "LogRateLimitBurst": "0",
        "LogRateLimitIntervalUSec": "0",
        "LogsDirectoryMode": "0755",
        "MainPID": "154839",
        "MemoryAccounting": "yes",
        "MemoryCurrent": "1044480",
        "MemoryDenyWriteExecute": "no",
        "MemoryHigh": "infinity",
        "MemoryLimit": "infinity",
        "MemoryLow": "0",
        "MemoryMax": "infinity",
        "MemorySwapMax": "infinity",
        "MountAPIVFS": "no",
        "MountFlags": "",
        "NFileDescriptorStore": "0",
        "NRestarts": "0",
        "NUMAMask": "",
        "NUMAPolicy": "n/a",
        "Names": "vsftpd.service",
        "NeedDaemonReload": "no",
        "Nice": "0",
        "NoNewPrivileges": "no",
        "NonBlocking": "no",
        "NotifyAccess": "none",
        "OOMScoreAdjust": "0",
        "OnFailureJobMode": "replace",
        "PermissionsStartOnly": "no",
        "Perpetual": "no",
        "PrivateDevices": "no",
        "PrivateMounts": "no",
        "PrivateNetwork": "no",
        "PrivateTmp": "no",
        "PrivateUsers": "no",
        "ProtectControlGroups": "no",
        "ProtectHome": "no",
        "ProtectKernelModules": "no",
        "ProtectKernelTunables": "no",
        "ProtectSystem": "no",
        "RefuseManualStart": "no",
        "RefuseManualStop": "no",
        "RemainAfterExit": "no",
        "RemoveIPC": "no",
        "Requires": "sysinit.target system.slice",
        "Restart": "no",
        "RestartUSec": "100ms",
        "RestrictNamespaces": "no",
        "RestrictRealtime": "no",
        "RestrictSUIDSGID": "no",
        "Result": "success",
        "RootDirectoryStartOnly": "no",
        "RuntimeDirectoryMode": "0755",
        "RuntimeDirectoryPreserve": "no",
        "RuntimeMaxUSec": "infinity",
        "SameProcessGroup": "no",
        "SecureBits": "0",
        "SendSIGHUP": "no",
        "SendSIGKILL": "yes",
        "Slice": "system.slice",
        "StandardError": "inherit",
        "StandardInput": "null",
        "StandardInputData": "",
        "StandardOutput": "journal",
        "StartLimitAction": "none",
        "StartLimitBurst": "5",
        "StartLimitIntervalUSec": "10s",
        "StartupBlockIOWeight": "[not set]",
        "StartupCPUShares": "[not set]",
        "StartupCPUWeight": "[not set]",
        "StartupIOWeight": "[not set]",
        "StateChangeTimestamp": "Tue 2021-06-01 12:56:11 EDT",
        "StateChangeTimestampMonotonic": "253047317790",
        "StateDirectoryMode": "0755",
        "StatusErrno": "0",
        "StopWhenUnneeded": "no",
        "SubState": "running",
        "SuccessAction": "none",
        "SyslogFacility": "3",
        "SyslogLevel": "6",
        "SyslogLevelPrefix": "yes",
        "SyslogPriority": "30",
        "SystemCallErrorNumber": "0",
        "TTYReset": "no",
        "TTYVHangup": "no",
        "TTYVTDisallocate": "no",
        "TasksAccounting": "yes",
        "TasksCurrent": "1",
        "TasksMax": "11311",
        "TimeoutStartUSec": "1min 30s",
        "TimeoutStopUSec": "1min 30s",
        "TimerSlackNSec": "50000",
        "Transient": "no",
        "Type": "forking",
        "UID": "[not set]",
        "UMask": "0022",
        "UnitFilePreset": "disabled",
        "UnitFileState": "enabled",
        "UtmpMode": "init",
        "WantedBy": "multi-user.target",
        "WatchdogTimestamp": "Tue 2021-06-01 12:56:11 EDT",
        "WatchdogTimestampMonotonic": "253047317789",
        "WatchdogUSec": "0"
    }
}
2021-06-05 13:26:18,237 p=364035 u=ansible n=ansible | [WARNING]: SELinux state temporarily changed from 'enforcing' to 'permissive'. State change will take effect next
reboot.

2021-06-05 13:26:18,238 p=364035 u=ansible n=ansible | localhost | CHANGED => {
    "changed": true,
    "configfile": "/etc/selinux/config",
    "msg": "Config SELinux state changed from 'enforcing' to 'disabled'",
    "policy": "targeted",
    "reboot_required": true,
    "state": "disabled"
}
2021-06-05 13:29:05,987 p=6171 u=ansible n=ansible | PLAY [set up the control host as a repository] ***********************************************************************
2021-06-05 13:29:05,997 p=6171 u=ansible n=ansible | TASK [Gathering Facts] ***********************************************************************************************
2021-06-05 13:29:07,145 p=6171 u=ansible n=ansible | ok: [control.example.com]
2021-06-05 13:29:07,152 p=6171 u=ansible n=ansible | TASK [turn off the firewalld service] ********************************************************************************
2021-06-05 13:29:08,267 p=6171 u=ansible n=ansible | changed: [control.example.com]
2021-06-05 13:29:08,273 p=6171 u=ansible n=ansible | TASK [install vsftpd] ************************************************************************************************
2021-06-05 13:29:11,020 p=6171 u=ansible n=ansible | ok: [control.example.com]
2021-06-05 13:29:11,026 p=6171 u=ansible n=ansible | TASK [set up repository directory] ***********************************************************************************
2021-06-05 13:29:11,395 p=6171 u=ansible n=ansible | ok: [control.example.com]
2021-06-05 13:29:11,401 p=6171 u=ansible n=ansible | TASK [mount the install dvd to /var/ftp/repo] ************************************************************************
2021-06-05 13:29:11,773 p=6171 u=ansible n=ansible | changed: [control.example.com]
2021-06-05 13:29:11,780 p=6171 u=ansible n=ansible | TASK [ensure vsftpd settings via jinja2 template] ********************************************************************
2021-06-05 13:29:12,372 p=6171 u=ansible n=ansible | ok: [control.example.com]
2021-06-05 13:29:12,379 p=6171 u=ansible n=ansible | TASK [start the vsftpd service] **************************************************************************************
2021-06-05 13:29:12,778 p=6171 u=ansible n=ansible | ok: [control.example.com]
2021-06-05 13:29:12,779 p=6171 u=ansible n=ansible | PLAY RECAP ***********************************************************************************************************
2021-06-05 13:29:12,780 p=6171 u=ansible n=ansible | control.example.com        : ok=7    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-05 13:31:38,157 p=8291 u=ansible n=ansible | PLAY [set up the control host as a repository] ***********************************************************************
2021-06-05 13:31:38,165 p=8291 u=ansible n=ansible | TASK [Gathering Facts] ***********************************************************************************************
2021-06-05 13:31:39,222 p=8291 u=ansible n=ansible | ok: [control.example.com]
2021-06-05 13:31:39,229 p=8291 u=ansible n=ansible | TASK [turn off the firewalld service] ********************************************************************************
2021-06-05 13:31:39,786 p=8291 u=ansible n=ansible | ok: [control.example.com]
2021-06-05 13:31:39,792 p=8291 u=ansible n=ansible | TASK [install vsftpd] ************************************************************************************************
2021-06-05 13:31:42,135 p=8291 u=ansible n=ansible | ok: [control.example.com]
2021-06-05 13:31:42,142 p=8291 u=ansible n=ansible | TASK [set up repository directory] ***********************************************************************************
2021-06-05 13:31:42,505 p=8291 u=ansible n=ansible | ok: [control.example.com]
2021-06-05 13:31:42,511 p=8291 u=ansible n=ansible | TASK [mount the install dvd to /var/ftp/repo] ************************************************************************
2021-06-05 13:31:42,869 p=8291 u=ansible n=ansible | ok: [control.example.com]
2021-06-05 13:31:42,875 p=8291 u=ansible n=ansible | TASK [ensure vsftpd settings via jinja2 template] ********************************************************************
2021-06-05 13:31:43,465 p=8291 u=ansible n=ansible | ok: [control.example.com]
2021-06-05 13:31:43,471 p=8291 u=ansible n=ansible | TASK [start the vsftpd service] **************************************************************************************
2021-06-05 13:31:43,873 p=8291 u=ansible n=ansible | ok: [control.example.com]
2021-06-05 13:31:43,874 p=8291 u=ansible n=ansible | PLAY RECAP ***********************************************************************************************************
2021-06-05 13:31:43,874 p=8291 u=ansible n=ansible | control.example.com        : ok=7    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-05 13:33:45,693 p=10179 u=ansible n=ansible | localhost | CHANGED | rc=0 >>


2021-06-05 13:38:39,478 p=12294 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "checksum": "d04f330afcfc4f8bb4d20f2007795fa967116e4f",
    "dest": "/etc/hosts",
    "gid": 0,
    "group": "root",
    "md5sum": "f7b38ec83ae3db4da108b18731d827a3",
    "mode": "0644",
    "owner": "root",
    "secontext": "system_u:object_r:net_conf_t:s0",
    "size": 382,
    "src": "/root/.ansible/tmp/ansible-tmp-1622914718.254761-12321-268162077171113/source",
    "state": "file",
    "uid": 0
}
2021-06-05 13:38:45,020 p=12372 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-05 13:38:49,380 p=12435 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redpen.repo",
    "state": "absent"
}
2021-06-05 13:38:52,800 p=12491 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "checksum": "37b4b623cd60b60bc8559d1882a481393cdef723",
    "dest": "/etc/yum.repos.d/rhce.repo",
    "gid": 0,
    "group": "root",
    "md5sum": "bd400b3c4ca344fb358f46289aa9cdd3",
    "mode": "0644",
    "owner": "root",
    "secontext": "system_u:object_r:system_conf_t:s0",
    "size": 349,
    "src": "/root/.ansible/tmp/ansible-tmp-1622914732.0320075-12518-22717813034227/source",
    "state": "file",
    "uid": 0
}
2021-06-05 13:39:46,099 p=12931 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "checksum": "d04f330afcfc4f8bb4d20f2007795fa967116e4f",
    "dest": "/etc/hosts",
    "gid": 0,
    "group": "root",
    "mode": "0644",
    "owner": "root",
    "path": "/etc/hosts",
    "secontext": "system_u:object_r:net_conf_t:s0",
    "size": 382,
    "state": "file",
    "uid": 0
}
2021-06-05 13:39:49,402 p=12994 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-05 13:39:52,496 p=13043 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redpen.repo",
    "state": "absent"
}
2021-06-05 13:39:55,659 p=13093 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "checksum": "37b4b623cd60b60bc8559d1882a481393cdef723",
    "dest": "/etc/yum.repos.d/rhce.repo",
    "gid": 0,
    "group": "root",
    "mode": "0644",
    "owner": "root",
    "path": "/etc/yum.repos.d/rhce.repo",
    "secontext": "system_u:object_r:system_conf_t:s0",
    "size": 349,
    "state": "file",
    "uid": 0
}
2021-06-05 13:39:59,754 p=13149 u=ansible n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "checksum": "d04f330afcfc4f8bb4d20f2007795fa967116e4f",
    "dest": "/etc/hosts",
    "gid": 0,
    "group": "root",
    "md5sum": "f7b38ec83ae3db4da108b18731d827a3",
    "mode": "0644",
    "owner": "root",
    "secontext": "system_u:object_r:net_conf_t:s0",
    "size": 382,
    "src": "/root/.ansible/tmp/ansible-tmp-1622914798.6216574-13176-258517650285083/source",
    "state": "file",
    "uid": 0
}
2021-06-05 13:40:03,421 p=13220 u=ansible n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-05 13:40:06,441 p=13276 u=ansible n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redpen.repo",
    "state": "absent"
}
2021-06-05 13:40:09,848 p=13325 u=ansible n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "checksum": "37b4b623cd60b60bc8559d1882a481393cdef723",
    "dest": "/etc/yum.repos.d/rhce.repo",
    "gid": 0,
    "group": "root",
    "md5sum": "bd400b3c4ca344fb358f46289aa9cdd3",
    "mode": "0644",
    "owner": "root",
    "secontext": "system_u:object_r:system_conf_t:s0",
    "size": 349,
    "src": "/root/.ansible/tmp/ansible-tmp-1622914809.0912912-13345-72583534358717/source",
    "state": "file",
    "uid": 0
}
2021-06-05 13:40:13,959 p=13386 u=ansible n=ansible | ansible3.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "checksum": "d04f330afcfc4f8bb4d20f2007795fa967116e4f",
    "dest": "/etc/hosts",
    "gid": 0,
    "group": "root",
    "md5sum": "f7b38ec83ae3db4da108b18731d827a3",
    "mode": "0644",
    "owner": "root",
    "secontext": "system_u:object_r:net_conf_t:s0",
    "size": 382,
    "src": "/root/.ansible/tmp/ansible-tmp-1622914813.0216744-13413-224999978186803/source",
    "state": "file",
    "uid": 0
}
2021-06-05 13:40:16,738 p=13457 u=ansible n=ansible | ansible3.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-05 13:40:20,203 p=13506 u=ansible n=ansible | ansible3.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redpen.repo",
    "state": "absent"
}
2021-06-05 13:40:23,689 p=13562 u=ansible n=ansible | ansible3.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "checksum": "37b4b623cd60b60bc8559d1882a481393cdef723",
    "dest": "/etc/yum.repos.d/rhce.repo",
    "gid": 0,
    "group": "root",
    "md5sum": "bd400b3c4ca344fb358f46289aa9cdd3",
    "mode": "0644",
    "owner": "root",
    "secontext": "system_u:object_r:system_conf_t:s0",
    "size": 349,
    "src": "/root/.ansible/tmp/ansible-tmp-1622914822.9478238-13582-225243161574901/source",
    "state": "file",
    "uid": 0
}
2021-06-05 13:40:27,608 p=13623 u=ansible n=ansible | ansible4.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "checksum": "d04f330afcfc4f8bb4d20f2007795fa967116e4f",
    "dest": "/etc/hosts",
    "gid": 0,
    "group": "root",
    "md5sum": "f7b38ec83ae3db4da108b18731d827a3",
    "mode": "0644",
    "owner": "root",
    "secontext": "system_u:object_r:net_conf_t:s0",
    "size": 382,
    "src": "/root/.ansible/tmp/ansible-tmp-1622914826.5187035-13643-263601421597974/source",
    "state": "file",
    "uid": 0
}
2021-06-05 13:40:30,509 p=13694 u=ansible n=ansible | ansible4.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-05 13:40:33,535 p=13743 u=ansible n=ansible | ansible4.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redpen.repo",
    "state": "absent"
}
2021-06-05 13:40:37,282 p=13792 u=ansible n=ansible | ansible4.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "checksum": "37b4b623cd60b60bc8559d1882a481393cdef723",
    "dest": "/etc/yum.repos.d/rhce.repo",
    "gid": 0,
    "group": "root",
    "md5sum": "bd400b3c4ca344fb358f46289aa9cdd3",
    "mode": "0644",
    "owner": "root",
    "secontext": "system_u:object_r:system_conf_t:s0",
    "size": 349,
    "src": "/root/.ansible/tmp/ansible-tmp-1622914836.5383558-13819-229191056456069/source",
    "state": "file",
    "uid": 0
}
2021-06-05 13:40:58,941 p=14004 u=ansible n=ansible | ansible3.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ansible@ansible3.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-05 13:40:58,954 p=14004 u=ansible n=ansible | ansible4.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ansible@ansible4.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-05 13:40:58,957 p=14004 u=ansible n=ansible | ansible2.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ansible@ansible2.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-05 13:40:59,506 p=14004 u=ansible n=ansible | control.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-05 13:40:59,655 p=14004 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-07 07:55:19,701 p=32864 u=root n=ansible | ansible1.example.com | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "failures": [
        "No package python available."
    ],
    "msg": "Failed to install some of the specified packages",
    "rc": 1,
    "results": []
}
2021-06-07 07:55:24,164 p=32940 u=root n=ansible |  [ERROR]: User interrupted execution

2021-06-07 07:55:42,170 p=33068 u=root n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "msg": "",
    "rc": 0,
    "results": [
        "Installed: python3-setuptools-39.2.0-5.el8.noarch",
        "Installed: python36-3.6.8-2.module+el8.1.0+3334+5cb623d7.x86_64",
        "Installed: python3-pip-9.0.3-16.el8.noarch"
    ]
}
2021-06-07 07:55:52,991 p=33147 u=root n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-07 07:55:57,505 p=33252 u=root n=ansible | ERROR! this task 'lineinfile' has extra params, which is only allowed in the following modules: ansible.legacy.include_vars, set_fact, ansible.legacy.win_command, ansible.builtin.import_role, include_vars, ansible.builtin.include_tasks, ansible.legacy.include, ansible.builtin.script, script, ansible.legacy.import_tasks, ansible.builtin.include_vars, import_role, ansible.builtin.add_host, ansible.builtin.raw, ansible.legacy.include_role, command, ansible.legacy.shell, win_shell, raw, ansible.legacy.import_role, include_role, include, ansible.legacy.win_shell, ansible.legacy.group_by, ansible.builtin.import_tasks, ansible.legacy.set_fact, ansible.builtin.command, win_command, ansible.builtin.meta, ansible.builtin.group_by, ansible.builtin.set_fact, ansible.legacy.command, ansible.legacy.include_tasks, import_tasks, ansible.builtin.shell, ansible.legacy.script, ansible.legacy.raw, shell, ansible.legacy.add_host, ansible.legacy.meta, group_by, add_host, include_tasks, ansible.builtin.win_command, ansible.builtin.include_role, ansible.builtin.win_shell, ansible.builtin.include, meta
2021-06-07 07:56:04,052 p=33283 u=root n=ansible |  [ERROR]: User interrupted execution

2021-06-07 07:57:01,621 p=33712 u=root n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-07 07:57:04,231 p=33778 u=root n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-07 07:57:06,876 p=33827 u=root n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": true,
    "msg": "line added"
}
2021-06-07 07:57:16,168 p=33869 u=root n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "msg": "",
    "rc": 0,
    "results": [
        "Installed: python3-setuptools-39.2.0-5.el8.noarch",
        "Installed: python36-3.6.8-2.module+el8.1.0+3334+5cb623d7.x86_64",
        "Installed: python3-pip-9.0.3-16.el8.noarch"
    ]
}
2021-06-07 07:57:24,863 p=33986 u=root n=ansible | ansible2.example.com | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Group ansible does not exist"
}
2021-06-07 07:58:02,391 p=34308 u=root n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-07 07:58:15,571 p=34371 u=root n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-07 07:58:17,399 p=34497 u=root n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 07:58:20,574 p=34532 u=root n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-07 07:58:24,462 p=34596 u=root n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "comment": "",
    "create_home": true,
    "group": 1000,
    "home": "/home/ansible",
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "system": false,
    "uid": 1000
}
2021-06-07 07:58:27,329 p=34645 u=root n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": true,
    "msg": "line added"
}
2021-06-07 07:58:32,951 p=34694 u=root n=ansible | ansible3.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "msg": "",
    "rc": 0,
    "results": [
        "Installed: python3-setuptools-39.2.0-5.el8.noarch",
        "Installed: python36-3.6.8-2.module+el8.1.0+3334+5cb623d7.x86_64",
        "Installed: python3-pip-9.0.3-16.el8.noarch"
    ]
}
2021-06-07 07:58:36,904 p=34783 u=root n=ansible | ansible3.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "comment": "",
    "create_home": true,
    "group": 1000,
    "home": "/home/ansible",
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "system": false,
    "uid": 1000
}
2021-06-07 07:58:38,744 p=34839 u=root n=ansible | ansible3.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": true,
    "msg": "line added"
}
2021-06-07 07:58:43,621 p=34881 u=root n=ansible | ansible4.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "msg": "",
    "rc": 0,
    "results": [
        "Installed: python3-setuptools-39.2.0-5.el8.noarch",
        "Installed: python36-3.6.8-2.module+el8.1.0+3334+5cb623d7.x86_64",
        "Installed: python3-pip-9.0.3-16.el8.noarch"
    ]
}
2021-06-07 07:58:46,708 p=34956 u=root n=ansible | ansible4.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "comment": "",
    "create_home": true,
    "group": 1000,
    "home": "/home/ansible",
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "system": false,
    "uid": 1000
}
2021-06-07 07:58:48,416 p=35005 u=root n=ansible | ansible4.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": true,
    "msg": "line added"
}
2021-06-07 07:58:48,980 p=35047 u=root n=ansible | ansible3.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ansible@ansible3.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-07 07:58:49,008 p=35047 u=root n=ansible | ansible1.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ansible@ansible1.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-07 07:58:49,024 p=35047 u=root n=ansible | control.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: Warning: Permanently added 'control.example.com,192.168.11.200' (ECDSA) to the list of known hosts.\r\nansible@control.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-07 07:58:49,024 p=35047 u=root n=ansible | ansible2.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ansible@ansible2.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-07 07:58:49,028 p=35047 u=root n=ansible | ansible4.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ansible@ansible4.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-07 08:04:29,093 p=37434 u=root n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-07 08:04:33,901 p=37507 u=root n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-07 08:04:35,751 p=37570 u=root n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:04:37,435 p=37612 u=root n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "dest": "/home/ansible/.ssh/authorized_keys",
    "gid": 1000,
    "group": "ansible",
    "mode": "0600",
    "owner": "ansible",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 581,
    "state": "file",
    "uid": 1000
}
2021-06-07 08:04:38,923 p=37654 u=root n=ansible | ERROR! failed at splitting arguments, either an unbalanced jinja2 block or quotes: path=/home/ansible/.ssh/authorized_keys line='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDakTxcSbVwGVQ2jGeIc+brSewXnlNgSB4KOT3ceph6AqN4gzwAvtWtI/Gigoon4eMMq+W5dAzjtrdiXVyyUydpgTxI0TwjE2YdcPQOS9oc7b0KKVnmYILhZVwO1zra7ak4r6uwKeS0Xj7TBNUKIZ84sRjt6m1OY3qqo9Z0iwOoiYFV0TBKk0dhXrJvydkgxyV6WN14ATcxztp79qbw+GYVlR4OiO4G1xPIiVykXivXk5q9roWzR7XCXVA5LRTOxV/mK0i0j7t2482bGqWzaqOemg4C1dFzw0qQvsdEoSltl1ZGnFXM2AGpZ4mlPVeVKox9i+dqkAkoXzu856QvF6f27O/wINPFUn5d+hdG/G1Jb8Add/4OAJgsgDUmOGaxqU3luZsFRgNs3NcpaDDaMOtYxHgTFoHNUtSDeIzCRx+9GJ7z7Ozv2at9LyL3hsyhMZYg1Ij3RmKiI9qE3bMluCpG4Zp3edwCmdIADCk3YwtoH1Q+8Y7GeJP1vw5h3J+8Z3c= ansible@control.example.com
2021-06-07 08:04:50,466 p=37664 u=root n=ansible |  [ERROR]: User interrupted execution

2021-06-07 08:05:07,146 p=37848 u=root n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-07 08:05:08,744 p=37904 u=root n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-07 08:05:10,191 p=37946 u=root n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:05:11,671 p=37981 u=root n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "dest": "/home/ansible/.ssh/authorized_keys",
    "gid": 1000,
    "group": "ansible",
    "mode": "0600",
    "owner": "ansible",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 581,
    "state": "file",
    "uid": 1000
}
2021-06-07 08:05:13,460 p=38023 u=root n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:05:19,197 p=38058 u=root n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-07 08:05:35,520 p=38138 u=root n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-07 08:05:37,092 p=38278 u=root n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:05:38,564 p=38320 u=root n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "dest": "/home/ansible/.ssh/authorized_keys",
    "gid": 1000,
    "group": "ansible",
    "mode": "0600",
    "owner": "ansible",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 581,
    "state": "file",
    "uid": 1000
}
2021-06-07 08:05:40,306 p=38355 u=root n=ansible | ansible2.example.com | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Destination /home/ansible/.ssh/authorized_keys does not exist !",
    "rc": 257
}
2021-06-07 08:05:52,913 p=38397 u=root n=ansible |  [ERROR]: User interrupted execution

2021-06-07 08:06:41,902 p=38827 u=root n=ansible |  [ERROR]: User interrupted execution

2021-06-07 08:06:51,762 p=38869 u=ansible n=ansible | ansible1.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Invalid/incorrect password: Permission denied, please try again.",
    "unreachable": true
}
2021-06-07 08:07:00,099 p=38924 u=ansible n=ansible | ansible1.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Invalid/incorrect password: Permission denied, please try again.",
    "unreachable": true
}
2021-06-07 08:07:12,922 p=39053 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-07 08:07:14,505 p=39126 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-07 08:07:16,142 p=39168 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:07:17,951 p=39203 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "gid": 1000,
    "group": "ansible",
    "mode": "0700",
    "owner": "ansible",
    "path": "/home/ansible/.ssh/",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 29,
    "state": "directory",
    "uid": 1000
}
2021-06-07 08:07:19,602 p=39245 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "dest": "/home/ansible/.ssh/authorized_keys",
    "gid": 1000,
    "group": "ansible",
    "mode": "0600",
    "owner": "ansible",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 581,
    "state": "file",
    "uid": 1000
}
2021-06-07 08:07:21,249 p=39287 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:07:24,335 p=39322 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-07 08:07:26,031 p=39381 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-07 08:07:27,761 p=39423 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:07:30,056 p=39465 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "gid": 1000,
    "group": "ansible",
    "mode": "0700",
    "owner": "ansible",
    "path": "/home/ansible/.ssh/",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 29,
    "state": "directory",
    "uid": 1000
}
2021-06-07 08:07:31,573 p=39507 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "dest": "/home/ansible/.ssh/authorized_keys",
    "gid": 1000,
    "group": "ansible",
    "mode": "0600",
    "owner": "ansible",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 581,
    "state": "file",
    "uid": 1000
}
2021-06-07 08:07:33,105 p=39549 u=ansible n=ansible | ansible2.example.com | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Destination /home/ansible/.ssh/authorized_keys does not exist !",
    "rc": 257
}
2021-06-07 08:09:48,785 p=40499 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-07 08:09:50,281 p=40572 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-07 08:09:51,898 p=40607 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:09:53,368 p=40649 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "gid": 1000,
    "group": "ansible",
    "mode": "0700",
    "owner": "ansible",
    "path": "/home/ansible/.ssh/",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 29,
    "state": "directory",
    "uid": 1000
}
2021-06-07 08:09:54,823 p=40684 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "gid": 1000,
    "group": "ansible",
    "mode": "0600",
    "owner": "ansible",
    "path": "/home/ansible/.ssh/authorized_keys",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 581,
    "state": "file",
    "uid": 1000
}
2021-06-07 08:09:56,160 p=40727 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:09:58,976 p=40762 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-07 08:10:00,655 p=40821 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-07 08:10:02,258 p=40863 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:10:03,759 p=40898 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "gid": 1000,
    "group": "ansible",
    "mode": "0700",
    "owner": "ansible",
    "path": "/home/ansible/.ssh/",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 29,
    "state": "directory",
    "uid": 1000
}
2021-06-07 08:10:05,223 p=40940 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "gid": 1000,
    "group": "ansible",
    "mode": "0600",
    "owner": "ansible",
    "path": "/home/ansible/.ssh/authorized_keys",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 581,
    "state": "file",
    "uid": 1000
}
2021-06-07 08:10:06,646 p=40975 u=ansible n=ansible | ansible2.example.com | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Destination /home/ansible/.ssh/authorized_keys does not exist !",
    "rc": 257
}
2021-06-07 08:10:17,562 p=41010 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-07 08:10:19,507 p=41125 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-07 08:10:21,172 p=41167 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:10:23,742 p=41209 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "gid": 1000,
    "group": "ansible",
    "mode": "0700",
    "owner": "ansible",
    "path": "/home/ansible/.ssh/",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 29,
    "state": "directory",
    "uid": 1000
}
2021-06-07 08:10:26,068 p=41251 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "gid": 1000,
    "group": "ansible",
    "mode": "0600",
    "owner": "ansible",
    "path": "/home/ansible/.ssh/authorized_keys",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 581,
    "state": "file",
    "uid": 1000
}
2021-06-07 08:10:27,737 p=41300 u=ansible n=ansible | ansible3.example.com | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Destination /home/ansible/.ssh/authorized_keys does not exist !",
    "rc": 257
}
2021-06-07 08:10:44,106 p=41335 u=ansible n=ansible | ansible4.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: root@ansible4.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-07 08:10:51,050 p=41465 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-07 08:10:59,595 p=41545 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:11:02,072 p=41629 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "gid": 1000,
    "group": "ansible",
    "mode": "0700",
    "owner": "ansible",
    "path": "/home/ansible/.ssh/",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 29,
    "state": "directory",
    "uid": 1000
}
2021-06-07 08:11:03,597 p=41678 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "gid": 1000,
    "group": "ansible",
    "mode": "0600",
    "owner": "ansible",
    "path": "/home/ansible/.ssh/authorized_keys",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 581,
    "state": "file",
    "uid": 1000
}
2021-06-07 08:11:06,487 p=41713 u=ansible n=ansible | ansible4.example.com | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Destination /home/ansible/.ssh/authorized_keys does not exist !",
    "rc": 257
}
2021-06-07 08:11:07,109 p=41762 u=ansible n=ansible | ansible3.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ansible@ansible3.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-07 08:11:07,109 p=41762 u=ansible n=ansible | ansible2.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ansible@ansible2.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-07 08:11:07,113 p=41762 u=ansible n=ansible | ansible4.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ansible@ansible4.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
2021-06-07 08:11:07,686 p=41762 u=ansible n=ansible | control.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-07 08:11:07,826 p=41762 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-07 08:11:29,789 p=42114 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-07 08:11:31,290 p=42177 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-07 08:11:32,984 p=42217 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:11:34,272 p=42254 u=ansible n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: ansible.example.com

2021-06-07 08:11:34,272 p=42254 u=ansible n=ansible | [WARNING]: No hosts matched, nothing to do

2021-06-07 08:12:05,667 p=42469 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-07 08:12:07,199 p=42532 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-07 08:12:08,636 p=42567 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:12:10,071 p=42612 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "gid": 1000,
    "group": "ansible",
    "mode": "0700",
    "owner": "ansible",
    "path": "/home/ansible/.ssh/",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 29,
    "state": "directory",
    "uid": 1000
}
2021-06-07 08:12:11,606 p=42647 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "gid": 1000,
    "group": "ansible",
    "mode": "0600",
    "owner": "ansible",
    "path": "/home/ansible/.ssh/authorized_keys",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 581,
    "state": "file",
    "uid": 1000
}
2021-06-07 08:12:13,046 p=42689 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:12:16,057 p=42724 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-07 08:12:17,675 p=42783 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-07 08:12:19,118 p=42825 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:12:20,509 p=42860 u=ansible n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "gid": 0,
    "group": "root",
    "mode": "0755",
    "owner": "root",
    "path": "/home/ansible/.ssh/",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 6,
    "state": "directory",
    "uid": 0
}
2021-06-07 08:12:21,996 p=42895 u=ansible n=ansible | ansible2.example.com | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "file (/home/ansible/.ssh/authorized_keys) is absent, cannot continue",
    "path": "/home/ansible/.ssh/authorized_keys",
    "state": "absent"
}
2021-06-07 08:12:23,391 p=42937 u=ansible n=ansible | ansible2.example.com | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Destination /home/ansible/.ssh/authorized_keys does not exist !",
    "rc": 257
}
2021-06-07 08:12:35,860 p=42972 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-07 08:12:38,629 p=43101 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-07 08:12:40,421 p=43143 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:12:44,689 p=43185 u=ansible n=ansible | ansible3.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "gid": 0,
    "group": "root",
    "mode": "0755",
    "owner": "root",
    "path": "/home/ansible/.ssh/",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 6,
    "state": "directory",
    "uid": 0
}
2021-06-07 08:13:57,827 p=43730 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-07 08:13:59,403 p=43796 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-07 08:14:01,456 p=43838 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:14:03,203 p=43880 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "gid": 1000,
    "group": "ansible",
    "mode": "0700",
    "owner": "ansible",
    "path": "/home/ansible/.ssh/",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 29,
    "state": "directory",
    "uid": 1000
}
2021-06-07 08:14:05,365 p=43915 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "gid": 1000,
    "group": "ansible",
    "mode": "0600",
    "owner": "ansible",
    "path": "/home/ansible/.ssh/authorized_keys",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 581,
    "state": "file",
    "uid": 1000
}
2021-06-07 08:14:06,887 p=43957 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:14:10,757 p=43999 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-07 08:14:12,365 p=44065 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-07 08:14:13,854 p=44100 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:14:15,752 p=44142 u=ansible n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "gid": 1000,
    "group": "ansible",
    "mode": "0700",
    "owner": "ansible",
    "path": "/home/ansible/.ssh/",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 6,
    "state": "directory",
    "uid": 1000
}
2021-06-07 08:14:17,905 p=44184 u=ansible n=ansible | ansible2.example.com | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "file (/home/ansible/.ssh/authorized_keys) is absent, cannot continue",
    "path": "/home/ansible/.ssh/authorized_keys",
    "state": "absent"
}
2021-06-07 08:14:31,964 p=44226 u=ansible n=ansible | ansible2.example.com | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Destination /home/ansible/.ssh/authorized_keys does not exist !",
    "rc": 257
}
2021-06-07 08:15:00,452 p=44525 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-07 08:15:01,894 p=44588 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-07 08:15:03,410 p=44630 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:15:04,748 p=44665 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "gid": 1000,
    "group": "ansible",
    "mode": "0700",
    "owner": "ansible",
    "path": "/home/ansible/.ssh/",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 29,
    "state": "directory",
    "uid": 1000
}
2021-06-07 08:15:06,227 p=44700 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "dest": "/home/ansible/.ssh/authorized_keys",
    "gid": 1000,
    "group": "ansible",
    "mode": "0600",
    "owner": "ansible",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 581,
    "state": "file",
    "uid": 1000
}
2021-06-07 08:15:08,844 p=44742 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:15:11,751 p=44784 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-07 08:15:14,524 p=44840 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-07 08:15:16,398 p=44889 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:15:18,233 p=44931 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "gid": 1000,
    "group": "ansible",
    "mode": "0700",
    "owner": "ansible",
    "path": "/home/ansible/.ssh/",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 6,
    "state": "directory",
    "uid": 1000
}
2021-06-07 08:15:20,874 p=44973 u=ansible n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "dest": "/home/ansible/.ssh/authorized_keys",
    "gid": 1000,
    "group": "ansible",
    "mode": "0600",
    "owner": "ansible",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 0,
    "state": "file",
    "uid": 1000
}
2021-06-07 08:15:22,958 p=45015 u=ansible n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": true,
    "msg": "line added"
}
2021-06-07 08:15:25,966 p=45057 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-07 08:15:27,576 p=45116 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-07 08:15:29,050 p=45159 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:15:30,375 p=45194 u=ansible n=ansible | ansible3.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "gid": 1000,
    "group": "ansible",
    "mode": "0700",
    "owner": "ansible",
    "path": "/home/ansible/.ssh/",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 6,
    "state": "directory",
    "uid": 1000
}
2021-06-07 08:15:31,767 p=45236 u=ansible n=ansible | ansible3.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "dest": "/home/ansible/.ssh/authorized_keys",
    "gid": 1000,
    "group": "ansible",
    "mode": "0600",
    "owner": "ansible",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 0,
    "state": "file",
    "uid": 1000
}
2021-06-07 08:15:33,224 p=45271 u=ansible n=ansible | ansible3.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": true,
    "msg": "line added"
}
2021-06-07 08:15:36,104 p=45313 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-07 08:15:37,615 p=45365 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-07 08:15:38,991 p=45407 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-07 08:15:40,394 p=45442 u=ansible n=ansible | ansible4.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "gid": 1000,
    "group": "ansible",
    "mode": "0700",
    "owner": "ansible",
    "path": "/home/ansible/.ssh/",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 6,
    "state": "directory",
    "uid": 1000
}
2021-06-07 08:15:41,883 p=45484 u=ansible n=ansible | ansible4.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "dest": "/home/ansible/.ssh/authorized_keys",
    "gid": 1000,
    "group": "ansible",
    "mode": "0600",
    "owner": "ansible",
    "secontext": "unconfined_u:object_r:ssh_home_t:s0",
    "size": 0,
    "state": "file",
    "uid": 1000
}
2021-06-07 08:15:43,477 p=45519 u=ansible n=ansible | ansible4.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": true,
    "msg": "line added"
}
2021-06-07 08:15:45,043 p=45561 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-07 08:15:45,094 p=45561 u=ansible n=ansible | control.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-07 08:15:45,349 p=45561 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-07 08:15:45,358 p=45561 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-07 08:15:45,387 p=45561 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-08 12:04:32,144 p=264158 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "checksum": "d04f330afcfc4f8bb4d20f2007795fa967116e4f",
    "dest": "/etc/hosts",
    "gid": 0,
    "group": "root",
    "mode": "0644",
    "owner": "root",
    "path": "/etc/hosts",
    "secontext": "system_u:object_r:net_conf_t:s0",
    "size": 382,
    "state": "file",
    "uid": 0
}
2021-06-08 12:04:44,660 p=264228 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:04:46,382 p=264340 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redpen.repo",
    "state": "absent"
}
2021-06-08 12:04:48,142 p=264382 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "checksum": "37b4b623cd60b60bc8559d1882a481393cdef723",
    "dest": "/etc/yum.repos.d/rhce.repo",
    "gid": 0,
    "group": "root",
    "mode": "0644",
    "owner": "root",
    "path": "/etc/yum.repos.d/rhce.repo",
    "secontext": "system_u:object_r:system_conf_t:s0",
    "size": 349,
    "state": "file",
    "uid": 0
}
2021-06-08 12:04:49,998 p=264431 u=ansible n=ansible | ERROR! this task 'yum_repository' has extra params, which is only allowed in the following modules: raw, ansible.builtin.add_host, ansible.builtin.win_command, ansible.legacy.include_tasks, ansible.builtin.include_tasks, ansible.legacy.shell, ansible.builtin.command, set_fact, ansible.legacy.include, include_vars, ansible.legacy.group_by, ansible.builtin.meta, win_command, ansible.legacy.win_command, ansible.legacy.import_tasks, ansible.legacy.import_role, ansible.builtin.win_shell, add_host, ansible.builtin.group_by, import_role, include_role, ansible.legacy.meta, ansible.builtin.script, include_tasks, shell, ansible.builtin.shell, ansible.legacy.include_vars, ansible.legacy.script, ansible.legacy.include_role, group_by, ansible.legacy.set_fact, ansible.builtin.raw, win_shell, ansible.builtin.include, ansible.legacy.add_host, command, ansible.legacy.win_shell, ansible.builtin.set_fact, ansible.builtin.import_role, script, ansible.legacy.command, ansible.builtin.include_role, meta, import_tasks, ansible.legacy.raw, ansible.builtin.include_vars, ansible.builtin.import_tasks, include
2021-06-08 12:05:12,137 p=264441 u=ansible n=ansible |  [ERROR]: User interrupted execution

2021-06-08 12:05:38,715 p=264764 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "checksum": "d04f330afcfc4f8bb4d20f2007795fa967116e4f",
    "dest": "/etc/hosts",
    "gid": 0,
    "group": "root",
    "mode": "0644",
    "owner": "root",
    "path": "/etc/hosts",
    "secontext": "system_u:object_r:net_conf_t:s0",
    "size": 382,
    "state": "file",
    "uid": 0
}
2021-06-08 12:05:40,363 p=264827 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:05:41,868 p=264862 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redpen.repo",
    "state": "absent"
}
2021-06-08 12:05:43,704 p=264904 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "checksum": "37b4b623cd60b60bc8559d1882a481393cdef723",
    "dest": "/etc/yum.repos.d/rhce.repo",
    "gid": 0,
    "group": "root",
    "mode": "0644",
    "owner": "root",
    "path": "/etc/yum.repos.d/rhce.repo",
    "secontext": "system_u:object_r:system_conf_t:s0",
    "size": 349,
    "state": "file",
    "uid": 0
}
2021-06-08 12:05:44,774 p=264953 u=ansible n=ansible | ERROR! this task 'yum_repository' has extra params, which is only allowed in the following modules: ansible.builtin.add_host, ansible.legacy.include_vars, add_host, command, ansible.legacy.win_shell, ansible.builtin.script, raw, shell, ansible.legacy.script, include_tasks, ansible.builtin.include_role, ansible.legacy.raw, ansible.builtin.set_fact, ansible.legacy.shell, ansible.legacy.include_tasks, ansible.legacy.add_host, ansible.legacy.meta, import_tasks, ansible.builtin.shell, win_shell, include, ansible.builtin.meta, ansible.legacy.include, ansible.builtin.include, include_role, ansible.legacy.import_tasks, ansible.builtin.include_tasks, win_command, ansible.builtin.import_tasks, ansible.legacy.set_fact, ansible.legacy.win_command, ansible.builtin.win_shell, script, ansible.builtin.command, ansible.legacy.import_role, ansible.builtin.win_command, ansible.builtin.import_role, ansible.legacy.group_by, meta, group_by, set_fact, ansible.legacy.include_role, import_role, ansible.builtin.group_by, ansible.builtin.include_vars, include_vars, ansible.legacy.command, ansible.builtin.raw
2021-06-08 12:08:21,472 p=266032 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "checksum": "d04f330afcfc4f8bb4d20f2007795fa967116e4f",
    "dest": "/etc/hosts",
    "gid": 0,
    "group": "root",
    "mode": "0644",
    "owner": "root",
    "path": "/etc/hosts",
    "secontext": "system_u:object_r:net_conf_t:s0",
    "size": 382,
    "state": "file",
    "uid": 0
}
2021-06-08 12:08:23,156 p=266091 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:08:24,661 p=266133 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redpen.repo",
    "state": "absent"
}
2021-06-08 12:08:26,301 p=266175 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "checksum": "37b4b623cd60b60bc8559d1882a481393cdef723",
    "dest": "/etc/yum.repos.d/rhce.repo",
    "gid": 0,
    "group": "root",
    "mode": "0644",
    "owner": "root",
    "path": "/etc/yum.repos.d/rhce.repo",
    "secontext": "system_u:object_r:system_conf_t:s0",
    "size": 349,
    "state": "file",
    "uid": 0
}
2021-06-08 12:08:29,296 p=266217 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "repo": "redpen.baseos",
    "state": "present"
}
2021-06-08 12:08:32,671 p=266266 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "repo": "redpen.appstream",
    "state": "present"
}
2021-06-08 12:08:34,910 p=266322 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "checksum": "d04f330afcfc4f8bb4d20f2007795fa967116e4f",
    "dest": "/etc/hosts",
    "gid": 0,
    "group": "root",
    "mode": "0644",
    "owner": "root",
    "path": "/etc/hosts",
    "secontext": "system_u:object_r:net_conf_t:s0",
    "size": 382,
    "state": "file",
    "uid": 0
}
2021-06-08 12:08:37,473 p=266374 u=ansible n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:10:12,116 p=267122 u=ansible n=ansible | ansible3.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/rhce.repo",
    "state": "absent"
}
2021-06-08 12:10:12,159 p=267122 u=ansible n=ansible | ansible4.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/rhce.repo",
    "state": "absent"
}
2021-06-08 12:10:12,171 p=267122 u=ansible n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/rhce.repo",
    "state": "absent"
}
2021-06-08 12:11:35,708 p=267804 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/rhce.repo",
    "state": "absent"
}
2021-06-08 12:11:35,741 p=267804 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/rhce.repo",
    "state": "absent"
}
2021-06-08 12:11:35,762 p=267804 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/rhce.repo",
    "state": "absent"
}
2021-06-08 12:11:48,663 p=267947 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:11:48,731 p=267947 u=ansible n=ansible | ansible3.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:11:48,735 p=267947 u=ansible n=ansible | ansible4.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:12:18,198 p=268195 u=ansible n=ansible | ansible2.example.com | CHANGED | rc=0 >>


2021-06-08 12:12:18,235 p=268195 u=ansible n=ansible | ansible4.example.com | CHANGED | rc=0 >>


2021-06-08 12:12:18,255 p=268195 u=ansible n=ansible | ansible3.example.com | CHANGED | rc=0 >>


2021-06-08 12:12:33,363 p=268343 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:12:33,366 p=268343 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:12:33,419 p=268343 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:12:33,579 p=268343 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:12:33,622 p=268343 u=ansible n=ansible | control.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:12:44,347 p=268637 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/rhce.repo",
    "state": "absent"
}
2021-06-08 12:12:44,353 p=268637 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/rhce.repo",
    "state": "absent"
}
2021-06-08 12:12:44,394 p=268637 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/rhce.repo",
    "state": "absent"
}
2021-06-08 12:12:44,395 p=268637 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/rhce.repo",
    "state": "absent"
}
2021-06-08 12:12:44,618 p=268637 u=ansible n=ansible | control.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/rhce.repo",
    "state": "absent"
}
2021-06-08 12:13:16,931 p=269070 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:13:16,942 p=269070 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:13:16,945 p=269070 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:13:16,972 p=269070 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:13:17,148 p=269070 u=ansible n=ansible | control.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:13:40,263 p=269427 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "checksum": "d04f330afcfc4f8bb4d20f2007795fa967116e4f",
    "dest": "/etc/hosts",
    "gid": 0,
    "group": "root",
    "mode": "0644",
    "owner": "root",
    "path": "/etc/hosts",
    "secontext": "system_u:object_r:net_conf_t:s0",
    "size": 382,
    "state": "file",
    "uid": 0
}
2021-06-08 12:13:45,549 p=269493 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:13:47,050 p=269556 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redpen.repo",
    "state": "absent"
}
2021-06-08 12:13:48,796 p=269598 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "checksum": "37b4b623cd60b60bc8559d1882a481393cdef723",
    "dest": "/etc/yum.repos.d/rhce.repo",
    "gid": 0,
    "group": "root",
    "md5sum": "bd400b3c4ca344fb358f46289aa9cdd3",
    "mode": "0644",
    "owner": "root",
    "secontext": "system_u:object_r:system_conf_t:s0",
    "size": 349,
    "src": "/root/.ansible/tmp/ansible-tmp-1623168828.0627043-269604-260087739887757/source",
    "state": "file",
    "uid": 0
}
2021-06-08 12:13:50,228 p=269645 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "repo": "redpen.baseos",
    "state": "present"
}
2021-06-08 12:13:51,949 p=269687 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "repo": "redpen.appstream",
    "state": "present"
}
2021-06-08 12:13:53,837 p=269722 u=ansible n=ansible |  [ERROR]: User interrupted execution

2021-06-08 12:14:40,079 p=270059 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "checksum": "d04f330afcfc4f8bb4d20f2007795fa967116e4f",
    "dest": "/etc/hosts",
    "gid": 0,
    "group": "root",
    "mode": "0644",
    "owner": "root",
    "path": "/etc/hosts",
    "secontext": "system_u:object_r:net_conf_t:s0",
    "size": 382,
    "state": "file",
    "uid": 0
}
2021-06-08 12:14:49,688 p=270120 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:14:51,712 p=270218 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redpen.repo",
    "state": "absent"
}
2021-06-08 12:14:54,126 p=270260 u=ansible n=ansible | ansible1.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "path": "/etc/yum.repos.d/rhce.repo",
    "state": "absent"
}
2021-06-08 12:14:55,710 p=270302 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "repo": "redpen.baseos",
    "state": "present"
}
2021-06-08 12:14:56,978 p=270344 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "repo": "redpen.appstream",
    "state": "present"
}
2021-06-08 12:14:59,525 p=270379 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "checksum": "d04f330afcfc4f8bb4d20f2007795fa967116e4f",
    "dest": "/etc/hosts",
    "gid": 0,
    "group": "root",
    "mode": "0644",
    "owner": "root",
    "path": "/etc/hosts",
    "secontext": "system_u:object_r:net_conf_t:s0",
    "size": 382,
    "state": "file",
    "uid": 0
}
2021-06-08 12:15:01,088 p=270431 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:15:02,869 p=270473 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redpen.repo",
    "state": "absent"
}
2021-06-08 12:15:04,646 p=270515 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/rhce.repo",
    "state": "absent"
}
2021-06-08 12:15:06,104 p=270550 u=ansible n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "repo": "redpen.baseos",
    "state": "present"
}
2021-06-08 12:15:07,604 p=270592 u=ansible n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "repo": "redpen.appstream",
    "state": "present"
}
2021-06-08 12:15:09,654 p=270627 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "checksum": "d04f330afcfc4f8bb4d20f2007795fa967116e4f",
    "dest": "/etc/hosts",
    "gid": 0,
    "group": "root",
    "mode": "0644",
    "owner": "root",
    "path": "/etc/hosts",
    "secontext": "system_u:object_r:net_conf_t:s0",
    "size": 382,
    "state": "file",
    "uid": 0
}
2021-06-08 12:18:26,795 p=272035 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "checksum": "d04f330afcfc4f8bb4d20f2007795fa967116e4f",
    "dest": "/etc/hosts",
    "gid": 0,
    "group": "root",
    "mode": "0644",
    "owner": "root",
    "path": "/etc/hosts",
    "secontext": "system_u:object_r:net_conf_t:s0",
    "size": 382,
    "state": "file",
    "uid": 0
}
2021-06-08 12:18:28,186 p=272094 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:18:29,709 p=272136 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redpen.repo",
    "state": "absent"
}
2021-06-08 12:18:31,213 p=272171 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/rhce.repo",
    "state": "absent"
}
2021-06-08 12:18:32,693 p=272213 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "repo": "redpen.baseos",
    "state": "present"
}
2021-06-08 12:18:34,128 p=272248 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "repo": "redpen.appstream",
    "state": "present"
}
2021-06-08 12:18:35,998 p=272283 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "checksum": "d04f330afcfc4f8bb4d20f2007795fa967116e4f",
    "dest": "/etc/hosts",
    "gid": 0,
    "group": "root",
    "mode": "0644",
    "owner": "root",
    "path": "/etc/hosts",
    "secontext": "system_u:object_r:net_conf_t:s0",
    "size": 382,
    "state": "file",
    "uid": 0
}
2021-06-08 12:18:37,433 p=272335 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:18:41,214 p=272377 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redpen.repo",
    "state": "absent"
}
2021-06-08 12:18:52,582 p=272433 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/rhce.repo",
    "state": "absent"
}
2021-06-08 12:18:54,261 p=272538 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "repo": "redpen.baseos",
    "state": "present"
}
2021-06-08 12:18:55,878 p=272573 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "repo": "redpen.appstream",
    "state": "present"
}
2021-06-08 12:18:57,712 p=272615 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "checksum": "d04f330afcfc4f8bb4d20f2007795fa967116e4f",
    "dest": "/etc/hosts",
    "gid": 0,
    "group": "root",
    "mode": "0644",
    "owner": "root",
    "path": "/etc/hosts",
    "secontext": "system_u:object_r:net_conf_t:s0",
    "size": 382,
    "state": "file",
    "uid": 0
}
2021-06-08 12:18:59,129 p=272667 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:19:00,656 p=272702 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redpen.repo",
    "state": "absent"
}
2021-06-08 12:19:02,032 p=272744 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/rhce.repo",
    "state": "absent"
}
2021-06-08 12:19:03,420 p=272779 u=ansible n=ansible | ansible3.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "repo": "redpen.baseos",
    "state": "present"
}
2021-06-08 12:19:05,008 p=272821 u=ansible n=ansible | ansible3.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "repo": "redpen.appstream",
    "state": "present"
}
2021-06-08 12:19:06,878 p=272856 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "checksum": "d04f330afcfc4f8bb4d20f2007795fa967116e4f",
    "dest": "/etc/hosts",
    "gid": 0,
    "group": "root",
    "mode": "0644",
    "owner": "root",
    "path": "/etc/hosts",
    "secontext": "system_u:object_r:net_conf_t:s0",
    "size": 382,
    "state": "file",
    "uid": 0
}
2021-06-08 12:19:08,389 p=272908 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redhat.repo",
    "state": "absent"
}
2021-06-08 12:19:09,856 p=272943 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/redpen.repo",
    "state": "absent"
}
2021-06-08 12:19:11,268 p=272985 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "path": "/etc/yum.repos.d/rhce.repo",
    "state": "absent"
}
2021-06-08 12:19:12,713 p=273020 u=ansible n=ansible | ansible4.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "repo": "redpen.baseos",
    "state": "present"
}
2021-06-08 12:19:14,369 p=273062 u=ansible n=ansible | ansible4.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "repo": "redpen.appstream",
    "state": "present"
}
2021-06-08 13:14:32,080 p=296146 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-08 13:14:33,902 p=296316 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-08 13:14:36,440 p=296358 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-08 13:14:38,750 p=296400 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "comment": null,
    "exclusive": false,
    "follow": false,
    "key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDakTxcSbVwGVQ2jGeIc+brSewXnlNgSB4KOT3ceph6AqN4gzwAvtWtI/Gigoon4eMMq+W5dAzjtrdiXVyyUydpgTxI0TwjE2YdcPQOS9oc7b0KKVnmYILhZVwO1zra7ak4r6uwKeS0Xj7TBNUKIZ84sRjt6m1OY3qqo9Z0iwOoiYFV0TBKk0dhXrJvydkgxyV6WN14ATcxztp79qbw+GYVlR4OiO4G1xPIiVykXivXk5q9roWzR7XCXVA5LRTOxV/mK0i0j7t2482bGqWzaqOemg4C1dFzw0qQvsdEoSltl1ZGnFXM2AGpZ4mlPVeVKox9i+dqkAkoXzu856QvF6f27O/wINPFUn5d+hdG/G1Jb8Add/4OAJgsgDUmOGaxqU3luZsFRgNs3NcpaDDaMOtYxHgTFoHNUtSDeIzCRx+9GJ7z7Ozv2at9LyL3hsyhMZYg1Ij3RmKiI9qE3bMluCpG4Zp3edwCmdIADCk3YwtoH1Q+8Y7GeJP1vw5h3J+8Z3c= ansible@control.example.com",
    "key_options": null,
    "keyfile": "/home/ansible/.ssh/authorized_keys",
    "manage_dir": true,
    "path": null,
    "state": "present",
    "user": "ansible",
    "validate_certs": true
}
2021-06-08 13:14:52,691 p=296449 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-08 13:14:54,611 p=296602 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-08 13:14:56,288 p=296644 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-08 13:14:58,268 p=296686 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "comment": null,
    "exclusive": false,
    "follow": false,
    "key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDakTxcSbVwGVQ2jGeIc+brSewXnlNgSB4KOT3ceph6AqN4gzwAvtWtI/Gigoon4eMMq+W5dAzjtrdiXVyyUydpgTxI0TwjE2YdcPQOS9oc7b0KKVnmYILhZVwO1zra7ak4r6uwKeS0Xj7TBNUKIZ84sRjt6m1OY3qqo9Z0iwOoiYFV0TBKk0dhXrJvydkgxyV6WN14ATcxztp79qbw+GYVlR4OiO4G1xPIiVykXivXk5q9roWzR7XCXVA5LRTOxV/mK0i0j7t2482bGqWzaqOemg4C1dFzw0qQvsdEoSltl1ZGnFXM2AGpZ4mlPVeVKox9i+dqkAkoXzu856QvF6f27O/wINPFUn5d+hdG/G1Jb8Add/4OAJgsgDUmOGaxqU3luZsFRgNs3NcpaDDaMOtYxHgTFoHNUtSDeIzCRx+9GJ7z7Ozv2at9LyL3hsyhMZYg1Ij3RmKiI9qE3bMluCpG4Zp3edwCmdIADCk3YwtoH1Q+8Y7GeJP1vw5h3J+8Z3c= ansible@control.example.com",
    "key_options": null,
    "keyfile": "/home/ansible/.ssh/authorized_keys",
    "manage_dir": true,
    "path": null,
    "state": "present",
    "user": "ansible",
    "validate_certs": true
}
2021-06-08 13:15:01,333 p=296728 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-08 13:15:02,851 p=296787 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-08 13:15:04,454 p=296829 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-08 13:15:06,341 p=296864 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "comment": null,
    "exclusive": false,
    "follow": false,
    "key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDakTxcSbVwGVQ2jGeIc+brSewXnlNgSB4KOT3ceph6AqN4gzwAvtWtI/Gigoon4eMMq+W5dAzjtrdiXVyyUydpgTxI0TwjE2YdcPQOS9oc7b0KKVnmYILhZVwO1zra7ak4r6uwKeS0Xj7TBNUKIZ84sRjt6m1OY3qqo9Z0iwOoiYFV0TBKk0dhXrJvydkgxyV6WN14ATcxztp79qbw+GYVlR4OiO4G1xPIiVykXivXk5q9roWzR7XCXVA5LRTOxV/mK0i0j7t2482bGqWzaqOemg4C1dFzw0qQvsdEoSltl1ZGnFXM2AGpZ4mlPVeVKox9i+dqkAkoXzu856QvF6f27O/wINPFUn5d+hdG/G1Jb8Add/4OAJgsgDUmOGaxqU3luZsFRgNs3NcpaDDaMOtYxHgTFoHNUtSDeIzCRx+9GJ7z7Ozv2at9LyL3hsyhMZYg1Ij3RmKiI9qE3bMluCpG4Zp3edwCmdIADCk3YwtoH1Q+8Y7GeJP1vw5h3J+8Z3c= ansible@control.example.com",
    "key_options": null,
    "keyfile": "/home/ansible/.ssh/authorized_keys",
    "manage_dir": true,
    "path": null,
    "state": "present",
    "user": "ansible",
    "validate_certs": true
}
2021-06-08 13:15:10,827 p=296906 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2021-06-08 13:15:12,474 p=296996 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "append": false,
    "changed": false,
    "comment": "",
    "group": 1000,
    "home": "/home/ansible",
    "move_home": false,
    "name": "ansible",
    "shell": "/bin/bash",
    "state": "present",
    "uid": 1000
}
2021-06-08 13:15:14,074 p=297038 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "backup": "",
    "changed": false,
    "msg": ""
}
2021-06-08 13:15:15,709 p=297080 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "comment": null,
    "exclusive": false,
    "follow": false,
    "key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDakTxcSbVwGVQ2jGeIc+brSewXnlNgSB4KOT3ceph6AqN4gzwAvtWtI/Gigoon4eMMq+W5dAzjtrdiXVyyUydpgTxI0TwjE2YdcPQOS9oc7b0KKVnmYILhZVwO1zra7ak4r6uwKeS0Xj7TBNUKIZ84sRjt6m1OY3qqo9Z0iwOoiYFV0TBKk0dhXrJvydkgxyV6WN14ATcxztp79qbw+GYVlR4OiO4G1xPIiVykXivXk5q9roWzR7XCXVA5LRTOxV/mK0i0j7t2482bGqWzaqOemg4C1dFzw0qQvsdEoSltl1ZGnFXM2AGpZ4mlPVeVKox9i+dqkAkoXzu856QvF6f27O/wINPFUn5d+hdG/G1Jb8Add/4OAJgsgDUmOGaxqU3luZsFRgNs3NcpaDDaMOtYxHgTFoHNUtSDeIzCRx+9GJ7z7Ozv2at9LyL3hsyhMZYg1Ij3RmKiI9qE3bMluCpG4Zp3edwCmdIADCk3YwtoH1Q+8Y7GeJP1vw5h3J+8Z3c= ansible@control.example.com",
    "key_options": null,
    "keyfile": "/home/ansible/.ssh/authorized_keys",
    "manage_dir": true,
    "path": null,
    "state": "present",
    "user": "ansible",
    "validate_certs": true
}
2021-06-08 13:15:17,285 p=297115 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-08 13:15:17,295 p=297115 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-08 13:15:17,300 p=297115 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-08 13:15:17,452 p=297115 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-08 13:15:17,455 p=297115 u=ansible n=ansible | control.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-08 13:20:00,606 p=299365 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  did not find expected ',' or '}'

The error appears to be in '/home/ansible/task5.yml': line 8, column 23, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      lineinfile: dest=/etc/hosts regexp='.*{{ item }}$'
                      ^ here

There appears to be both 'k=v' shorthand syntax and YAML in this task. Only one syntax may be used.
We could be wrong, but this one looks like it might be an issue with
missing quotes. Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2021-06-08 13:21:27,690 p=299975 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  mapping values are not allowed in this context

The error appears to be in '/home/ansible/task5.yml': line 9, column 141, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


      lineinfile: dest=/etc/hosts regexp='.*{{ item }}$' line="{{ hostvars[item].ansible_default_ipv4.address }} {{item}}" state=presentwhen: hostvars[item].ansible_default_ipv4.address is defined
                                                                                                                                            ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes. Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2021-06-08 13:21:54,780 p=300172 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-08 13:21:54,788 p=300172 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-08 13:21:57,650 p=300172 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-08 13:21:57,791 p=300172 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-08 13:21:57,908 p=300172 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-08 13:21:58,002 p=300172 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-08 13:21:58,009 p=300172 u=ansible n=ansible | TASK [lineinfile] ***********************************************************************************************
2021-06-08 13:21:58,072 p=300172 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"msg": "The conditional check 'hostvars[item].ansible_default_ipv4.address is defined' failed. The error was: error while evaluating conditional (hostvars[item].ansible_default_ipv4.address is defined): \"hostvars['groups['all']']\" is undefined\n\nThe error appears to be in '/home/ansible/task5.yml': line 7, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  tasks:\n    - name:\n      ^ here\n"}
2021-06-08 13:21:58,073 p=300172 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"msg": "The conditional check 'hostvars[item].ansible_default_ipv4.address is defined' failed. The error was: error while evaluating conditional (hostvars[item].ansible_default_ipv4.address is defined): \"hostvars['groups['all']']\" is undefined\n\nThe error appears to be in '/home/ansible/task5.yml': line 7, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  tasks:\n    - name:\n      ^ here\n"}
2021-06-08 13:21:58,075 p=300172 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"msg": "The conditional check 'hostvars[item].ansible_default_ipv4.address is defined' failed. The error was: error while evaluating conditional (hostvars[item].ansible_default_ipv4.address is defined): \"hostvars['groups['all']']\" is undefined\n\nThe error appears to be in '/home/ansible/task5.yml': line 7, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  tasks:\n    - name:\n      ^ here\n"}
2021-06-08 13:21:58,090 p=300172 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"msg": "The conditional check 'hostvars[item].ansible_default_ipv4.address is defined' failed. The error was: error while evaluating conditional (hostvars[item].ansible_default_ipv4.address is defined): \"hostvars['groups['all']']\" is undefined\n\nThe error appears to be in '/home/ansible/task5.yml': line 7, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  tasks:\n    - name:\n      ^ here\n"}
2021-06-08 13:21:58,091 p=300172 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-08 13:21:58,091 p=300172 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-08 13:21:58,091 p=300172 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-08 13:21:58,091 p=300172 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-08 13:21:58,092 p=300172 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-08 13:22:35,613 p=300535 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-08 13:22:35,621 p=300535 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-08 13:22:37,020 p=300535 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-08 13:22:37,023 p=300535 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-08 13:22:37,024 p=300535 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-08 13:22:37,038 p=300535 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-08 13:22:37,045 p=300535 u=ansible n=ansible | TASK [lineinfile] ***********************************************************************************************
2021-06-08 13:22:37,095 p=300535 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"msg": "The conditional check 'hostvars[item].ansible_default_ipv4.address is defined' failed. The error was: error while evaluating conditional (hostvars[item].ansible_default_ipv4.address is defined): \"hostvars['groups['all']']\" is undefined\n\nThe error appears to be in '/home/ansible/task5.yml': line 7, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  tasks:\n    - name:\n      ^ here\n"}
2021-06-08 13:22:37,103 p=300535 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"msg": "The conditional check 'hostvars[item].ansible_default_ipv4.address is defined' failed. The error was: error while evaluating conditional (hostvars[item].ansible_default_ipv4.address is defined): \"hostvars['groups['all']']\" is undefined\n\nThe error appears to be in '/home/ansible/task5.yml': line 7, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  tasks:\n    - name:\n      ^ here\n"}
2021-06-08 13:22:37,105 p=300535 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"msg": "The conditional check 'hostvars[item].ansible_default_ipv4.address is defined' failed. The error was: error while evaluating conditional (hostvars[item].ansible_default_ipv4.address is defined): \"hostvars['groups['all']']\" is undefined\n\nThe error appears to be in '/home/ansible/task5.yml': line 7, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  tasks:\n    - name:\n      ^ here\n"}
2021-06-08 13:22:37,111 p=300535 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"msg": "The conditional check 'hostvars[item].ansible_default_ipv4.address is defined' failed. The error was: error while evaluating conditional (hostvars[item].ansible_default_ipv4.address is defined): \"hostvars['groups['all']']\" is undefined\n\nThe error appears to be in '/home/ansible/task5.yml': line 7, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  tasks:\n    - name:\n      ^ here\n"}
2021-06-08 13:22:37,112 p=300535 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-08 13:22:37,112 p=300535 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-08 13:22:37,112 p=300535 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-08 13:22:37,112 p=300535 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-08 13:22:37,113 p=300535 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-08 13:23:32,582 p=300995 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-08 13:23:32,589 p=300995 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-08 13:23:33,904 p=300995 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-08 13:23:33,934 p=300995 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-08 13:23:33,988 p=300995 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-08 13:23:33,990 p=300995 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-08 13:23:33,997 p=300995 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-08 13:23:34,052 p=300995 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"msg": "The conditional check 'hostvars[item].ansible_default_ipv4.address is defined' failed. The error was: error while evaluating conditional (hostvars[item].ansible_default_ipv4.address is defined): \"hostvars['groups['all']']\" is undefined\n\nThe error appears to be in '/home/ansible/task5.yml': line 7, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  tasks:\n    - name: build hosts from facts\n      ^ here\n"}
2021-06-08 13:23:34,054 p=300995 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"msg": "The conditional check 'hostvars[item].ansible_default_ipv4.address is defined' failed. The error was: error while evaluating conditional (hostvars[item].ansible_default_ipv4.address is defined): \"hostvars['groups['all']']\" is undefined\n\nThe error appears to be in '/home/ansible/task5.yml': line 7, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  tasks:\n    - name: build hosts from facts\n      ^ here\n"}
2021-06-08 13:23:34,056 p=300995 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"msg": "The conditional check 'hostvars[item].ansible_default_ipv4.address is defined' failed. The error was: error while evaluating conditional (hostvars[item].ansible_default_ipv4.address is defined): \"hostvars['groups['all']']\" is undefined\n\nThe error appears to be in '/home/ansible/task5.yml': line 7, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  tasks:\n    - name: build hosts from facts\n      ^ here\n"}
2021-06-08 13:23:34,068 p=300995 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"msg": "The conditional check 'hostvars[item].ansible_default_ipv4.address is defined' failed. The error was: error while evaluating conditional (hostvars[item].ansible_default_ipv4.address is defined): \"hostvars['groups['all']']\" is undefined\n\nThe error appears to be in '/home/ansible/task5.yml': line 7, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  tasks:\n    - name: build hosts from facts\n      ^ here\n"}
2021-06-08 13:23:34,069 p=300995 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-08 13:23:34,069 p=300995 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-08 13:23:34,069 p=300995 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-08 13:23:34,069 p=300995 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-08 13:23:34,069 p=300995 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:24:43,448 p=349740 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:24:43,455 p=349740 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:24:45,601 p=349740 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:24:45,627 p=349740 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:24:45,779 p=349740 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:24:45,810 p=349740 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:24:45,820 p=349740 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:24:46,001 p=349740 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "Could not find or access 'template/hosts.j2'\nSearched in:\n\t/home/ansible/templates/template/hosts.j2\n\t/home/ansible/template/hosts.j2\n\t/home/ansible/templates/template/hosts.j2\n\t/home/ansible/template/hosts.j2 on the Ansible Controller.\nIf you are using a module and expect the file to exist on the remote, see the remote_src option"}
2021-06-14 08:24:46,002 p=349740 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "Could not find or access 'template/hosts.j2'\nSearched in:\n\t/home/ansible/templates/template/hosts.j2\n\t/home/ansible/template/hosts.j2\n\t/home/ansible/templates/template/hosts.j2\n\t/home/ansible/template/hosts.j2 on the Ansible Controller.\nIf you are using a module and expect the file to exist on the remote, see the remote_src option"}
2021-06-14 08:24:46,014 p=349740 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "Could not find or access 'template/hosts.j2'\nSearched in:\n\t/home/ansible/templates/template/hosts.j2\n\t/home/ansible/template/hosts.j2\n\t/home/ansible/templates/template/hosts.j2\n\t/home/ansible/template/hosts.j2 on the Ansible Controller.\nIf you are using a module and expect the file to exist on the remote, see the remote_src option"}
2021-06-14 08:24:46,029 p=349740 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "Could not find or access 'template/hosts.j2'\nSearched in:\n\t/home/ansible/templates/template/hosts.j2\n\t/home/ansible/template/hosts.j2\n\t/home/ansible/templates/template/hosts.j2\n\t/home/ansible/template/hosts.j2 on the Ansible Controller.\nIf you are using a module and expect the file to exist on the remote, see the remote_src option"}
2021-06-14 08:24:46,030 p=349740 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:24:46,030 p=349740 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:24:46,030 p=349740 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:24:46,030 p=349740 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:24:46,030 p=349740 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:25:21,481 p=350119 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:25:21,488 p=350119 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:25:22,858 p=350119 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:25:22,900 p=350119 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:25:22,902 p=350119 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:25:22,938 p=350119 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:25:22,946 p=350119 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:25:23,143 p=350119 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'default_ipv4'"}
2021-06-14 08:25:23,151 p=350119 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'default_ipv4'"}
2021-06-14 08:25:23,160 p=350119 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'default_ipv4'"}
2021-06-14 08:25:23,160 p=350119 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'default_ipv4'"}
2021-06-14 08:25:23,161 p=350119 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:25:23,161 p=350119 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:25:23,161 p=350119 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:25:23,162 p=350119 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:25:23,162 p=350119 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:26:39,406 p=350732 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:26:39,414 p=350732 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:26:41,181 p=350732 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:26:41,186 p=350732 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:26:41,201 p=350732 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:26:41,215 p=350732 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:26:41,223 p=350732 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:26:41,425 p=350732 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:26:41,431 p=350732 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:26:41,434 p=350732 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:26:41,438 p=350732 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:26:41,439 p=350732 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:26:41,439 p=350732 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:26:41,439 p=350732 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:26:41,439 p=350732 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:26:41,439 p=350732 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:28:55,312 p=351762 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:28:55,320 p=351762 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:28:57,061 p=351762 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:28:57,097 p=351762 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:28:57,099 p=351762 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:28:57,110 p=351762 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:28:57,118 p=351762 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:28:57,311 p=351762 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ipv4'"}
2021-06-14 08:28:57,328 p=351762 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ipv4'"}
2021-06-14 08:28:57,338 p=351762 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ipv4'"}
2021-06-14 08:28:57,338 p=351762 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ipv4'"}
2021-06-14 08:28:57,339 p=351762 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:28:57,339 p=351762 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:28:57,339 p=351762 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:28:57,339 p=351762 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:28:57,340 p=351762 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:29:34,469 p=352123 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:29:34,477 p=352123 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:29:35,858 p=352123 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:29:35,866 p=352123 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:29:35,896 p=352123 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:29:35,919 p=352123 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:29:35,927 p=352123 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:29:36,108 p=352123 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_ens192'"}
2021-06-14 08:29:36,132 p=352123 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_ens192'"}
2021-06-14 08:29:36,134 p=352123 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_ens192'"}
2021-06-14 08:29:36,139 p=352123 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_ens192'"}
2021-06-14 08:29:36,140 p=352123 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:29:36,140 p=352123 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:29:36,140 p=352123 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:29:36,140 p=352123 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:29:36,141 p=352123 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:30:31,562 p=352594 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:30:31,571 p=352594 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:30:32,988 p=352594 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:30:33,047 p=352594 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:30:33,049 p=352594 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:30:33,063 p=352594 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:30:33,071 p=352594 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:30:33,273 p=352594 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ens192_ipv4'"}
2021-06-14 08:30:33,273 p=352594 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ens192_ipv4'"}
2021-06-14 08:30:33,297 p=352594 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ens192_ipv4'"}
2021-06-14 08:30:33,299 p=352594 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ens192_ipv4'"}
2021-06-14 08:30:33,300 p=352594 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:30:33,301 p=352594 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:30:33,301 p=352594 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:30:33,301 p=352594 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:30:33,301 p=352594 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:30:47,435 p=352773 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:30:47,442 p=352773 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:30:48,856 p=352773 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:30:48,927 p=352773 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:30:48,930 p=352773 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:30:48,932 p=352773 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:30:48,939 p=352773 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:30:49,149 p=352773 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ipv4'"}
2021-06-14 08:30:49,153 p=352773 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ipv4'"}
2021-06-14 08:30:49,155 p=352773 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ipv4'"}
2021-06-14 08:30:49,161 p=352773 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ipv4'"}
2021-06-14 08:30:49,162 p=352773 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:30:49,162 p=352773 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:30:49,162 p=352773 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:30:49,162 p=352773 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:30:49,162 p=352773 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:31:39,076 p=353203 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:31:39,084 p=353203 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:31:40,526 p=353203 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:31:40,586 p=353203 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:31:40,591 p=353203 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:31:40,647 p=353203 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:31:40,663 p=353203 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:31:40,892 p=353203 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:31:40,893 p=353203 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:31:40,897 p=353203 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:31:40,900 p=353203 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:31:40,901 p=353203 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:31:40,901 p=353203 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:31:40,901 p=353203 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:31:40,901 p=353203 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:31:40,901 p=353203 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:32:39,784 p=353697 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:32:39,792 p=353697 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:32:41,329 p=353697 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:32:41,353 p=353697 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:32:41,356 p=353697 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:32:41,379 p=353697 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:32:41,389 p=353697 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:32:41,621 p=353697 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:32:41,635 p=353697 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:32:41,644 p=353697 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:32:41,673 p=353697 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:32:41,674 p=353697 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:32:41,674 p=353697 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:32:41,675 p=353697 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:32:41,675 p=353697 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:32:41,675 p=353697 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:33:46,945 p=354247 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:33:46,953 p=354247 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:33:48,782 p=354247 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:33:48,788 p=354247 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:33:48,837 p=354247 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:33:48,905 p=354247 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:33:48,915 p=354247 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:33:49,137 p=354247 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:33:49,148 p=354247 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:33:49,152 p=354247 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:33:49,168 p=354247 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:33:49,169 p=354247 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:33:49,169 p=354247 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:33:49,169 p=354247 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:33:49,169 p=354247 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:33:49,169 p=354247 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:34:17,070 p=354535 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:34:17,079 p=354535 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:34:18,482 p=354535 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:34:18,518 p=354535 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:34:18,593 p=354535 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:34:18,596 p=354535 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:34:18,606 p=354535 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:34:18,845 p=354535 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'default_ipv4'"}
2021-06-14 08:34:18,851 p=354535 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'default_ipv4'"}
2021-06-14 08:34:18,851 p=354535 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'default_ipv4'"}
2021-06-14 08:34:18,852 p=354535 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'default_ipv4'"}
2021-06-14 08:34:18,854 p=354535 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:34:18,855 p=354535 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:34:18,855 p=354535 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:34:18,855 p=354535 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:34:18,855 p=354535 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:34:35,504 p=354734 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:34:35,512 p=354734 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:34:36,939 p=354734 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:34:37,021 p=354734 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:34:37,023 p=354734 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:34:37,053 p=354734 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:34:37,066 p=354734 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:34:37,290 p=354734 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ipv4'"}
2021-06-14 08:34:37,300 p=354734 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ipv4'"}
2021-06-14 08:34:37,306 p=354734 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ipv4'"}
2021-06-14 08:34:37,311 p=354734 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ipv4'"}
2021-06-14 08:34:37,312 p=354734 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:34:37,312 p=354734 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:34:37,312 p=354734 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:34:37,313 p=354734 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:34:37,313 p=354734 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:34:59,478 p=354976 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:34:59,486 p=354976 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:35:00,900 p=354976 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:35:00,923 p=354976 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:35:00,946 p=354976 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:35:00,948 p=354976 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:35:00,956 p=354976 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:35:01,161 p=354976 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:35:01,161 p=354976 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:35:01,163 p=354976 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:35:01,174 p=354976 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:35:01,176 p=354976 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:35:01,176 p=354976 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:35:01,176 p=354976 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:35:01,177 p=354976 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:35:01,177 p=354976 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:35:51,060 p=355411 u=ansible n=ansible | playbook: task5.yml
2021-06-14 08:35:51,060 p=355411 u=ansible n=ansible |   play #1 (test,servers): build /etc/hosts from Ansible inventory	TAGS: []
2021-06-14 08:35:51,061 p=355411 u=ansible n=ansible |       TASK TAGS: []

2021-06-14 08:36:02,216 p=355494 u=ansible n=ansible | playbook: task5.yml
2021-06-14 08:36:02,216 p=355494 u=ansible n=ansible |   play #1 (test,servers): build /etc/hosts from Ansible inventory	TAGS: []
2021-06-14 08:36:02,217 p=355494 u=ansible n=ansible |       TASK TAGS: []

2021-06-14 08:36:36,302 p=355724 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.204"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::4ada:bfc9:6c2b:38d1"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel/swap",
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_date_time": {
            "date": "2021-06-14",
            "day": "14",
            "epoch": "1623674195",
            "hour": "08",
            "iso8601": "2021-06-14T12:36:35Z",
            "iso8601_basic": "20210614T083635807085",
            "iso8601_basic_short": "20210614T083635",
            "iso8601_micro": "2021-06-14T12:36:35.807085Z",
            "minute": "36",
            "month": "06",
            "second": "35",
            "time": "08:36:35",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Monday",
            "weekday_number": "1",
            "weeknumber": "24",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.204",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:5d:9b:8e",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel-root",
                    "dm-uuid-LVM-94jQ6GeTRdOZzeRnWnft1ZntbEt9AV9YLg1fmntRIorXHsU0rgzYgs5UrCXAzQmL"
                ],
                "dm-1": [
                    "dm-name-rhel-swap",
                    "dm-uuid-LVM-94jQ6GeTRdOZzeRnWnft1ZntbEt9AV9Ywu58cxXZHSS0VFlmZl4A4XAtaeFGPVRW"
                ],
                "sda3": [
                    "lvm-pv-uuid-Ygcalh-cof8-x03r-6pJM-k10k-2jjI-FSfVlk"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "65b95487-31f7-4759-92d2-f451b5cc0a84"
                ],
                "dm-1": [
                    "d3f03fe6-24a5-4e9e-9d00-6ff5dbbb3fbf"
                ],
                "sda1": [
                    "C3FA-5086"
                ],
                "sda2": [
                    "c26262be-4b3c-42c9-bdc2-6f58352e638c"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-root",
                        "dm-uuid-LVM-94jQ6GeTRdOZzeRnWnft1ZntbEt9AV9YLg1fmntRIorXHsU0rgzYgs5UrCXAzQmL"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "65b95487-31f7-4759-92d2-f451b5cc0a84"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-swap",
                        "dm-uuid-LVM-94jQ6GeTRdOZzeRnWnft1ZntbEt9AV9Ywu58cxXZHSS0VFlmZl4A4XAtaeFGPVRW"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "d3f03fe6-24a5-4e9e-9d00-6ff5dbbb3fbf"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "C3FA-5086"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "C3FA-5086"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "c26262be-4b3c-42c9-bdc2-6f58352e638c"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "c26262be-4b3c-42c9-bdc2-6f58352e638c"
                    },
                    "sda3": {
                        "holders": [
                            "rhel-swap",
                            "rhel-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-Ygcalh-cof8-x03r-6pJM-k10k-2jjI-FSfVlk"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.204",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::4ada:bfc9:6c2b:38d1",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:5d:9b:8e",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HOME": "/root",
            "LANG": "en_US.UTF-8",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/mail/root",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-bubnitndkpvzpvilcxtkosffxzgojxcz ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1623674194.8771856-355736-117470500788510/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "ansible4.example.com",
        "ansible_hostname": "ansible4",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "ens192",
            "lo"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:1ca1ff26a0",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel"
                }
            },
            "vgs": {
                "rhel": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "5d25efe380b94084b01c24c08cae60a8",
        "ansible_memfree_mb": 145,
        "ansible_memory_mb": {
            "nocache": {
                "free": 527,
                "used": 291
            },
            "real": {
                "free": 145,
                "total": 818,
                "used": 673
            },
            "swap": {
                "cached": 1,
                "free": 2041,
                "total": 2047,
                "used": 6
            }
        },
        "ansible_memtotal_mb": 818,
        "ansible_mounts": [
            {
                "block_available": 3780318,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 518946,
                "device": "/dev/mapper/rhel-root",
                "fstype": "xfs",
                "inode_available": 8555946,
                "inode_total": 8603648,
                "inode_used": 47702,
                "mount": "/",
                "options": "rw,seclabel,relatime,attr2,inode64,noquota",
                "size_available": 15484182528,
                "size_total": 17609785344,
                "uuid": "65b95487-31f7-4759-92d2-f451b5cc0a84"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,seclabel,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "c26262be-4b3c-42c9-bdc2-6f58352e638c"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "C3FA-5086"
            }
        ],
        "ansible_nodename": "ansible4.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel/root",
                "rhel/swap"
            ],
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 1,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 1,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d f3 fd 18 4b bc f8-ef 2d a2 a9 cc 5d 9b 8e",
        "ansible_product_uuid": "fdf34d56-4b18-f8bc-ef2d-a2a9cc5d9b8e",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "config_mode": "enforcing",
            "mode": "enforcing",
            "policyvers": 31,
            "status": "enabled",
            "type": "targeted"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBDhEL10Bz9lxOfMHT0ERWZlbYtxfOp7GLbDpCrJ5/WPI3K59zi1Oitl6Bnrujj/uYBXlBJNGBYX5lJ4OHXd3Ly0=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIOOqKaMguZ6Ma9f9oaV79ysQpEIWThSMisgRAJuHk9mr",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQDpL9GGKYdeLVCM6UopOEwEO04OAsR58deV7m3rieJ2W38DIWwH2SHiGoYrEjELzHkoQQZz9A/Vxr3qJFDGoc4m/MQN/mPQsabrcjFhyDkOf6RTB+/j0S0lWgZJzAg6eSiYGoNabLUv47fWV4B7qct35ZE1ExChyDSn+/8kJ8LMkfvmF9EoqxvZQfeAyCafmWHdf9UZO83M4hF5oONeEUg6v8EtIWL9Bgtzd/TPwNCpc/axyn7dp8/MRejvZsMQmpVRW2lZ7Xbqn4m5FB7rcHeycFTyQ+nW/lCq+TGNAKb4ZjTSsYO1LEYRkj5mqrZ5KQKnRBl7qzXjTcYscWHKYzvyl9iqdkEsza6OTilxKLLxhuOAPI0XAKr79lYep6YTzkcwP4z/3URyjzGX2AhWRZDZ6jpqkpZFXh208M/LhSQa5lYPJIdz/dEp2wGmwbFKghYnvkERJNiYmIwbm5GgVpwCqvz61NaEEiFwrBd2gN0Vnhs5E0YFdx2DPd17Wqwq0Ns=",
        "ansible_swapfree_mb": 2041,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 1360658,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "discovered_interpreter_python": "/usr/libexec/platform-python",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-14 08:36:36,396 p=355724 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.202"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::8949:237:95b5:869f"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel_ansible2/swap",
            "resume": "/dev/mapper/rhel_ansible2-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel_ansible2-root"
        },
        "ansible_date_time": {
            "date": "2021-06-14",
            "day": "14",
            "epoch": "1623674195",
            "hour": "08",
            "iso8601": "2021-06-14T12:36:35Z",
            "iso8601_basic": "20210614T083635799869",
            "iso8601_basic_short": "20210614T083635",
            "iso8601_micro": "2021-06-14T12:36:35.799869Z",
            "minute": "36",
            "month": "06",
            "second": "35",
            "time": "08:36:35",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Monday",
            "weekday_number": "1",
            "weeknumber": "24",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.202",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:2f:91:45",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel_ansible2-root",
                    "dm-uuid-LVM-GUTU4WnOEBZz1klCoVTgZTnoejUlaRjhgux91ENrrfFGoRjQehFwwBXOwt4zIkih"
                ],
                "dm-1": [
                    "dm-name-rhel_ansible2-swap",
                    "dm-uuid-LVM-GUTU4WnOEBZz1klCoVTgZTnoejUlaRjhwiNnswC6D5XqV7PTsgr66qLwgoSlpBJD"
                ],
                "sda3": [
                    "lvm-pv-uuid-GNQ4Ju-gdUi-070Z-kGyn-BK33-KMmy-hhsfOk"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "2f84d365-0d92-47a4-9f98-6e1c64152f97"
                ],
                "dm-1": [
                    "c4c3e941-6d59-406c-90ce-5a9c7b3e5082"
                ],
                "sda1": [
                    "BB08-D8B1"
                ],
                "sda2": [
                    "58fded1f-2edd-4215-861b-040b6a68132f"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel_ansible2-root",
                        "dm-uuid-LVM-GUTU4WnOEBZz1klCoVTgZTnoejUlaRjhgux91ENrrfFGoRjQehFwwBXOwt4zIkih"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "2f84d365-0d92-47a4-9f98-6e1c64152f97"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel_ansible2-swap",
                        "dm-uuid-LVM-GUTU4WnOEBZz1klCoVTgZTnoejUlaRjhwiNnswC6D5XqV7PTsgr66qLwgoSlpBJD"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "c4c3e941-6d59-406c-90ce-5a9c7b3e5082"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "BB08-D8B1"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "BB08-D8B1"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "58fded1f-2edd-4215-861b-040b6a68132f"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "58fded1f-2edd-4215-861b-040b6a68132f"
                    },
                    "sda3": {
                        "holders": [
                            "rhel_ansible2-swap",
                            "rhel_ansible2-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-GNQ4Ju-gdUi-070Z-kGyn-BK33-KMmy-hhsfOk"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.202",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::8949:237:95b5:869f",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:2f:91:45",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HOME": "/root",
            "LANG": "en_US.UTF-8",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/mail/root",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-biybammzvbqlrphtzwpofdmosgzjpwdj ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1623674194.8887944-355733-121849915172894/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "ansible2.example.com",
        "ansible_hostname": "ansible2",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "ens192",
            "lo"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:95198d9ee5d",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel_ansible2"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel_ansible2"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel_ansible2"
                }
            },
            "vgs": {
                "rhel_ansible2": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "8989a96f9dd545e5acb7b962262a17d0",
        "ansible_memfree_mb": 148,
        "ansible_memory_mb": {
            "nocache": {
                "free": 524,
                "used": 294
            },
            "real": {
                "free": 148,
                "total": 818,
                "used": 670
            },
            "swap": {
                "cached": 1,
                "free": 2042,
                "total": 2047,
                "used": 5
            }
        },
        "ansible_memtotal_mb": 818,
        "ansible_mounts": [
            {
                "block_available": 3780134,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 519130,
                "device": "/dev/mapper/rhel_ansible2-root",
                "fstype": "xfs",
                "inode_available": 8555945,
                "inode_total": 8603648,
                "inode_used": 47703,
                "mount": "/",
                "options": "rw,seclabel,relatime,attr2,inode64,noquota",
                "size_available": 15483428864,
                "size_total": 17609785344,
                "uuid": "2f84d365-0d92-47a4-9f98-6e1c64152f97"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,seclabel,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "58fded1f-2edd-4215-861b-040b6a68132f"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "BB08-D8B1"
            }
        ],
        "ansible_nodename": "ansible2.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel_ansible2/root",
                "rhel_ansible2/swap"
            ],
            "resume": "/dev/mapper/rhel_ansible2-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel_ansible2-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 1,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 1,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d b9 d1 6b 8f 8f 1a-cd be 5b 7a 86 2f 91 45",
        "ansible_product_uuid": "d1b94d56-8f6b-1a8f-cdbe-5b7a862f9145",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "config_mode": "enforcing",
            "mode": "enforcing",
            "policyvers": 31,
            "status": "enabled",
            "type": "targeted"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBBywJ/DVvY9+QIjSjMjvi7mw//NtALFqV9lqAOYpaWUs8wRHdpubS0xZIdlkCE8V8dazafGTy3Znb8u2tMAX4MU=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAINNAjcqxMc6xisWXtnsxwT9FFc1yCabQ6JIdRM5vaYoU",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQCn1N/3PiCTyvvNnifkgufpme0SrUMxwH/Xxwv5KdezUfzrRaiorFVbnHk1oI6hT9wIkXljFyhoIgZLdoDheQE+36SzR7D5jQn8GNjmhSsPshlznj8I+zkKCv+UqSCnjHApT6aXCV+lgvYfSXUjgexcqwivPEttF23ylUG36g6oLn1aBcUrIlFpj1M16tizGod4Y5j+lpMMBM8+eXHYJSgLm+xenTJidhKrlebv8qdyY5wBCg/A9xLdW2atTLDkgp7BvJT5pTRLsXr4iT81paWyP3Zf6zSybclJIXR2Lr0+58YSp7NhUU5kiKDtCCylAy+V6QISwc/NCehpHQuNd4K1rEzqC8/blY6a6z9CkBz5xvLL93+jWaiiVJKnC/BxPMJcjnln/KShB5iblMiIModurlc8azV+Qd2pQM6j+t51VBj1lyu8jEhk98rC7AQTfBLkt8a9LdJbGc5WikGd40gOjx6hCNQ5NP+emIv4GhR/I+H1c55EMye1Or5WVzFW4N0=",
        "ansible_swapfree_mb": 2042,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 1360661,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "discovered_interpreter_python": "/usr/libexec/platform-python",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-14 08:36:36,403 p=355724 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.201"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::b521:5a71:965c:a783"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel/swap",
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_date_time": {
            "date": "2021-06-14",
            "day": "14",
            "epoch": "1623674195",
            "hour": "08",
            "iso8601": "2021-06-14T12:36:35Z",
            "iso8601_basic": "20210614T083635818468",
            "iso8601_basic_short": "20210614T083635",
            "iso8601_micro": "2021-06-14T12:36:35.818468Z",
            "minute": "36",
            "month": "06",
            "second": "35",
            "time": "08:36:35",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Monday",
            "weekday_number": "1",
            "weeknumber": "24",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.201",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:f8:f6:8d",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel-root",
                    "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpsvBGwKeGZC3oVBvJojlIMD4ebJIUCgaz"
                ],
                "dm-1": [
                    "dm-name-rhel-swap",
                    "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpozc6wq2QoQB31bJmdCZwZm8sBNGT9rNl"
                ],
                "sda3": [
                    "lvm-pv-uuid-wn8uAC-AvMD-KDDW-CZE6-HOg3-Z6CL-wQ4vPF"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "d3ea57c1-02ac-46f1-96d7-9c3d38b77db7"
                ],
                "dm-1": [
                    "488a8798-7ff3-4920-a592-27d9f346d6fc"
                ],
                "sda1": [
                    "6785-C5E7"
                ],
                "sda2": [
                    "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-root",
                        "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpsvBGwKeGZC3oVBvJojlIMD4ebJIUCgaz"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "d3ea57c1-02ac-46f1-96d7-9c3d38b77db7"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-swap",
                        "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpozc6wq2QoQB31bJmdCZwZm8sBNGT9rNl"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "488a8798-7ff3-4920-a592-27d9f346d6fc"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "6785-C5E7"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "6785-C5E7"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
                    },
                    "sda3": {
                        "holders": [
                            "rhel-swap",
                            "rhel-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-wn8uAC-AvMD-KDDW-CZE6-HOg3-Z6CL-wQ4vPF"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sdb": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {},
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "10485760",
                "sectorsize": "512",
                "size": "5.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.201",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::b521:5a71:965c:a783",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:f8:f6:8d",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HOME": "/root",
            "LANG": "en_US.UTF-8",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/mail/root",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-rjkywnumemjiwlsabnxmbwrdretbpgkr ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1623674194.8572297-355732-164113701894278/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "ansible1.example.com",
        "ansible_hostname": "ansible1",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "ens192",
            "lo"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:53cc3821382",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel"
                }
            },
            "vgs": {
                "rhel": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "732ca008a570426bb2c7b7a58cdd158f",
        "ansible_memfree_mb": 259,
        "ansible_memory_mb": {
            "nocache": {
                "free": 518,
                "used": 300
            },
            "real": {
                "free": 259,
                "total": 818,
                "used": 559
            },
            "swap": {
                "cached": 1,
                "free": 2038,
                "total": 2047,
                "used": 9
            }
        },
        "ansible_memtotal_mb": 818,
        "ansible_mounts": [
            {
                "block_available": 3807965,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 491299,
                "device": "/dev/mapper/rhel-root",
                "fstype": "xfs",
                "inode_available": 8555978,
                "inode_total": 8603648,
                "inode_used": 47670,
                "mount": "/",
                "options": "rw,seclabel,relatime,attr2,inode64,noquota",
                "size_available": 15597424640,
                "size_total": 17609785344,
                "uuid": "d3ea57c1-02ac-46f1-96d7-9c3d38b77db7"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,seclabel,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "6785-C5E7"
            }
        ],
        "ansible_nodename": "ansible1.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel/root",
                "rhel/swap"
            ],
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 1,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 1,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d 91 64 1a 27 2d 83-11 fd ea d8 b2 f8 f6 8d",
        "ansible_product_uuid": "64914d56-271a-832d-11fd-ead8b2f8f68d",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "config_mode": "enforcing",
            "mode": "enforcing",
            "policyvers": 31,
            "status": "enabled",
            "type": "targeted"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBDAy45Ndd8lJP90E4ZhiOMyN33O1HH77T1xf3RwLCIVgCs3GFvL8vg/n0pVxdNcWmC6q9UOawL+i5izBcXZ3wHg=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAICkGwciWcbrNizntC965NPvp9rBcLwO6DbhR5trS+BmI",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQC8fcASOlyYRoK439WmRTcrzMaz5VdhX3lN9n2RZWwK6ZIxo8zC4nDhZEusSd9quVfOneUE61Q420+uYTejU9KZXjAesuims+Cnm9XEFj3BdY/JElEjkyiJBUNYY/DEV7nOAk7aMOmEa6CwJ7nMS/qPVcAAIVxcI7U+wmzJchKcOF9XmDqSqjYu00W+OLGKit8yfv1qlyP5HOQEDgbgYM81Kf5+TZHmQcuVe5rB4QdJ7vyNUnoRQUYWBLagnqNnAmPeVPR8tTJZtYONmkuBe/FWXJwxof98Pwcr/eMMVQy1tmdz+hpfsRNTV8r+KLfmoQqoNddXiqRNVdi4iB5P56FuKBmj1APflWbZEscDxANU5k4ctpGGSwkwfGtK1Od2qu7UWHf1AdXfbEFKoX5qeM3fTimvMCL7tA5EN5eQYNMX59eXIeU5WThxOeVqy9WzY7foY7xzPZEpZFkB+FiZ4yPpzG3PXijbXzMap/FmaDfL7xNH7frO3UMiVzYrpkl8sds=",
        "ansible_swapfree_mb": 2038,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 1360664,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "discovered_interpreter_python": "/usr/libexec/platform-python",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-14 08:36:36,479 p=355724 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.203"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::4552:40e9:edc2:dfca"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel_ansible3/swap",
            "resume": "/dev/mapper/rhel_ansible3-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel_ansible3-root"
        },
        "ansible_date_time": {
            "date": "2021-06-14",
            "day": "14",
            "epoch": "1623674196",
            "hour": "08",
            "iso8601": "2021-06-14T12:36:36Z",
            "iso8601_basic": "20210614T083636104506",
            "iso8601_basic_short": "20210614T083636",
            "iso8601_micro": "2021-06-14T12:36:36.104506Z",
            "minute": "36",
            "month": "06",
            "second": "36",
            "time": "08:36:36",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Monday",
            "weekday_number": "1",
            "weeknumber": "24",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.203",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:49:26:ef",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel_ansible3-root",
                    "dm-uuid-LVM-N8txXna9aNDmBo71nYLC3rCpHmDqplpZVS6cZ9Z13pKLvt0jv4jBu7jyus75vW3u"
                ],
                "dm-1": [
                    "dm-name-rhel_ansible3-swap",
                    "dm-uuid-LVM-N8txXna9aNDmBo71nYLC3rCpHmDqplpZ16IBeZSV8f525wnRkDdcWvw9WqoQYIwD"
                ],
                "sda3": [
                    "lvm-pv-uuid-ukZEA6-cSIb-T6hj-ViKr-ca2x-SZgV-3x5WxK"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "38c5f745-9650-48a1-8b41-178229308dc8"
                ],
                "dm-1": [
                    "d2b04ad5-a1e8-4885-8d24-7c4c5793feda"
                ],
                "sda1": [
                    "BF11-3BEC"
                ],
                "sda2": [
                    "8517d363-11b5-4d14-b1e6-d9c0828d1491"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel_ansible3-root",
                        "dm-uuid-LVM-N8txXna9aNDmBo71nYLC3rCpHmDqplpZVS6cZ9Z13pKLvt0jv4jBu7jyus75vW3u"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "38c5f745-9650-48a1-8b41-178229308dc8"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel_ansible3-swap",
                        "dm-uuid-LVM-N8txXna9aNDmBo71nYLC3rCpHmDqplpZ16IBeZSV8f525wnRkDdcWvw9WqoQYIwD"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "d2b04ad5-a1e8-4885-8d24-7c4c5793feda"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "BF11-3BEC"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "BF11-3BEC"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "8517d363-11b5-4d14-b1e6-d9c0828d1491"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "8517d363-11b5-4d14-b1e6-d9c0828d1491"
                    },
                    "sda3": {
                        "holders": [
                            "rhel_ansible3-swap",
                            "rhel_ansible3-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-ukZEA6-cSIb-T6hj-ViKr-ca2x-SZgV-3x5WxK"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sdb": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {},
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "10485760",
                "sectorsize": "512",
                "size": "5.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.203",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::4552:40e9:edc2:dfca",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:49:26:ef",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HOME": "/root",
            "LANG": "en_US.UTF-8",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/mail/root",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-suukkwoyrufigqnmxfrpjjvtgnglofhu ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1623674194.9078271-355735-247589612503277/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "ansible3.example.com",
        "ansible_hostname": "ansible3",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "ens192",
            "lo"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:14907c16f2a8",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel_ansible3"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel_ansible3"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel_ansible3"
                }
            },
            "vgs": {
                "rhel_ansible3": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "3c43dc156f7c4ccbbc12497981e94caa",
        "ansible_memfree_mb": 142,
        "ansible_memory_mb": {
            "nocache": {
                "free": 525,
                "used": 293
            },
            "real": {
                "free": 142,
                "total": 818,
                "used": 676
            },
            "swap": {
                "cached": 1,
                "free": 2041,
                "total": 2047,
                "used": 6
            }
        },
        "ansible_memtotal_mb": 818,
        "ansible_mounts": [
            {
                "block_available": 3780205,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 519059,
                "device": "/dev/mapper/rhel_ansible3-root",
                "fstype": "xfs",
                "inode_available": 8555938,
                "inode_total": 8603648,
                "inode_used": 47710,
                "mount": "/",
                "options": "rw,seclabel,relatime,attr2,inode64,noquota",
                "size_available": 15483719680,
                "size_total": 17609785344,
                "uuid": "38c5f745-9650-48a1-8b41-178229308dc8"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,seclabel,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "8517d363-11b5-4d14-b1e6-d9c0828d1491"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "BF11-3BEC"
            }
        ],
        "ansible_nodename": "ansible3.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel_ansible3/root",
                "rhel_ansible3/swap"
            ],
            "resume": "/dev/mapper/rhel_ansible3-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel_ansible3-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 1,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 1,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d 9c 16 3f f4 00 fd-1f f4 4f 35 04 49 26 ef",
        "ansible_product_uuid": "169c4d56-f43f-fd00-1ff4-4f35044926ef",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "config_mode": "enforcing",
            "mode": "enforcing",
            "policyvers": 31,
            "status": "enabled",
            "type": "targeted"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPP/jkdNeSjCx2Lqy4OwWmUQ7fR7tRXwWG5BxVi/hQcJ7Gc1du1Zba6X7sPLrS7wNtkb4/aDzyC8EUE4C1yolFk=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIF4fL4K0UN8QnLqv7vPUg02OEdUmYqa7fwqZv8PMwiQJ",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQDLbpkEwco/aqNxpfyCgjcteNyDdtf1cTfa3wAzDcrrVoAXSbAUf51k8JHY5UlX0HYszanZzm9ALCedPYzNvNRa/LdkwS7VpBcZBHR9FixNW+raaO3NFZtdujcvXX25e/kU4/q/VicnXjoIfXRvjuqXQnaYItUZVK50+7J0jptiGYCtn4XRHRpzs6eHE54AHiHVtXqc98wCC+FOT2xKP45i5W5+mxF54orF2LrRnAv0MO5kI0smhoPFoQJIGImbD99ausPvIpChLPGj+VJ3sXM2viDx6CrBPyswWgy7EV/97PqkBuW/ktj9FFPVHefgs0OW64YX2NHfb0KL07YVkIyVUNU+gHNksVuRS6Id+4c9/mrnyQdsAI7ou21/tl/kcs2Q4OzoCGiXM/k5s25RSpnUp3h2MghKwLahuQ12B5HcXcJkgHbsM95RmBDXKLh3t7KJJvQ13cGuU1e1vDol2TmwL6WOtlIbo9fJad0UFexNZXIBIOp136xi9YL1AZ4u7/k=",
        "ansible_swapfree_mb": 2041,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 1360660,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "discovered_interpreter_python": "/usr/libexec/platform-python",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-14 08:36:37,704 p=355724 u=ansible n=ansible | control.example.com | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.200"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::d0eb:2348:63a1:cb77"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel/swap",
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_date_time": {
            "date": "2021-06-14",
            "day": "14",
            "epoch": "1623674196",
            "hour": "08",
            "iso8601": "2021-06-14T12:36:36Z",
            "iso8601_basic": "20210614T083636398689",
            "iso8601_basic_short": "20210614T083636",
            "iso8601_micro": "2021-06-14T12:36:36.398689Z",
            "minute": "36",
            "month": "06",
            "second": "36",
            "time": "08:36:36",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Monday",
            "weekday_number": "1",
            "weeknumber": "24",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.200",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:72:63:77",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel-root",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                ],
                "dm-1": [
                    "dm-name-rhel-swap",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                ],
                "sda3": [
                    "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "e582775b-f787-42fb-a7da-e66ffb7a210a"
                ],
                "dm-1": [
                    "521d3469-ac8d-490e-9c79-a6fd59024de4"
                ],
                "sda1": [
                    "6723-A89C"
                ],
                "sda2": [
                    "1e4b2b4a-ea26-430e-978c-de3884071e82"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-root",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "e582775b-f787-42fb-a7da-e66ffb7a210a"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-swap",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "521d3469-ac8d-490e-9c79-a6fd59024de4"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "6723-A89C"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "6723-A89C"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "1e4b2b4a-ea26-430e-978c-de3884071e82"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
                    },
                    "sda3": {
                        "holders": [
                            "rhel-swap",
                            "rhel-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "on",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.200",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::d0eb:2348:63a1:cb77",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:72:63:77",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HOME": "/root",
            "LANG": "en_US.UTF-8",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/mail/root",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-wqqqsqnrehvngfflbxrqfukrleatasmx ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1623674194.8263524-355730-29568002769717/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "control.example.com",
        "ansible_hostname": "control",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "ens192",
            "lo"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:9a8e963cc88",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel"
                }
            },
            "vgs": {
                "rhel": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "36e2124a40614e3796fa06fcece0515e",
        "ansible_memfree_mb": 982,
        "ansible_memory_mb": {
            "nocache": {
                "free": 1424,
                "used": 402
            },
            "real": {
                "free": 982,
                "total": 1826,
                "used": 844
            },
            "swap": {
                "cached": 0,
                "free": 2047,
                "total": 2047,
                "used": 0
            }
        },
        "ansible_memtotal_mb": 1826,
        "ansible_mounts": [
            {
                "block_available": 3739460,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 559804,
                "device": "/dev/mapper/rhel-root",
                "fstype": "xfs",
                "inode_available": 8542910,
                "inode_total": 8603648,
                "inode_used": 60738,
                "mount": "/",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 15316828160,
                "size_total": 17609785344,
                "uuid": "e582775b-f787-42fb-a7da-e66ffb7a210a"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "6723-A89C"
            },
            {
                "block_available": 0,
                "block_size": 2048,
                "block_total": 4119280,
                "block_used": 4119280,
                "device": "/dev/sr0",
                "fstype": "iso9660",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/var/ftp/repo",
                "options": "ro,relatime,nojoliet,check=s,map=n,blocksize=2048",
                "size_available": 0,
                "size_total": 8436285440,
                "uuid": "2020-04-04-08-21-15-00"
            }
        ],
        "ansible_nodename": "control.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel/root",
                "rhel/swap"
            ],
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz",
            "1",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 2,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 2,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d 94 78 3e 53 21 2f-3c a5 64 70 c9 72 63 77",
        "ansible_product_uuid": "78944d56-533e-2f21-3ca5-6470c9726377",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "status": "disabled"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNhudUrTlfCgvAC31V1YPiPwqZKT7aFesPRbEGXj9B4esh+OI7dNbiUJPoteI+AqIZRzShz0BsfOtvfZux0v/dY=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIFC1LRLHGmTZfUEs+knXPYfQFkHnOTUCDib6l7DGR1F6",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQDTuLOzAeNf8ZQj8Qu64SLTprDRnagiihI/gUAzQX5NR8mkfVecF3591Hw0bY7d4OYL2GSa22Q97lWpSRMZzEe5kd0cIFTTg/coqMIK/VOKJvQarjnjj7rnrLnG8WJprf6kxITc7AuIWXTeD/vqgs/lBcdbD77PBXAShSj1dFD6qej4G7zOpo4OeQ0EWjbDQaRCqBWcTbaGEs2TpvIacfKSlWQ/tIvmcJQ2sVHqiGJ/AkRLMn4AHoKi5t7RKWT7HHhnc7ZDu686KGiplcSsiF/T37b6WneuS96tLNTUYbpT4Ot2zrYFYbo0YwRuzM1Jwpa/f3x0hoY7Lak/o3j6lDv5y9AhwhytPAKz8da2FLi2sna2Ve7913M9GMSiP41fRHnoLsqMy89IHDLm8vkJUjZxzRo7e4i4K5mXK/My7V5nGc3J8bJrmXCEzDDJfS42MuCmINcuz2MCjuvduwCrXroDHqrHMe306r1F9TQTeWlIJNSBwAuuC+FN8zVhlkJRiqc=",
        "ansible_swapfree_mb": 2047,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 760195,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "discovered_interpreter_python": "/usr/libexec/platform-python",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-14 08:40:02,176 p=357432 u=ansible n=ansible | playbook: task5.yml
2021-06-14 08:40:02,176 p=357432 u=ansible n=ansible |   play #1 (test,servers): build /etc/hosts from Ansible inventory	TAGS: []
2021-06-14 08:40:02,177 p=357432 u=ansible n=ansible |       TASK TAGS: []

2021-06-14 08:40:06,287 p=357466 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:40:06,295 p=357466 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:40:08,189 p=357466 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:40:08,193 p=357466 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:40:08,235 p=357466 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:40:08,242 p=357466 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:40:08,250 p=357466 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:40:08,466 p=357466 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ansible_all_ipv4_addresses'"}
2021-06-14 08:40:08,493 p=357466 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ansible_all_ipv4_addresses'"}
2021-06-14 08:40:08,495 p=357466 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ansible_all_ipv4_addresses'"}
2021-06-14 08:40:08,499 p=357466 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ansible_all_ipv4_addresses'"}
2021-06-14 08:40:08,500 p=357466 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:40:08,500 p=357466 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:40:08,500 p=357466 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:40:08,500 p=357466 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:40:08,500 p=357466 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:40:56,371 p=357895 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:40:56,379 p=357895 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:40:57,812 p=357895 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:40:57,900 p=357895 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:40:57,906 p=357895 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:40:57,909 p=357895 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:40:57,917 p=357895 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:40:58,111 p=357895 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'default_ipv4'"}
2021-06-14 08:40:58,137 p=357895 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'default_ipv4'"}
2021-06-14 08:40:58,139 p=357895 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'default_ipv4'"}
2021-06-14 08:40:58,142 p=357895 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'default_ipv4'"}
2021-06-14 08:40:58,145 p=357895 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:40:58,145 p=357895 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:40:58,146 p=357895 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:40:58,146 p=357895 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:40:58,146 p=357895 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:41:40,121 p=358269 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:41:40,129 p=358269 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:41:41,559 p=358269 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:41:41,573 p=358269 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:41:41,599 p=358269 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:41:41,601 p=358269 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:41:41,609 p=358269 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:41:41,802 p=358269 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'fqdn'"}
2021-06-14 08:41:41,810 p=358269 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'fqdn'"}
2021-06-14 08:41:41,812 p=358269 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'fqdn'"}
2021-06-14 08:41:41,814 p=358269 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'fqdn'"}
2021-06-14 08:41:41,815 p=358269 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:41:41,816 p=358269 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:41:41,816 p=358269 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:41:41,816 p=358269 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:41:41,816 p=358269 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:43:47,135 p=359224 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:43:47,144 p=359224 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:43:48,955 p=359224 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:43:48,972 p=359224 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:43:48,974 p=359224 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:43:48,977 p=359224 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:43:48,984 p=359224 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:43:49,176 p=359224 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_ens192'"}
2021-06-14 08:43:49,178 p=359224 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_ens192'"}
2021-06-14 08:43:49,180 p=359224 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_ens192'"}
2021-06-14 08:43:49,194 p=359224 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_ens192'"}
2021-06-14 08:43:49,195 p=359224 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:43:49,195 p=359224 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:43:49,195 p=359224 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:43:49,195 p=359224 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:43:49,195 p=359224 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:44:27,337 p=359584 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:44:27,344 p=359584 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:44:28,770 p=359584 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:44:28,802 p=359584 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:44:28,805 p=359584 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:44:28,807 p=359584 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:44:28,815 p=359584 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:44:29,011 p=359584 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ansible_all_ipv4_addresses'"}
2021-06-14 08:44:29,017 p=359584 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ansible_all_ipv4_addresses'"}
2021-06-14 08:44:29,019 p=359584 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ansible_all_ipv4_addresses'"}
2021-06-14 08:44:29,032 p=359584 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ansible_all_ipv4_addresses'"}
2021-06-14 08:44:29,034 p=359584 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:44:29,034 p=359584 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:44:29,034 p=359584 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:44:29,034 p=359584 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:44:29,034 p=359584 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:45:55,765 p=360307 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:45:55,773 p=360307 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:45:57,590 p=360307 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:45:57,594 p=360307 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:45:57,596 p=360307 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:45:57,598 p=360307 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:45:57,606 p=360307 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:45:57,773 p=360307 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'db_servers'"}
2021-06-14 08:45:57,808 p=360307 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'db_servers'"}
2021-06-14 08:45:57,811 p=360307 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'db_servers'"}
2021-06-14 08:45:57,836 p=360307 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'db_servers'"}
2021-06-14 08:45:57,837 p=360307 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:45:57,837 p=360307 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:45:57,837 p=360307 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:45:57,838 p=360307 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:45:57,838 p=360307 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:46:13,395 p=360519 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:46:13,403 p=360519 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:46:14,839 p=360519 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:46:14,910 p=360519 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:46:14,913 p=360519 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:46:14,915 p=360519 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:46:14,922 p=360519 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:46:15,137 p=360519 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ipv4'"}
2021-06-14 08:46:15,139 p=360519 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ipv4'"}
2021-06-14 08:46:15,139 p=360519 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ipv4'"}
2021-06-14 08:46:15,146 p=360519 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ipv4'"}
2021-06-14 08:46:15,147 p=360519 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:46:15,147 p=360519 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:46:15,147 p=360519 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:46:15,147 p=360519 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:46:15,147 p=360519 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:46:31,415 p=360711 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:46:31,423 p=360711 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:46:32,821 p=360711 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:46:32,823 p=360711 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:46:32,851 p=360711 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:46:32,861 p=360711 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:46:32,869 p=360711 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:46:33,061 p=360711 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:46:33,070 p=360711 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:46:33,070 p=360711 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:46:33,076 p=360711 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:46:33,077 p=360711 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:46:33,077 p=360711 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:46:33,077 p=360711 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:46:33,077 p=360711 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:46:33,077 p=360711 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:47:12,878 p=361071 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:47:12,886 p=361071 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:47:14,354 p=361071 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:47:14,416 p=361071 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:47:14,446 p=361071 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:47:14,453 p=361071 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:47:14,470 p=361071 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:47:14,733 p=361071 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'which_interface' is undefined"}
2021-06-14 08:47:14,734 p=361071 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'which_interface' is undefined"}
2021-06-14 08:47:14,737 p=361071 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'which_interface' is undefined"}
2021-06-14 08:47:14,743 p=361071 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'which_interface' is undefined"}
2021-06-14 08:47:14,745 p=361071 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:47:14,745 p=361071 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:47:14,745 p=361071 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:47:14,745 p=361071 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:47:14,746 p=361071 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:48:27,637 p=361662 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:48:27,645 p=361662 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:48:29,338 p=361662 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:48:29,375 p=361662 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:48:29,386 p=361662 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:48:29,432 p=361662 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:48:29,440 p=361662 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:48:29,657 p=361662 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:48:29,663 p=361662 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:48:29,663 p=361662 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:48:29,680 p=361662 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:48:29,681 p=361662 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:48:29,681 p=361662 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:48:29,682 p=361662 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:48:29,682 p=361662 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:48:29,682 p=361662 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:50:11,277 p=362477 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:50:11,285 p=362477 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:50:13,065 p=362477 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:50:13,092 p=362477 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:50:13,103 p=362477 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:50:13,107 p=362477 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:50:13,116 p=362477 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:50:13,329 p=362477 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:50:13,332 p=362477 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:50:13,332 p=362477 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:50:13,346 p=362477 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible.vars.hostvars.HostVarsVars object' has no attribute 'ansible_default_ipv4'"}
2021-06-14 08:50:13,347 p=362477 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:50:13,347 p=362477 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:50:13,347 p=362477 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:50:13,347 p=362477 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:50:13,347 p=362477 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 08:52:54,328 p=363699 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  did not find expected key

The error appears to be in '/home/ansible/task5.yml': line 6, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  tasks: []
    - name: build hosts from facts
    ^ here

2021-06-14 08:53:10,236 p=363818 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:53:10,244 p=363818 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:53:12,279 p=363818 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:53:12,282 p=363818 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:53:12,287 p=363818 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:53:12,291 p=363818 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:53:12,629 p=363818 u=ansible n=ansible | ok: [control.example.com]
2021-06-14 08:53:12,638 p=363818 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:53:13,462 p=363818 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-14 08:53:13,468 p=363818 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-14 08:53:13,473 p=363818 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 08:53:13,477 p=363818 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 08:53:13,696 p=363818 u=ansible n=ansible | changed: [control.example.com]
2021-06-14 08:53:13,698 p=363818 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:53:13,699 p=363818 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:53:13,699 p=363818 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:53:13,699 p=363818 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:53:13,699 p=363818 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:53:13,699 p=363818 u=ansible n=ansible | control.example.com        : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:55:11,894 p=365087 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:55:11,902 p=365087 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:55:13,840 p=365087 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:55:13,844 p=365087 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:55:13,847 p=365087 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:55:13,851 p=365087 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:55:14,168 p=365087 u=ansible n=ansible | ok: [control.example.com]
2021-06-14 08:55:14,177 p=365087 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:55:15,102 p=365087 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-14 08:55:15,107 p=365087 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 08:55:15,109 p=365087 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-14 08:55:15,125 p=365087 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 08:55:15,355 p=365087 u=ansible n=ansible | changed: [control.example.com]
2021-06-14 08:55:15,356 p=365087 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:55:15,357 p=365087 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:55:15,357 p=365087 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:55:15,357 p=365087 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:55:15,357 p=365087 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:55:15,357 p=365087 u=ansible n=ansible | control.example.com        : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:55:52,441 p=365780 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:55:52,449 p=365780 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:55:53,977 p=365780 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:55:53,984 p=365780 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:55:53,986 p=365780 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:55:54,011 p=365780 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:55:54,380 p=365780 u=ansible n=ansible | ok: [control.example.com]
2021-06-14 08:55:54,389 p=365780 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:55:55,345 p=365780 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-14 08:55:55,349 p=365780 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 08:55:55,353 p=365780 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-14 08:55:55,379 p=365780 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 08:55:55,533 p=365780 u=ansible n=ansible | changed: [control.example.com]
2021-06-14 08:55:55,535 p=365780 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:55:55,535 p=365780 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:55:55,535 p=365780 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:55:55,535 p=365780 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:55:55,535 p=365780 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:55:55,535 p=365780 u=ansible n=ansible | control.example.com        : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:57:10,604 p=366715 u=ansible n=ansible | ansible1.example.com | CHANGED | rc=0 >>
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

192.168.11.200	control.example.com control
192.168.11.201	ansible1.example.com ansible1
192.168.11.202	ansible2.example.com ansible2
192.168.11.203	ansible3.example.com ansible3
192.168.11.204	ansible4.example.com ansible4

2021-06-14 08:57:10,634 p=366715 u=ansible n=ansible | ansible4.example.com | CHANGED | rc=0 >>
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

192.168.11.200	control.example.com control
192.168.11.201	ansible1.example.com ansible1
192.168.11.202	ansible2.example.com ansible2
192.168.11.203	ansible3.example.com ansible3
192.168.11.204	ansible4.example.com ansible4

2021-06-14 08:57:10,639 p=366715 u=ansible n=ansible | ansible2.example.com | CHANGED | rc=0 >>
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

192.168.11.200	control.example.com control
192.168.11.201	ansible1.example.com ansible1
192.168.11.202	ansible2.example.com ansible2
192.168.11.203	ansible3.example.com ansible3
192.168.11.204	ansible4.example.com ansible4

2021-06-14 08:57:10,832 p=366715 u=ansible n=ansible | ansible3.example.com | CHANGED | rc=0 >>
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

192.168.11.200	control.example.com control
192.168.11.201	ansible1.example.com ansible1
192.168.11.202	ansible2.example.com ansible2
192.168.11.203	ansible3.example.com ansible3
192.168.11.204	ansible4.example.com ansible4

2021-06-14 08:57:10,877 p=366715 u=ansible n=ansible | control.example.com | CHANGED | rc=0 >>
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

192.168.11.200	control.example.com control
192.168.11.201	ansible1.example.com ansible1
192.168.11.202	ansible2.example.com ansible2
192.168.11.203	ansible3.example.com ansible3
192.168.11.204	ansible4.example.com ansible4

2021-06-14 08:57:21,578 p=367026 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:57:21,585 p=367026 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:57:23,081 p=367026 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:57:23,092 p=367026 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:57:23,139 p=367026 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:57:23,166 p=367026 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:57:23,575 p=367026 u=ansible n=ansible | ok: [control.example.com]
2021-06-14 08:57:23,583 p=367026 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:57:24,566 p=367026 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 08:57:24,568 p=367026 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-14 08:57:24,572 p=367026 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-14 08:57:24,604 p=367026 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 08:57:24,854 p=367026 u=ansible n=ansible | changed: [control.example.com]
2021-06-14 08:57:24,856 p=367026 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:57:24,856 p=367026 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:57:24,856 p=367026 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:57:24,856 p=367026 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:57:24,856 p=367026 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:57:24,856 p=367026 u=ansible n=ansible | control.example.com        : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:57:32,516 p=367490 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:57:32,528 p=367490 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:57:34,239 p=367490 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:57:34,246 p=367490 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:57:34,256 p=367490 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:57:34,278 p=367490 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:57:34,640 p=367490 u=ansible n=ansible | ok: [control.example.com]
2021-06-14 08:57:34,649 p=367490 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:57:36,404 p=367490 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-14 08:57:36,414 p=367490 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 08:57:36,443 p=367490 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-14 08:57:36,448 p=367490 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 08:57:36,737 p=367490 u=ansible n=ansible | changed: [control.example.com]
2021-06-14 08:57:36,739 p=367490 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:57:36,739 p=367490 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:57:36,739 p=367490 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:57:36,739 p=367490 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:57:36,740 p=367490 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:57:36,740 p=367490 u=ansible n=ansible | control.example.com        : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:57:40,000 p=368057 u=ansible n=ansible | ansible1.example.com | CHANGED | rc=0 >>
   192.168.11.200 control.example.com control
   192.168.11.201 ansible1.example.com ansible1
   192.168.11.202 ansible2.example.com ansible2
   192.168.11.203 ansible3.example.com ansible3
   192.168.11.204 ansible4.example.com ansible4

2021-06-14 08:57:40,031 p=368057 u=ansible n=ansible | ansible2.example.com | CHANGED | rc=0 >>
   192.168.11.200 control.example.com control
   192.168.11.201 ansible1.example.com ansible1
   192.168.11.202 ansible2.example.com ansible2
   192.168.11.203 ansible3.example.com ansible3
   192.168.11.204 ansible4.example.com ansible4

2021-06-14 08:57:40,038 p=368057 u=ansible n=ansible | ansible4.example.com | CHANGED | rc=0 >>
   192.168.11.200 control.example.com control
   192.168.11.201 ansible1.example.com ansible1
   192.168.11.202 ansible2.example.com ansible2
   192.168.11.203 ansible3.example.com ansible3
   192.168.11.204 ansible4.example.com ansible4

2021-06-14 08:57:40,048 p=368057 u=ansible n=ansible | ansible3.example.com | CHANGED | rc=0 >>
   192.168.11.200 control.example.com control
   192.168.11.201 ansible1.example.com ansible1
   192.168.11.202 ansible2.example.com ansible2
   192.168.11.203 ansible3.example.com ansible3
   192.168.11.204 ansible4.example.com ansible4

2021-06-14 08:57:40,248 p=368057 u=ansible n=ansible | control.example.com | CHANGED | rc=0 >>
   192.168.11.200 control.example.com control
   192.168.11.201 ansible1.example.com ansible1
   192.168.11.202 ansible2.example.com ansible2
   192.168.11.203 ansible3.example.com ansible3
   192.168.11.204 ansible4.example.com ansible4

2021-06-14 08:59:22,269 p=368983 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:59:22,277 p=368983 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:59:24,127 p=368983 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:59:24,220 p=368983 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:59:24,225 p=368983 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:59:24,232 p=368983 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:59:24,623 p=368983 u=ansible n=ansible | ok: [control.example.com]
2021-06-14 08:59:24,632 p=368983 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:59:25,699 p=368983 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 08:59:25,716 p=368983 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-14 08:59:25,718 p=368983 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 08:59:25,728 p=368983 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-14 08:59:25,915 p=368983 u=ansible n=ansible | changed: [control.example.com]
2021-06-14 08:59:25,917 p=368983 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:59:25,917 p=368983 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:59:25,917 p=368983 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:59:25,917 p=368983 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:59:25,917 p=368983 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:59:25,917 p=368983 u=ansible n=ansible | control.example.com        : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:59:31,236 p=369458 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 08:59:31,244 p=369458 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 08:59:32,739 p=369458 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 08:59:32,860 p=369458 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 08:59:32,886 p=369458 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 08:59:32,924 p=369458 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 08:59:33,258 p=369458 u=ansible n=ansible | ok: [control.example.com]
2021-06-14 08:59:33,266 p=369458 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 08:59:35,005 p=369458 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-14 08:59:35,032 p=369458 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 08:59:35,039 p=369458 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-14 08:59:35,058 p=369458 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 08:59:35,426 p=369458 u=ansible n=ansible | changed: [control.example.com]
2021-06-14 08:59:35,431 p=369458 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 08:59:35,431 p=369458 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:59:35,431 p=369458 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:59:35,431 p=369458 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:59:35,431 p=369458 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:59:35,431 p=369458 u=ansible n=ansible | control.example.com        : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 08:59:39,294 p=370025 u=ansible n=ansible | ansible4.example.com | CHANGED | rc=0 >>
127.0.0.1 localhost localhost.localdomain
   192.168.11.200 control.example.com control
   192.168.11.201 ansible1.example.com ansible1
   192.168.11.202 ansible2.example.com ansible2
   192.168.11.203 ansible3.example.com ansible3
   192.168.11.204 ansible4.example.com ansible4

2021-06-14 08:59:39,297 p=370025 u=ansible n=ansible | ansible2.example.com | CHANGED | rc=0 >>
127.0.0.1 localhost localhost.localdomain
   192.168.11.200 control.example.com control
   192.168.11.201 ansible1.example.com ansible1
   192.168.11.202 ansible2.example.com ansible2
   192.168.11.203 ansible3.example.com ansible3
   192.168.11.204 ansible4.example.com ansible4

2021-06-14 08:59:39,303 p=370025 u=ansible n=ansible | ansible3.example.com | CHANGED | rc=0 >>
127.0.0.1 localhost localhost.localdomain
   192.168.11.200 control.example.com control
   192.168.11.201 ansible1.example.com ansible1
   192.168.11.202 ansible2.example.com ansible2
   192.168.11.203 ansible3.example.com ansible3
   192.168.11.204 ansible4.example.com ansible4

2021-06-14 08:59:39,313 p=370025 u=ansible n=ansible | ansible1.example.com | CHANGED | rc=0 >>
127.0.0.1 localhost localhost.localdomain
   192.168.11.200 control.example.com control
   192.168.11.201 ansible1.example.com ansible1
   192.168.11.202 ansible2.example.com ansible2
   192.168.11.203 ansible3.example.com ansible3
   192.168.11.204 ansible4.example.com ansible4

2021-06-14 08:59:39,540 p=370025 u=ansible n=ansible | control.example.com | CHANGED | rc=0 >>
127.0.0.1 localhost localhost.localdomain
   192.168.11.200 control.example.com control
   192.168.11.201 ansible1.example.com ansible1
   192.168.11.202 ansible2.example.com ansible2
   192.168.11.203 ansible3.example.com ansible3
   192.168.11.204 ansible4.example.com ansible4

2021-06-14 09:00:04,394 p=370410 u=ansible n=ansible | PLAY [build /etc/hosts from Ansible inventory] ******************************************************************
2021-06-14 09:00:04,403 p=370410 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 09:00:05,902 p=370410 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 09:00:05,919 p=370410 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-14 09:00:05,930 p=370410 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 09:00:05,989 p=370410 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 09:00:06,367 p=370410 u=ansible n=ansible | ok: [control.example.com]
2021-06-14 09:00:06,375 p=370410 u=ansible n=ansible | TASK [build hosts from facts] ***********************************************************************************
2021-06-14 09:00:08,098 p=370410 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-14 09:00:08,106 p=370410 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 09:00:08,108 p=370410 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 09:00:08,112 p=370410 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-14 09:00:08,389 p=370410 u=ansible n=ansible | changed: [control.example.com]
2021-06-14 09:00:08,392 p=370410 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 09:00:08,392 p=370410 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 09:00:08,392 p=370410 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 09:00:08,393 p=370410 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 09:00:08,393 p=370410 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 09:00:08,393 p=370410 u=ansible n=ansible | control.example.com        : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 09:00:11,623 p=370970 u=ansible n=ansible | ansible1.example.com | CHANGED | rc=0 >>
127.0.0.1 localhost localhost.localdomain
192.168.11.200 control.example.com control
192.168.11.201 ansible1.example.com ansible1
192.168.11.202 ansible2.example.com ansible2
192.168.11.203 ansible3.example.com ansible3
192.168.11.204 ansible4.example.com ansible4

2021-06-14 09:00:11,633 p=370970 u=ansible n=ansible | ansible3.example.com | CHANGED | rc=0 >>
127.0.0.1 localhost localhost.localdomain
192.168.11.200 control.example.com control
192.168.11.201 ansible1.example.com ansible1
192.168.11.202 ansible2.example.com ansible2
192.168.11.203 ansible3.example.com ansible3
192.168.11.204 ansible4.example.com ansible4

2021-06-14 09:00:11,633 p=370970 u=ansible n=ansible | ansible2.example.com | CHANGED | rc=0 >>
127.0.0.1 localhost localhost.localdomain
192.168.11.200 control.example.com control
192.168.11.201 ansible1.example.com ansible1
192.168.11.202 ansible2.example.com ansible2
192.168.11.203 ansible3.example.com ansible3
192.168.11.204 ansible4.example.com ansible4

2021-06-14 09:00:11,647 p=370970 u=ansible n=ansible | ansible4.example.com | CHANGED | rc=0 >>
127.0.0.1 localhost localhost.localdomain
192.168.11.200 control.example.com control
192.168.11.201 ansible1.example.com ansible1
192.168.11.202 ansible2.example.com ansible2
192.168.11.203 ansible3.example.com ansible3
192.168.11.204 ansible4.example.com ansible4

2021-06-14 09:00:11,889 p=370970 u=ansible n=ansible | control.example.com | CHANGED | rc=0 >>
127.0.0.1 localhost localhost.localdomain
192.168.11.200 control.example.com control
192.168.11.201 ansible1.example.com ansible1
192.168.11.202 ansible2.example.com ansible2
192.168.11.203 ansible3.example.com ansible3
192.168.11.204 ansible4.example.com ansible4

2021-06-14 13:39:12,352 p=421463 u=ansible n=ansible | - Role task6 was created successfully
2021-06-14 14:23:42,884 p=440201 u=ansible n=ansible | ERROR! 'role' is not a valid attribute for a Play

The error appears to be in '/home/ansible/task6.yml': line 9, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

        state: enforcing
- role: task6
  ^ here

2021-06-14 14:24:38,049 p=440593 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  did not find expected '-' indicator

The error appears to be in '/home/ansible/task6.yml': line 11, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    - task6
    ssh_port: 2022
    ^ here

2021-06-14 14:24:45,101 p=440649 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  mapping values are not allowed in this context

The error appears to be in '/home/ansible/task6.yml': line 11, column 15, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    - task6
      ssh_port: 2022
              ^ here

2021-06-14 14:25:03,690 p=440782 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  mapping values are not allowed in this context

The error appears to be in '/home/ansible/task6.yml': line 11, column 15, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    - task6
      ssh_port: "2022"
              ^ here

2021-06-14 14:25:22,691 p=440922 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  mapping values are not allowed in this context

The error appears to be in '/home/ansible/task6.yml': line 10, column 13, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  role: task6
    ssh_port: "2022"
            ^ here

2021-06-14 14:26:05,580 p=441233 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  mapping values are not allowed in this context

The error appears to be in '/home/ansible/task6.yml': line 11, column 17, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    - task6
        ssh_port: "2022"
                ^ here

2021-06-14 14:26:35,650 p=441443 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  mapping values are not allowed in this context

The error appears to be in '/home/ansible/task6.yml': line 11, column 11, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    - task6
      vars:
          ^ here

2021-06-14 14:27:02,243 p=441639 u=ansible n=ansible | PLAY [task6] ****************************************************************************************************
2021-06-14 14:27:02,252 p=441639 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 14:27:04,003 p=441639 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 14:27:04,021 p=441639 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 14:27:04,024 p=441639 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 14:27:04,031 p=441639 u=ansible n=ansible | TASK [ensure selinux is enforcing] ******************************************************************************
2021-06-14 14:27:04,808 p=441639 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 14:27:04,844 p=441639 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 14:27:04,850 p=441639 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 14:27:04,851 p=441639 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 14:27:04,852 p=441639 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 14:27:04,852 p=441639 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 14:27:04,852 p=441639 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 14:29:05,384 p=442584 u=ansible n=ansible | PLAY [task6] ****************************************************************************************************
2021-06-14 14:29:05,392 p=442584 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 14:29:06,878 p=442584 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 14:29:06,956 p=442584 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 14:29:06,959 p=442584 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 14:29:06,965 p=442584 u=ansible n=ansible | TASK [ensure selinux is enforcing] ******************************************************************************
2021-06-14 14:29:07,660 p=442584 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 14:29:07,740 p=442584 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 14:29:07,745 p=442584 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 14:29:07,747 p=442584 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 14:29:07,747 p=442584 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 14:29:07,748 p=442584 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 14:29:07,748 p=442584 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 14:29:54,295 p=442998 u=ansible n=ansible | PLAY [task6] ****************************************************************************************************
2021-06-14 14:29:54,303 p=442998 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 14:29:55,620 p=442998 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 14:29:55,629 p=442998 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 14:29:55,645 p=442998 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 14:29:55,657 p=442998 u=ansible n=ansible | TASK [ensure selinux is enforcing] ******************************************************************************
2021-06-14 14:29:56,568 p=442998 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 14:29:56,592 p=442998 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 14:29:56,600 p=442998 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 14:29:56,602 p=442998 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 14:29:56,602 p=442998 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 14:29:56,603 p=442998 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 14:29:56,603 p=442998 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 14:30:26,398 p=443285 u=ansible n=ansible | ansible3.example.com | CHANGED | rc=0 >>
#	$OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

# If you want to change the port on a SELinux system, you have to tell
# SELinux about this change.
# semanage port -a -t ssh_port_t -p tcp #PORTNUMBER
#
#Port 22
#AddressFamily any
#ListenAddress 0.0.0.0
#ListenAddress ::

HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key

# Ciphers and keying
#RekeyLimit default none

# System-wide Crypto policy:
# This system is following system-wide crypto policy. The changes to
# Ciphers, MACs, KexAlgoritms and GSSAPIKexAlgorithsm will not have any
# effect here. They will be overridden by command-line options passed on
# the server start up.
# To opt out, uncomment a line with redefinition of  CRYPTO_POLICY=
# variable in  /etc/sysconfig/sshd  to overwrite the policy.
# For more information, see manual page for update-crypto-policies(8).

# Logging
#SyslogFacility AUTH
SyslogFacility AUTHPRIV
#LogLevel INFO

# Authentication:

#LoginGraceTime 2m
PermitRootLogin yes
#StrictModes yes
#MaxAuthTries 6
#MaxSessions 10

#PubkeyAuthentication yes

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
AuthorizedKeysFile	.ssh/authorized_keys

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
#PasswordAuthentication yes
#PermitEmptyPasswords no
PasswordAuthentication yes

# Change to no to disable s/key passwords
#ChallengeResponseAuthentication yes
ChallengeResponseAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no
#KerberosUseKuserok yes

# GSSAPI options
GSSAPIAuthentication yes
GSSAPICleanupCredentials no
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no
#GSSAPIEnablek5users no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
# WARNING: 'UsePAM no' is not supported in Fedora and may cause several
# problems.
UsePAM yes

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
X11Forwarding yes
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes

# It is recommended to use pam_motd in /etc/pam.d/sshd instead of PrintMotd,
# as it is more configurable and versatile than the built-in version.
PrintMotd no

#PrintLastLog yes
#TCPKeepAlive yes
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#UseDNS no
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# Accept locale-related environment variables
AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE
AcceptEnv XMODIFIERS

# override default of no subsystems
Subsystem	sftp	/usr/libexec/openssh/sftp-server

# Example of overriding settings on a per-user basis
#Match User anoncvs
#	X11Forwarding no
#	AllowTcpForwarding no
#	PermitTTY no
#	ForceCommand cvs server

2021-06-14 14:30:26,421 p=443285 u=ansible n=ansible | ansible4.example.com | CHANGED | rc=0 >>
#	$OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

# If you want to change the port on a SELinux system, you have to tell
# SELinux about this change.
# semanage port -a -t ssh_port_t -p tcp #PORTNUMBER
#
#Port 22
#AddressFamily any
#ListenAddress 0.0.0.0
#ListenAddress ::

HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key

# Ciphers and keying
#RekeyLimit default none

# System-wide Crypto policy:
# This system is following system-wide crypto policy. The changes to
# Ciphers, MACs, KexAlgoritms and GSSAPIKexAlgorithsm will not have any
# effect here. They will be overridden by command-line options passed on
# the server start up.
# To opt out, uncomment a line with redefinition of  CRYPTO_POLICY=
# variable in  /etc/sysconfig/sshd  to overwrite the policy.
# For more information, see manual page for update-crypto-policies(8).

# Logging
#SyslogFacility AUTH
SyslogFacility AUTHPRIV
#LogLevel INFO

# Authentication:

#LoginGraceTime 2m
PermitRootLogin yes
#StrictModes yes
#MaxAuthTries 6
#MaxSessions 10

#PubkeyAuthentication yes

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
AuthorizedKeysFile	.ssh/authorized_keys

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
#PasswordAuthentication yes
#PermitEmptyPasswords no
PasswordAuthentication yes

# Change to no to disable s/key passwords
#ChallengeResponseAuthentication yes
ChallengeResponseAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no
#KerberosUseKuserok yes

# GSSAPI options
GSSAPIAuthentication yes
GSSAPICleanupCredentials no
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no
#GSSAPIEnablek5users no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
# WARNING: 'UsePAM no' is not supported in Fedora and may cause several
# problems.
UsePAM yes

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
X11Forwarding yes
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes

# It is recommended to use pam_motd in /etc/pam.d/sshd instead of PrintMotd,
# as it is more configurable and versatile than the built-in version.
PrintMotd no

#PrintLastLog yes
#TCPKeepAlive yes
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#UseDNS no
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# Accept locale-related environment variables
AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE
AcceptEnv XMODIFIERS

# override default of no subsystems
Subsystem	sftp	/usr/libexec/openssh/sftp-server

# Example of overriding settings on a per-user basis
#Match User anoncvs
#	X11Forwarding no
#	AllowTcpForwarding no
#	PermitTTY no
#	ForceCommand cvs server

2021-06-14 14:30:26,423 p=443285 u=ansible n=ansible | ansible2.example.com | CHANGED | rc=0 >>
#	$OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

# If you want to change the port on a SELinux system, you have to tell
# SELinux about this change.
# semanage port -a -t ssh_port_t -p tcp #PORTNUMBER
#
#Port 22
#AddressFamily any
#ListenAddress 0.0.0.0
#ListenAddress ::

HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key

# Ciphers and keying
#RekeyLimit default none

# System-wide Crypto policy:
# This system is following system-wide crypto policy. The changes to
# Ciphers, MACs, KexAlgoritms and GSSAPIKexAlgorithsm will not have any
# effect here. They will be overridden by command-line options passed on
# the server start up.
# To opt out, uncomment a line with redefinition of  CRYPTO_POLICY=
# variable in  /etc/sysconfig/sshd  to overwrite the policy.
# For more information, see manual page for update-crypto-policies(8).

# Logging
#SyslogFacility AUTH
SyslogFacility AUTHPRIV
#LogLevel INFO

# Authentication:

#LoginGraceTime 2m
PermitRootLogin yes
#StrictModes yes
#MaxAuthTries 6
#MaxSessions 10

#PubkeyAuthentication yes

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
AuthorizedKeysFile	.ssh/authorized_keys

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
#PasswordAuthentication yes
#PermitEmptyPasswords no
PasswordAuthentication yes

# Change to no to disable s/key passwords
#ChallengeResponseAuthentication yes
ChallengeResponseAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no
#KerberosUseKuserok yes

# GSSAPI options
GSSAPIAuthentication yes
GSSAPICleanupCredentials no
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no
#GSSAPIEnablek5users no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
# WARNING: 'UsePAM no' is not supported in Fedora and may cause several
# problems.
UsePAM yes

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
X11Forwarding yes
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes

# It is recommended to use pam_motd in /etc/pam.d/sshd instead of PrintMotd,
# as it is more configurable and versatile than the built-in version.
PrintMotd no

#PrintLastLog yes
#TCPKeepAlive yes
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#UseDNS no
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# Accept locale-related environment variables
AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE
AcceptEnv XMODIFIERS

# override default of no subsystems
Subsystem	sftp	/usr/libexec/openssh/sftp-server

# Example of overriding settings on a per-user basis
#Match User anoncvs
#	X11Forwarding no
#	AllowTcpForwarding no
#	PermitTTY no
#	ForceCommand cvs server

2021-06-14 14:30:40,782 p=443433 u=ansible n=ansible | ansible2.example.com | FAILED | rc=1 >>
#	$OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

# If you want to change the port on a SELinux system, you have to tell
# SELinux about this change.
# semanage port -a -t ssh_port_t -p tcp #PORTNUMBER
#
#Port 22
#AddressFamily any
#ListenAddress 0.0.0.0
#ListenAddress ::

HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key

# Ciphers and keying
#RekeyLimit default none

# System-wide Crypto policy:
# This system is following system-wide crypto policy. The changes to
# Ciphers, MACs, KexAlgoritms and GSSAPIKexAlgorithsm will not have any
# effect here. They will be overridden by command-line options passed on
# the server start up.
# To opt out, uncomment a line with redefinition of  CRYPTO_POLICY=
# variable in  /etc/sysconfig/sshd  to overwrite the policy.
# For more information, see manual page for update-crypto-policies(8).

# Logging
#SyslogFacility AUTH
SyslogFacility AUTHPRIV
#LogLevel INFO

# Authentication:

#LoginGraceTime 2m
PermitRootLogin yes
#StrictModes yes
#MaxAuthTries 6
#MaxSessions 10

#PubkeyAuthentication yes

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
AuthorizedKeysFile	.ssh/authorized_keys

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
#PasswordAuthentication yes
#PermitEmptyPasswords no
PasswordAuthentication yes

# Change to no to disable s/key passwords
#ChallengeResponseAuthentication yes
ChallengeResponseAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no
#KerberosUseKuserok yes

# GSSAPI options
GSSAPIAuthentication yes
GSSAPICleanupCredentials no
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no
#GSSAPIEnablek5users no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
# WARNING: 'UsePAM no' is not supported in Fedora and may cause several
# problems.
UsePAM yes

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
X11Forwarding yes
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes

# It is recommended to use pam_motd in /etc/pam.d/sshd instead of PrintMotd,
# as it is more configurable and versatile than the built-in version.
PrintMotd no

#PrintLastLog yes
#TCPKeepAlive yes
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#UseDNS no
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# Accept locale-related environment variables
AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE
AcceptEnv XMODIFIERS

# override default of no subsystems
Subsystem	sftp	/usr/libexec/openssh/sftp-server

# Example of overriding settings on a per-user basis
#Match User anoncvs
#	X11Forwarding no
#	AllowTcpForwarding no
#	PermitTTY no
#	ForceCommand cvs servercat: '|': No such file or directory
cat: grep: No such file or directory
cat: AllowedUsers: No such file or directorynon-zero return code

2021-06-14 14:30:40,820 p=443433 u=ansible n=ansible | ansible3.example.com | FAILED | rc=1 >>
#	$OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

# If you want to change the port on a SELinux system, you have to tell
# SELinux about this change.
# semanage port -a -t ssh_port_t -p tcp #PORTNUMBER
#
#Port 22
#AddressFamily any
#ListenAddress 0.0.0.0
#ListenAddress ::

HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key

# Ciphers and keying
#RekeyLimit default none

# System-wide Crypto policy:
# This system is following system-wide crypto policy. The changes to
# Ciphers, MACs, KexAlgoritms and GSSAPIKexAlgorithsm will not have any
# effect here. They will be overridden by command-line options passed on
# the server start up.
# To opt out, uncomment a line with redefinition of  CRYPTO_POLICY=
# variable in  /etc/sysconfig/sshd  to overwrite the policy.
# For more information, see manual page for update-crypto-policies(8).

# Logging
#SyslogFacility AUTH
SyslogFacility AUTHPRIV
#LogLevel INFO

# Authentication:

#LoginGraceTime 2m
PermitRootLogin yes
#StrictModes yes
#MaxAuthTries 6
#MaxSessions 10

#PubkeyAuthentication yes

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
AuthorizedKeysFile	.ssh/authorized_keys

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
#PasswordAuthentication yes
#PermitEmptyPasswords no
PasswordAuthentication yes

# Change to no to disable s/key passwords
#ChallengeResponseAuthentication yes
ChallengeResponseAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no
#KerberosUseKuserok yes

# GSSAPI options
GSSAPIAuthentication yes
GSSAPICleanupCredentials no
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no
#GSSAPIEnablek5users no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
# WARNING: 'UsePAM no' is not supported in Fedora and may cause several
# problems.
UsePAM yes

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
X11Forwarding yes
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes

# It is recommended to use pam_motd in /etc/pam.d/sshd instead of PrintMotd,
# as it is more configurable and versatile than the built-in version.
PrintMotd no

#PrintLastLog yes
#TCPKeepAlive yes
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#UseDNS no
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# Accept locale-related environment variables
AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE
AcceptEnv XMODIFIERS

# override default of no subsystems
Subsystem	sftp	/usr/libexec/openssh/sftp-server

# Example of overriding settings on a per-user basis
#Match User anoncvs
#	X11Forwarding no
#	AllowTcpForwarding no
#	PermitTTY no
#	ForceCommand cvs servercat: '|': No such file or directory
cat: grep: No such file or directory
cat: AllowedUsers: No such file or directorynon-zero return code

2021-06-14 14:30:40,827 p=443433 u=ansible n=ansible | ansible4.example.com | FAILED | rc=1 >>
#	$OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

# If you want to change the port on a SELinux system, you have to tell
# SELinux about this change.
# semanage port -a -t ssh_port_t -p tcp #PORTNUMBER
#
#Port 22
#AddressFamily any
#ListenAddress 0.0.0.0
#ListenAddress ::

HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key

# Ciphers and keying
#RekeyLimit default none

# System-wide Crypto policy:
# This system is following system-wide crypto policy. The changes to
# Ciphers, MACs, KexAlgoritms and GSSAPIKexAlgorithsm will not have any
# effect here. They will be overridden by command-line options passed on
# the server start up.
# To opt out, uncomment a line with redefinition of  CRYPTO_POLICY=
# variable in  /etc/sysconfig/sshd  to overwrite the policy.
# For more information, see manual page for update-crypto-policies(8).

# Logging
#SyslogFacility AUTH
SyslogFacility AUTHPRIV
#LogLevel INFO

# Authentication:

#LoginGraceTime 2m
PermitRootLogin yes
#StrictModes yes
#MaxAuthTries 6
#MaxSessions 10

#PubkeyAuthentication yes

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
AuthorizedKeysFile	.ssh/authorized_keys

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
#PasswordAuthentication yes
#PermitEmptyPasswords no
PasswordAuthentication yes

# Change to no to disable s/key passwords
#ChallengeResponseAuthentication yes
ChallengeResponseAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no
#KerberosUseKuserok yes

# GSSAPI options
GSSAPIAuthentication yes
GSSAPICleanupCredentials no
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no
#GSSAPIEnablek5users no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
# WARNING: 'UsePAM no' is not supported in Fedora and may cause several
# problems.
UsePAM yes

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
X11Forwarding yes
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes

# It is recommended to use pam_motd in /etc/pam.d/sshd instead of PrintMotd,
# as it is more configurable and versatile than the built-in version.
PrintMotd no

#PrintLastLog yes
#TCPKeepAlive yes
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#UseDNS no
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# Accept locale-related environment variables
AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE
AcceptEnv XMODIFIERS

# override default of no subsystems
Subsystem	sftp	/usr/libexec/openssh/sftp-server

# Example of overriding settings on a per-user basis
#Match User anoncvs
#	X11Forwarding no
#	AllowTcpForwarding no
#	PermitTTY no
#	ForceCommand cvs servercat: '|': No such file or directory
cat: grep: No such file or directory
cat: AllowedUsers: No such file or directorynon-zero return code

2021-06-14 14:30:48,163 p=443525 u=ansible n=ansible | ansible2.example.com | FAILED | rc=1 >>
non-zero return code

2021-06-14 14:30:48,212 p=443525 u=ansible n=ansible | ansible3.example.com | FAILED | rc=1 >>
non-zero return code

2021-06-14 14:30:48,220 p=443525 u=ansible n=ansible | ansible4.example.com | FAILED | rc=1 >>
non-zero return code

2021-06-14 14:31:14,553 p=443806 u=ansible n=ansible | PLAY [task6] ****************************************************************************************************
2021-06-14 14:31:14,560 p=443806 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 14:31:15,850 p=443806 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 14:31:15,859 p=443806 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 14:31:15,862 p=443806 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 14:31:15,868 p=443806 u=ansible n=ansible | TASK [ensure selinux is enforcing] ******************************************************************************
2021-06-14 14:31:16,667 p=443806 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 14:31:16,695 p=443806 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 14:31:16,708 p=443806 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 14:31:16,709 p=443806 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 14:31:16,710 p=443806 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 14:31:16,710 p=443806 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 14:31:16,710 p=443806 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 14:31:21,541 p=443916 u=ansible n=ansible | ansible2.example.com | FAILED | rc=1 >>
non-zero return code

2021-06-14 14:31:21,552 p=443916 u=ansible n=ansible | ansible3.example.com | FAILED | rc=1 >>
non-zero return code

2021-06-14 14:31:21,555 p=443916 u=ansible n=ansible | ansible4.example.com | FAILED | rc=1 >>
non-zero return code

2021-06-14 14:31:28,560 p=444008 u=ansible n=ansible | ansible3.example.com | CHANGED | rc=0 >>
#	$OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

# If you want to change the port on a SELinux system, you have to tell
# SELinux about this change.
# semanage port -a -t ssh_port_t -p tcp #PORTNUMBER
#
#Port 22
#AddressFamily any
#ListenAddress 0.0.0.0
#ListenAddress ::

HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key

# Ciphers and keying
#RekeyLimit default none

# System-wide Crypto policy:
# This system is following system-wide crypto policy. The changes to
# Ciphers, MACs, KexAlgoritms and GSSAPIKexAlgorithsm will not have any
# effect here. They will be overridden by command-line options passed on
# the server start up.
# To opt out, uncomment a line with redefinition of  CRYPTO_POLICY=
# variable in  /etc/sysconfig/sshd  to overwrite the policy.
# For more information, see manual page for update-crypto-policies(8).

# Logging
#SyslogFacility AUTH
SyslogFacility AUTHPRIV
#LogLevel INFO

# Authentication:

#LoginGraceTime 2m
PermitRootLogin yes
#StrictModes yes
#MaxAuthTries 6
#MaxSessions 10

#PubkeyAuthentication yes

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
AuthorizedKeysFile	.ssh/authorized_keys

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
#PasswordAuthentication yes
#PermitEmptyPasswords no
PasswordAuthentication yes

# Change to no to disable s/key passwords
#ChallengeResponseAuthentication yes
ChallengeResponseAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no
#KerberosUseKuserok yes

# GSSAPI options
GSSAPIAuthentication yes
GSSAPICleanupCredentials no
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no
#GSSAPIEnablek5users no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
# WARNING: 'UsePAM no' is not supported in Fedora and may cause several
# problems.
UsePAM yes

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
X11Forwarding yes
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes

# It is recommended to use pam_motd in /etc/pam.d/sshd instead of PrintMotd,
# as it is more configurable and versatile than the built-in version.
PrintMotd no

#PrintLastLog yes
#TCPKeepAlive yes
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#UseDNS no
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# Accept locale-related environment variables
AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE
AcceptEnv XMODIFIERS

# override default of no subsystems
Subsystem	sftp	/usr/libexec/openssh/sftp-server

# Example of overriding settings on a per-user basis
#Match User anoncvs
#	X11Forwarding no
#	AllowTcpForwarding no
#	PermitTTY no
#	ForceCommand cvs server

2021-06-14 14:31:28,564 p=444008 u=ansible n=ansible | ansible2.example.com | CHANGED | rc=0 >>
#	$OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

# If you want to change the port on a SELinux system, you have to tell
# SELinux about this change.
# semanage port -a -t ssh_port_t -p tcp #PORTNUMBER
#
#Port 22
#AddressFamily any
#ListenAddress 0.0.0.0
#ListenAddress ::

HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key

# Ciphers and keying
#RekeyLimit default none

# System-wide Crypto policy:
# This system is following system-wide crypto policy. The changes to
# Ciphers, MACs, KexAlgoritms and GSSAPIKexAlgorithsm will not have any
# effect here. They will be overridden by command-line options passed on
# the server start up.
# To opt out, uncomment a line with redefinition of  CRYPTO_POLICY=
# variable in  /etc/sysconfig/sshd  to overwrite the policy.
# For more information, see manual page for update-crypto-policies(8).

# Logging
#SyslogFacility AUTH
SyslogFacility AUTHPRIV
#LogLevel INFO

# Authentication:

#LoginGraceTime 2m
PermitRootLogin yes
#StrictModes yes
#MaxAuthTries 6
#MaxSessions 10

#PubkeyAuthentication yes

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
AuthorizedKeysFile	.ssh/authorized_keys

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
#PasswordAuthentication yes
#PermitEmptyPasswords no
PasswordAuthentication yes

# Change to no to disable s/key passwords
#ChallengeResponseAuthentication yes
ChallengeResponseAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no
#KerberosUseKuserok yes

# GSSAPI options
GSSAPIAuthentication yes
GSSAPICleanupCredentials no
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no
#GSSAPIEnablek5users no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
# WARNING: 'UsePAM no' is not supported in Fedora and may cause several
# problems.
UsePAM yes

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
X11Forwarding yes
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes

# It is recommended to use pam_motd in /etc/pam.d/sshd instead of PrintMotd,
# as it is more configurable and versatile than the built-in version.
PrintMotd no

#PrintLastLog yes
#TCPKeepAlive yes
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#UseDNS no
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# Accept locale-related environment variables
AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE
AcceptEnv XMODIFIERS

# override default of no subsystems
Subsystem	sftp	/usr/libexec/openssh/sftp-server

# Example of overriding settings on a per-user basis
#Match User anoncvs
#	X11Forwarding no
#	AllowTcpForwarding no
#	PermitTTY no
#	ForceCommand cvs server

2021-06-14 14:31:28,588 p=444008 u=ansible n=ansible | ansible4.example.com | CHANGED | rc=0 >>
#	$OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

# If you want to change the port on a SELinux system, you have to tell
# SELinux about this change.
# semanage port -a -t ssh_port_t -p tcp #PORTNUMBER
#
#Port 22
#AddressFamily any
#ListenAddress 0.0.0.0
#ListenAddress ::

HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key

# Ciphers and keying
#RekeyLimit default none

# System-wide Crypto policy:
# This system is following system-wide crypto policy. The changes to
# Ciphers, MACs, KexAlgoritms and GSSAPIKexAlgorithsm will not have any
# effect here. They will be overridden by command-line options passed on
# the server start up.
# To opt out, uncomment a line with redefinition of  CRYPTO_POLICY=
# variable in  /etc/sysconfig/sshd  to overwrite the policy.
# For more information, see manual page for update-crypto-policies(8).

# Logging
#SyslogFacility AUTH
SyslogFacility AUTHPRIV
#LogLevel INFO

# Authentication:

#LoginGraceTime 2m
PermitRootLogin yes
#StrictModes yes
#MaxAuthTries 6
#MaxSessions 10

#PubkeyAuthentication yes

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
AuthorizedKeysFile	.ssh/authorized_keys

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
#PasswordAuthentication yes
#PermitEmptyPasswords no
PasswordAuthentication yes

# Change to no to disable s/key passwords
#ChallengeResponseAuthentication yes
ChallengeResponseAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no
#KerberosUseKuserok yes

# GSSAPI options
GSSAPIAuthentication yes
GSSAPICleanupCredentials no
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no
#GSSAPIEnablek5users no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
# WARNING: 'UsePAM no' is not supported in Fedora and may cause several
# problems.
UsePAM yes

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
X11Forwarding yes
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes

# It is recommended to use pam_motd in /etc/pam.d/sshd instead of PrintMotd,
# as it is more configurable and versatile than the built-in version.
PrintMotd no

#PrintLastLog yes
#TCPKeepAlive yes
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#UseDNS no
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# Accept locale-related environment variables
AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE
AcceptEnv XMODIFIERS

# override default of no subsystems
Subsystem	sftp	/usr/libexec/openssh/sftp-server

# Example of overriding settings on a per-user basis
#Match User anoncvs
#	X11Forwarding no
#	AllowTcpForwarding no
#	PermitTTY no
#	ForceCommand cvs server

2021-06-14 14:33:16,607 p=444881 u=ansible n=ansible | ERROR! couldn't resolve module/action 'tasks'. This often indicates a misspelling, missing collection, or incorrect module path.

The error appears to be in '/home/ansible/task6/tasks/main.yml': line 3, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

# tasks file for task6
- name: copy sshd_config jinja2 template to host
  ^ here

2021-06-14 14:34:08,514 p=445252 u=ansible n=ansible | ERROR! unexpected parameter type in action: <class 'ansible.parsing.yaml.objects.AnsibleSequence'>

The error appears to be in '/home/ansible/task6/tasks/main.yml': line 2, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

---
- name: copy sshd_config jinja2 template to host
  ^ here

2021-06-14 14:38:15,168 p=446970 u=ansible n=ansible | PLAY [task6] ****************************************************************************************************
2021-06-14 14:38:15,176 p=446970 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 14:38:16,759 p=446970 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 14:38:16,785 p=446970 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 14:38:16,794 p=446970 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 14:38:16,802 p=446970 u=ansible n=ansible | TASK [task6 : copy tempalte file] *******************************************************************************
2021-06-14 14:38:16,835 p=446970 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"msg": "The conditional check 'ansible_facts['os family'] == \"RedHat\"' failed. The error was: error while evaluating conditional (ansible_facts['os family'] == \"RedHat\"): 'dict object' has no attribute 'os family'\n\nThe error appears to be in '/home/ansible/task6/tasks/main.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- name: copy tempalte file\n  ^ here\n"}
2021-06-14 14:38:16,857 p=446970 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"msg": "The conditional check 'ansible_facts['os family'] == \"RedHat\"' failed. The error was: error while evaluating conditional (ansible_facts['os family'] == \"RedHat\"): 'dict object' has no attribute 'os family'\n\nThe error appears to be in '/home/ansible/task6/tasks/main.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- name: copy tempalte file\n  ^ here\n"}
2021-06-14 14:38:16,861 p=446970 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"msg": "The conditional check 'ansible_facts['os family'] == \"RedHat\"' failed. The error was: error while evaluating conditional (ansible_facts['os family'] == \"RedHat\"): 'dict object' has no attribute 'os family'\n\nThe error appears to be in '/home/ansible/task6/tasks/main.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- name: copy tempalte file\n  ^ here\n"}
2021-06-14 14:38:16,862 p=446970 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 14:38:16,862 p=446970 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 14:38:16,862 p=446970 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 14:38:16,862 p=446970 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 14:38:48,425 p=447267 u=ansible n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: local

2021-06-14 14:38:48,425 p=447267 u=ansible n=ansible | [WARNING]: No hosts matched, nothing to do

2021-06-14 14:38:56,171 p=447323 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "msg": "Hello world!"
}
2021-06-14 14:38:56,188 p=447323 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "msg": "Hello world!"
}
2021-06-14 14:38:56,192 p=447323 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "msg": "Hello world!"
}
2021-06-14 14:39:05,769 p=447409 u=ansible n=ansible | ERROR! this task 'debug' has extra params, which is only allowed in the following modules: ansible.legacy.import_tasks, ansible.builtin.raw, ansible.legacy.include_role, include, ansible.legacy.include, ansible.builtin.script, ansible.builtin.meta, include_vars, ansible.legacy.win_shell, ansible.builtin.win_command, import_role, ansible.legacy.win_command, win_shell, ansible.legacy.script, ansible.legacy.set_fact, shell, ansible.builtin.import_role, include_role, command, ansible.legacy.command, ansible.builtin.import_tasks, add_host, import_tasks, script, ansible.legacy.add_host, ansible.builtin.include, ansible.builtin.set_fact, ansible.builtin.win_shell, raw, ansible.builtin.shell, group_by, ansible.legacy.include_vars, ansible.builtin.group_by, ansible.legacy.import_role, ansible.builtin.include_tasks, ansible.builtin.add_host, include_tasks, ansible.legacy.include_tasks, ansible.builtin.include_role, ansible.legacy.group_by, ansible.legacy.shell, ansible.builtin.command, ansible.legacy.raw, meta, win_command, ansible.legacy.meta, set_fact, ansible.builtin.include_vars
2021-06-14 14:40:34,810 p=448102 u=ansible n=ansible | PLAY [task6] ****************************************************************************************************
2021-06-14 14:40:34,818 p=448102 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 14:40:36,320 p=448102 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 14:40:36,365 p=448102 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 14:40:36,384 p=448102 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 14:40:36,392 p=448102 u=ansible n=ansible | TASK [task6 : copy tempalte file] *******************************************************************************
2021-06-14 14:40:36,963 p=448102 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 14:40:36,986 p=448102 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-14 14:40:36,991 p=448102 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 14:40:36,997 p=448102 u=ansible n=ansible | TASK [ensure selinux is enforcing] ******************************************************************************
2021-06-14 14:40:37,723 p=448102 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 14:40:37,805 p=448102 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 14:40:37,809 p=448102 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 14:40:37,812 p=448102 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 14:40:37,812 p=448102 u=ansible n=ansible | ansible2.example.com       : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 14:40:37,812 p=448102 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 14:40:37,812 p=448102 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 14:41:01,405 p=448390 u=ansible n=ansible | PLAY [task6] ****************************************************************************************************
2021-06-14 14:41:01,413 p=448390 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 14:41:02,649 p=448390 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 14:41:02,668 p=448390 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 14:41:02,670 p=448390 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 14:41:02,679 p=448390 u=ansible n=ansible | TASK [task6 : copy template file] *******************************************************************************
2021-06-14 14:41:03,765 p=448390 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-14 14:41:03,795 p=448390 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 14:41:03,799 p=448390 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 14:41:03,807 p=448390 u=ansible n=ansible | TASK [ensure selinux is enforcing] ******************************************************************************
2021-06-14 14:41:04,554 p=448390 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 14:41:04,589 p=448390 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 14:41:04,603 p=448390 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 14:41:04,604 p=448390 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 14:41:04,605 p=448390 u=ansible n=ansible | ansible2.example.com       : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 14:41:04,605 p=448390 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 14:41:04,605 p=448390 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 14:41:17,598 p=448618 u=ansible n=ansible | ansible4.example.com | CHANGED | rc=0 >>
[200~#       $OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

# If you want to change the port on a SELinux system, you have to tell
# SELinux about this change.
# semanage port -a -t ssh_port_t -p tcp #PORTNUMBER
#
Port 2022
#AddressFamily any
#ListenAddress 0.0.0.0
#ListenAddress ::

HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key

# Ciphers and keying
#RekeyLimit default none

# System-wide Crypto policy:
# This system is following system-wide crypto policy. The changes to
# Ciphers, MACs, KexAlgoritms and GSSAPIKexAlgorithsm will not have any
# effect here. They will be overridden by command-line options passed on
# the server start up.
# To opt out, uncomment a line with redefinition of  CRYPTO_POLICY=
# variable in  /etc/sysconfig/sshd  to overwrite the policy.
# For more information, see manual page for update-crypto-policies(8).

# Logging
#SyslogFacility AUTH
SyslogFacility AUTHPRIV
#LogLevel INFO

# Authentication:

#LoginGraceTime 2m
PermitRootLogin yes
#StrictModes yes
#MaxAuthTries 6
#MaxSessions 10

#PubkeyAuthentication yes

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
AuthorizedKeysFile      .ssh/authorized_keys

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
#PasswordAuthentication yes
#PermitEmptyPasswords no
PasswordAuthentication yes

# Change to no to disable s/key passwords
#ChallengeResponseAuthentication yes
ChallengeResponseAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no
#KerberosUseKuserok yes

# GSSAPI options
GSSAPIAuthentication yes
GSSAPICleanupCredentials no
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no
#GSSAPIEnablek5users no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
# WARNING: 'UsePAM no' is not supported in Fedora and may cause several
# problems.
UsePAM yes

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
X11Forwarding yes
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes

# It is recommended to use pam_motd in /etc/pam.d/sshd instead of PrintMotd,
# as it is more configurable and versatile than the built-in version.
PrintMotd no

#PrintLastLog yes
#TCPKeepAlive yes
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#UseDNS no
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# Accept locale-related environment variables
AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE
AcceptEnv XMODIFIERS

# override default of no subsystems
Subsystem       sftp    /usr/libexec/openssh/sftp-server

# Example of overriding settings on a per-user basis
#Match User anoncvs
#       X11Forwarding no
#       AllowTcpForwarding no
#       PermitTTY no
#       ForceCommand cvs server

AllowUsers ansible

2021-06-14 14:41:17,625 p=448618 u=ansible n=ansible | ansible3.example.com | CHANGED | rc=0 >>
[200~#       $OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

# If you want to change the port on a SELinux system, you have to tell
# SELinux about this change.
# semanage port -a -t ssh_port_t -p tcp #PORTNUMBER
#
Port 2022
#AddressFamily any
#ListenAddress 0.0.0.0
#ListenAddress ::

HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key

# Ciphers and keying
#RekeyLimit default none

# System-wide Crypto policy:
# This system is following system-wide crypto policy. The changes to
# Ciphers, MACs, KexAlgoritms and GSSAPIKexAlgorithsm will not have any
# effect here. They will be overridden by command-line options passed on
# the server start up.
# To opt out, uncomment a line with redefinition of  CRYPTO_POLICY=
# variable in  /etc/sysconfig/sshd  to overwrite the policy.
# For more information, see manual page for update-crypto-policies(8).

# Logging
#SyslogFacility AUTH
SyslogFacility AUTHPRIV
#LogLevel INFO

# Authentication:

#LoginGraceTime 2m
PermitRootLogin yes
#StrictModes yes
#MaxAuthTries 6
#MaxSessions 10

#PubkeyAuthentication yes

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
AuthorizedKeysFile      .ssh/authorized_keys

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
#PasswordAuthentication yes
#PermitEmptyPasswords no
PasswordAuthentication yes

# Change to no to disable s/key passwords
#ChallengeResponseAuthentication yes
ChallengeResponseAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no
#KerberosUseKuserok yes

# GSSAPI options
GSSAPIAuthentication yes
GSSAPICleanupCredentials no
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no
#GSSAPIEnablek5users no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
# WARNING: 'UsePAM no' is not supported in Fedora and may cause several
# problems.
UsePAM yes

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
X11Forwarding yes
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes

# It is recommended to use pam_motd in /etc/pam.d/sshd instead of PrintMotd,
# as it is more configurable and versatile than the built-in version.
PrintMotd no

#PrintLastLog yes
#TCPKeepAlive yes
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#UseDNS no
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# Accept locale-related environment variables
AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE
AcceptEnv XMODIFIERS

# override default of no subsystems
Subsystem       sftp    /usr/libexec/openssh/sftp-server

# Example of overriding settings on a per-user basis
#Match User anoncvs
#       X11Forwarding no
#       AllowTcpForwarding no
#       PermitTTY no
#       ForceCommand cvs server

AllowUsers ansible

2021-06-14 14:41:17,647 p=448618 u=ansible n=ansible | ansible2.example.com | CHANGED | rc=0 >>
[200~#       $OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

# If you want to change the port on a SELinux system, you have to tell
# SELinux about this change.
# semanage port -a -t ssh_port_t -p tcp #PORTNUMBER
#
Port 2022
#AddressFamily any
#ListenAddress 0.0.0.0
#ListenAddress ::

HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key

# Ciphers and keying
#RekeyLimit default none

# System-wide Crypto policy:
# This system is following system-wide crypto policy. The changes to
# Ciphers, MACs, KexAlgoritms and GSSAPIKexAlgorithsm will not have any
# effect here. They will be overridden by command-line options passed on
# the server start up.
# To opt out, uncomment a line with redefinition of  CRYPTO_POLICY=
# variable in  /etc/sysconfig/sshd  to overwrite the policy.
# For more information, see manual page for update-crypto-policies(8).

# Logging
#SyslogFacility AUTH
SyslogFacility AUTHPRIV
#LogLevel INFO

# Authentication:

#LoginGraceTime 2m
PermitRootLogin yes
#StrictModes yes
#MaxAuthTries 6
#MaxSessions 10

#PubkeyAuthentication yes

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
AuthorizedKeysFile      .ssh/authorized_keys

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
#PasswordAuthentication yes
#PermitEmptyPasswords no
PasswordAuthentication yes

# Change to no to disable s/key passwords
#ChallengeResponseAuthentication yes
ChallengeResponseAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no
#KerberosUseKuserok yes

# GSSAPI options
GSSAPIAuthentication yes
GSSAPICleanupCredentials no
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no
#GSSAPIEnablek5users no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
# WARNING: 'UsePAM no' is not supported in Fedora and may cause several
# problems.
UsePAM yes

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
X11Forwarding yes
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes

# It is recommended to use pam_motd in /etc/pam.d/sshd instead of PrintMotd,
# as it is more configurable and versatile than the built-in version.
PrintMotd no

#PrintLastLog yes
#TCPKeepAlive yes
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#UseDNS no
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# Accept locale-related environment variables
AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE
AcceptEnv XMODIFIERS

# override default of no subsystems
Subsystem       sftp    /usr/libexec/openssh/sftp-server

# Example of overriding settings on a per-user basis
#Match User anoncvs
#       X11Forwarding no
#       AllowTcpForwarding no
#       PermitTTY no
#       ForceCommand cvs server

AllowUsers ansible

2021-06-14 14:41:52,328 p=448906 u=ansible n=ansible | PLAY [task6] ****************************************************************************************************
2021-06-14 14:41:52,336 p=448906 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 14:41:53,505 p=448906 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 14:41:53,565 p=448906 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 14:41:53,580 p=448906 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 14:41:53,587 p=448906 u=ansible n=ansible | TASK [task6 : copy template file] *******************************************************************************
2021-06-14 14:41:54,524 p=448906 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 14:41:54,556 p=448906 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 14:41:54,576 p=448906 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 14:41:54,583 p=448906 u=ansible n=ansible | TASK [ensure selinux is enforcing] ******************************************************************************
2021-06-14 14:41:55,333 p=448906 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 14:41:55,369 p=448906 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 14:41:55,369 p=448906 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 14:41:55,371 p=448906 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 14:41:55,371 p=448906 u=ansible n=ansible | ansible2.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 14:41:55,371 p=448906 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 14:41:55,371 p=448906 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 14:42:18,889 p=449195 u=ansible n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: ansible2

2021-06-14 14:42:18,889 p=449195 u=ansible n=ansible | [WARNING]: No hosts matched, nothing to do

2021-06-14 14:42:27,747 p=449258 u=ansible n=ansible | ansible2.example.com | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Could not find the requested service ssh: host"
}
2021-06-14 14:42:34,098 p=449323 u=ansible n=ansible | ansible2.example.com | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Unable to restart service sshd: Job for sshd.service failed because the control process exited with error code.\nSee \"systemctl status sshd.service\" and \"journalctl -xe\" for details.\n"
}
2021-06-14 14:42:46,233 p=449430 u=ansible n=ansible | ansible2.example.com | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Unable to restart service sshd: Job for sshd.service failed because the control process exited with error code.\nSee \"systemctl status sshd.service\" and \"journalctl -xe\" for details.\n"
}
2021-06-14 14:42:55,005 p=449516 u=ansible n=ansible | ansible2.example.com | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Could not find the requested service ssh: host"
}
2021-06-14 14:47:27,001 p=451469 u=ansible n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: local

2021-06-14 14:47:27,001 p=451469 u=ansible n=ansible | [WARNING]: No hosts matched, nothing to do

2021-06-14 14:47:33,411 p=451518 u=ansible n=ansible | localhost | CHANGED | rc=0 >>
#	$OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

# If you want to change the port on a SELinux system, you have to tell
# SELinux about this change.
# semanage port -a -t ssh_port_t -p tcp #PORTNUMBER
#
#Port 22
#AddressFamily any
#ListenAddress 0.0.0.0
#ListenAddress ::

HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key

# Ciphers and keying
#RekeyLimit default none

# System-wide Crypto policy:
# This system is following system-wide crypto policy. The changes to
# Ciphers, MACs, KexAlgoritms and GSSAPIKexAlgorithsm will not have any
# effect here. They will be overridden by command-line options passed on
# the server start up.
# To opt out, uncomment a line with redefinition of  CRYPTO_POLICY=
# variable in  /etc/sysconfig/sshd  to overwrite the policy.
# For more information, see manual page for update-crypto-policies(8).

# Logging
#SyslogFacility AUTH
SyslogFacility AUTHPRIV
#LogLevel INFO

# Authentication:

#LoginGraceTime 2m
PermitRootLogin yes
#StrictModes yes
#MaxAuthTries 6
#MaxSessions 10

#PubkeyAuthentication yes

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
AuthorizedKeysFile	.ssh/authorized_keys

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
#PasswordAuthentication yes
#PermitEmptyPasswords no
PasswordAuthentication yes

# Change to no to disable s/key passwords
#ChallengeResponseAuthentication yes
ChallengeResponseAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no
#KerberosUseKuserok yes

# GSSAPI options
GSSAPIAuthentication yes
GSSAPICleanupCredentials no
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no
#GSSAPIEnablek5users no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
# WARNING: 'UsePAM no' is not supported in Fedora and may cause several
# problems.
UsePAM yes

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
X11Forwarding yes
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes

# It is recommended to use pam_motd in /etc/pam.d/sshd instead of PrintMotd,
# as it is more configurable and versatile than the built-in version.
PrintMotd no

#PrintLastLog yes
#TCPKeepAlive yes
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#UseDNS no
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# Accept locale-related environment variables
AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE
AcceptEnv XMODIFIERS

# override default of no subsystems
Subsystem	sftp	/usr/libexec/openssh/sftp-server

# Example of overriding settings on a per-user basis
#Match User anoncvs
#	X11Forwarding no
#	AllowTcpForwarding no
#	PermitTTY no
#	ForceCommand cvs server

2021-06-14 14:48:33,031 p=451972 u=ansible n=ansible | PLAY [task6] ****************************************************************************************************
2021-06-14 14:48:33,040 p=451972 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 14:48:33,075 p=451972 u=ansible n=ansible | fatal: [ansible2.example.com]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: connect to host ansible2.example.com port 22: Connection refused", "unreachable": true}
2021-06-14 14:48:34,397 p=451972 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 14:48:34,411 p=451972 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 14:48:34,418 p=451972 u=ansible n=ansible | TASK [task6 : copy template file] *******************************************************************************
2021-06-14 14:48:35,290 p=451972 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 14:48:35,294 p=451972 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 14:48:35,302 p=451972 u=ansible n=ansible | TASK [ensure selinux is enforcing] ******************************************************************************
2021-06-14 14:48:35,945 p=451972 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 14:48:35,957 p=451972 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 14:48:35,959 p=451972 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 14:48:35,959 p=451972 u=ansible n=ansible | ansible2.example.com       : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 14:48:35,959 p=451972 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 14:48:35,959 p=451972 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 15:01:29,524 p=457524 u=ansible n=ansible | PLAY [task6] ****************************************************************************************************
2021-06-14 15:01:29,534 p=457524 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 15:01:31,175 p=457524 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 15:01:31,179 p=457524 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 15:01:31,842 p=457524 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 15:01:31,849 p=457524 u=ansible n=ansible | TASK [task6 : copy template file] *******************************************************************************
2021-06-14 15:01:32,455 p=457524 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 15:01:32,487 p=457524 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 15:01:32,493 p=457524 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-14 15:01:32,500 p=457524 u=ansible n=ansible | TASK [ensure selinux is enforcing] ******************************************************************************
2021-06-14 15:01:33,347 p=457524 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 15:01:33,366 p=457524 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 15:01:33,369 p=457524 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 15:01:33,376 p=457524 u=ansible n=ansible | TASK [update selinux to use port 2022/tcp] **********************************************************************
2021-06-14 15:01:33,958 p=457524 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-14 15:01:33,969 p=457524 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-14 15:01:33,981 p=457524 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-14 15:01:33,983 p=457524 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 15:01:33,983 p=457524 u=ansible n=ansible | ansible2.example.com       : ok=3    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-14 15:01:33,983 p=457524 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-14 15:01:33,983 p=457524 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-14 15:01:45,059 p=457770 u=ansible n=ansible | Using /home/ansible/ansible.cfg as config file
2021-06-14 15:01:45,279 p=457770 u=ansible n=ansible | PLAY [task6] ****************************************************************************************************
2021-06-14 15:01:45,288 p=457770 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 15:01:46,624 p=457770 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 15:01:46,642 p=457770 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 15:01:46,647 p=457770 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 15:01:46,654 p=457770 u=ansible n=ansible | TASK [task6 : copy template file] *******************************************************************************
2021-06-14 15:01:47,204 p=457770 u=ansible n=ansible | changed: [ansible4.example.com] => {"changed": true}
2021-06-14 15:01:47,253 p=457770 u=ansible n=ansible | changed: [ansible2.example.com] => {"changed": true}
2021-06-14 15:01:47,259 p=457770 u=ansible n=ansible | changed: [ansible3.example.com] => {"changed": true}
2021-06-14 15:01:47,268 p=457770 u=ansible n=ansible | TASK [ensure selinux is enforcing] ******************************************************************************
2021-06-14 15:01:48,039 p=457770 u=ansible n=ansible | ok: [ansible4.example.com] => {"changed": false, "configfile": "/etc/selinux/config", "msg": "", "policy": "targeted", "reboot_required": false, "state": "enforcing"}
2021-06-14 15:01:48,083 p=457770 u=ansible n=ansible | ok: [ansible3.example.com] => {"changed": false, "configfile": "/etc/selinux/config", "msg": "", "policy": "targeted", "reboot_required": false, "state": "enforcing"}
2021-06-14 15:01:48,099 p=457770 u=ansible n=ansible | ok: [ansible2.example.com] => {"changed": false, "configfile": "/etc/selinux/config", "msg": "", "policy": "targeted", "reboot_required": false, "state": "enforcing"}
2021-06-14 15:01:48,107 p=457770 u=ansible n=ansible | TASK [update selinux to use port 2022/tcp] **********************************************************************
2021-06-14 15:01:48,679 p=457770 u=ansible n=ansible | skipping: [ansible2.example.com] => {"changed": false, "msg": "skipped, running in check mode"}
2021-06-14 15:01:48,709 p=457770 u=ansible n=ansible | skipping: [ansible3.example.com] => {"changed": false, "msg": "skipped, running in check mode"}
2021-06-14 15:01:48,713 p=457770 u=ansible n=ansible | skipping: [ansible4.example.com] => {"changed": false, "msg": "skipped, running in check mode"}
2021-06-14 15:01:48,715 p=457770 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 15:01:48,715 p=457770 u=ansible n=ansible | ansible2.example.com       : ok=3    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-14 15:01:48,715 p=457770 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-14 15:01:48,715 p=457770 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-14 15:01:56,012 p=457962 u=ansible n=ansible | PLAY [task6] ****************************************************************************************************
2021-06-14 15:01:56,022 p=457962 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-14 15:01:57,328 p=457962 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 15:01:57,377 p=457962 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 15:01:57,385 p=457962 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 15:01:57,395 p=457962 u=ansible n=ansible | TASK [task6 : copy template file] *******************************************************************************
2021-06-14 15:01:58,599 p=457962 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 15:01:58,612 p=457962 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 15:01:58,623 p=457962 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-14 15:01:58,630 p=457962 u=ansible n=ansible | TASK [ensure selinux is enforcing] ******************************************************************************
2021-06-14 15:01:59,436 p=457962 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 15:01:59,482 p=457962 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 15:01:59,515 p=457962 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 15:01:59,521 p=457962 u=ansible n=ansible | TASK [update selinux to use port 2022/tcp] **********************************************************************
2021-06-14 15:02:17,956 p=457962 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-14 15:02:19,982 p=457962 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 15:02:20,416 p=457962 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 15:02:20,419 p=457962 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-14 15:02:20,419 p=457962 u=ansible n=ansible | ansible2.example.com       : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 15:02:20,420 p=457962 u=ansible n=ansible | ansible3.example.com       : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 15:02:20,421 p=457962 u=ansible n=ansible | ansible4.example.com       : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 18:45:05,326 p=459604 u=ansible n=ansible | ansible2.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ssh: connect to host ansible2.example.com port 22: Connection refused",
    "unreachable": true
}
2021-06-14 18:45:06,157 p=459604 u=ansible n=ansible | control.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 18:45:06,198 p=459604 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 18:45:07,005 p=459604 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 18:45:07,102 p=459604 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:37:13,425 p=536592 u=ansible n=ansible | PLAY [task6] *****************************************************************************************************************
2021-06-14 21:37:13,433 p=536592 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************
2021-06-14 21:37:13,464 p=536592 u=ansible n=ansible | fatal: [ansible2.example.com]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: connect to host ansible2.example.com port 22: Connection refused", "unreachable": true}
2021-06-14 21:37:15,839 p=536592 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:37:15,875 p=536592 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:37:15,885 p=536592 u=ansible n=ansible | TASK [task6 : copy template file] ********************************************************************************************
2021-06-14 21:37:16,857 p=536592 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:37:16,867 p=536592 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:37:16,873 p=536592 u=ansible n=ansible | TASK [ensure selinux is enforcing] *******************************************************************************************
2021-06-14 21:37:17,452 p=536592 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:37:17,468 p=536592 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:37:17,475 p=536592 u=ansible n=ansible | TASK [update selinux to use port 2022/tcp] ***********************************************************************************
2021-06-14 21:37:17,898 p=536592 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-14 21:37:17,902 p=536592 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-14 21:37:17,908 p=536592 u=ansible n=ansible | TASK [open the firewall for port 2022] ***************************************************************************************
2021-06-14 21:37:19,517 p=536592 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 21:37:19,547 p=536592 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 21:37:19,549 p=536592 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************
2021-06-14 21:37:19,549 p=536592 u=ansible n=ansible | ansible2.example.com       : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 21:37:19,549 p=536592 u=ansible n=ansible | ansible3.example.com       : ok=4    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-14 21:37:19,549 p=536592 u=ansible n=ansible | ansible4.example.com       : ok=4    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-14 21:41:12,411 p=538383 u=ansible n=ansible | PLAY [task6] *****************************************************************************************************************
2021-06-14 21:41:12,419 p=538383 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************
2021-06-14 21:41:13,832 p=538383 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:41:13,877 p=538383 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:41:14,392 p=538383 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:41:14,399 p=538383 u=ansible n=ansible | TASK [task6 : copy template file] ********************************************************************************************
2021-06-14 21:41:15,312 p=538383 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:41:15,338 p=538383 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:41:15,409 p=538383 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:41:15,415 p=538383 u=ansible n=ansible | TASK [ensure selinux is enforcing] *******************************************************************************************
2021-06-14 21:41:16,079 p=538383 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:41:16,159 p=538383 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:41:16,162 p=538383 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:41:16,168 p=538383 u=ansible n=ansible | TASK [update selinux to use port 2022/tcp] ***********************************************************************************
2021-06-14 21:41:16,647 p=538383 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-14 21:41:16,703 p=538383 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-14 21:41:16,715 p=538383 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-14 21:41:16,721 p=538383 u=ansible n=ansible | TASK [open the firewall for port 2022] ***************************************************************************************
2021-06-14 21:41:17,406 p=538383 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 21:41:17,546 p=538383 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 21:41:17,546 p=538383 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:41:17,549 p=538383 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************
2021-06-14 21:41:17,549 p=538383 u=ansible n=ansible | ansible2.example.com       : ok=4    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-14 21:41:17,549 p=538383 u=ansible n=ansible | ansible3.example.com       : ok=4    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-14 21:41:17,549 p=538383 u=ansible n=ansible | ansible4.example.com       : ok=4    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-14 21:44:53,236 p=540133 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:44:53,244 p=540133 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:44:53,245 p=540133 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:44:53,270 p=540133 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:44:53,472 p=540133 u=ansible n=ansible | control.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:45:11,222 p=540485 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:45:11,227 p=540485 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:45:11,228 p=540485 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:45:11,244 p=540485 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:45:11,449 p=540485 u=ansible n=ansible | control.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:47:48,958 p=541926 u=ansible n=ansible | PLAY [task6] *****************************************************************************************************************
2021-06-14 21:47:48,966 p=541926 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************
2021-06-14 21:47:50,467 p=541926 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:47:50,482 p=541926 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:47:50,487 p=541926 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:47:50,494 p=541926 u=ansible n=ansible | TASK [task6 : copy template file] ********************************************************************************************
2021-06-14 21:47:50,652 p=541926 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'allow_users' is undefined"}
2021-06-14 21:47:50,652 p=541926 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'allow_users' is undefined"}
2021-06-14 21:47:50,658 p=541926 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'allow_users' is undefined"}
2021-06-14 21:47:50,659 p=541926 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************
2021-06-14 21:47:50,659 p=541926 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 21:47:50,659 p=541926 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 21:47:50,659 p=541926 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 21:48:37,996 p=542338 u=ansible n=ansible | PLAY [task6] *****************************************************************************************************************
2021-06-14 21:48:38,004 p=542338 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************
2021-06-14 21:48:39,108 p=542338 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:48:39,194 p=542338 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:48:39,214 p=542338 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:48:39,221 p=542338 u=ansible n=ansible | TASK [task6 : copy template file] ********************************************************************************************
2021-06-14 21:48:40,130 p=542338 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:48:40,185 p=542338 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:48:40,194 p=542338 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:48:40,200 p=542338 u=ansible n=ansible | TASK [ensure selinux is enforcing] *******************************************************************************************
2021-06-14 21:48:40,924 p=542338 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:48:40,926 p=542338 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:48:40,949 p=542338 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:48:40,955 p=542338 u=ansible n=ansible | TASK [update selinux to use port 2022/tcp] ***********************************************************************************
2021-06-14 21:48:41,407 p=542338 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-14 21:48:41,464 p=542338 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-14 21:48:41,465 p=542338 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-14 21:48:41,471 p=542338 u=ansible n=ansible | TASK [open the firewall for port 2022] ***************************************************************************************
2021-06-14 21:48:42,232 p=542338 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 21:48:42,278 p=542338 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:48:42,314 p=542338 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 21:48:42,316 p=542338 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************
2021-06-14 21:48:42,316 p=542338 u=ansible n=ansible | ansible2.example.com       : ok=4    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-14 21:48:42,316 p=542338 u=ansible n=ansible | ansible3.example.com       : ok=4    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-14 21:48:42,316 p=542338 u=ansible n=ansible | ansible4.example.com       : ok=4    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-14 21:48:47,771 p=542569 u=ansible n=ansible | PLAY [task6] *****************************************************************************************************************
2021-06-14 21:48:47,779 p=542569 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************
2021-06-14 21:48:48,915 p=542569 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:48:48,968 p=542569 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:48:48,975 p=542569 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:48:48,982 p=542569 u=ansible n=ansible | TASK [task6 : copy template file] ********************************************************************************************
2021-06-14 21:48:49,919 p=542569 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:48:49,932 p=542569 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:48:49,953 p=542569 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:48:49,959 p=542569 u=ansible n=ansible | TASK [ensure selinux is enforcing] *******************************************************************************************
2021-06-14 21:48:50,650 p=542569 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:48:50,709 p=542569 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:48:50,716 p=542569 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:48:50,723 p=542569 u=ansible n=ansible | TASK [update selinux to use port 2022/tcp] ***********************************************************************************
2021-06-14 21:48:52,301 p=542569 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": true, "cmd": ["semanage", "port", "-a", "-t", "ssh_port_t", "-p", "tcp", "2022"], "delta": "0:00:01.075067", "end": "2021-06-14 21:48:52.254415", "msg": "non-zero return code", "rc": 1, "start": "2021-06-14 21:48:51.179348", "stderr": "ValueError: Port tcp/2022 already defined", "stderr_lines": ["ValueError: Port tcp/2022 already defined"], "stdout": "", "stdout_lines": []}
2021-06-14 21:48:53,173 p=542569 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": true, "cmd": ["semanage", "port", "-a", "-t", "ssh_port_t", "-p", "tcp", "2022"], "delta": "0:00:01.657705", "end": "2021-06-14 21:48:52.867463", "msg": "non-zero return code", "rc": 1, "start": "2021-06-14 21:48:51.209758", "stderr": "ValueError: Port tcp/2022 already defined", "stderr_lines": ["ValueError: Port tcp/2022 already defined"], "stdout": "", "stdout_lines": []}
2021-06-14 21:48:55,104 p=542569 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": true, "cmd": ["semanage", "port", "-a", "-t", "ssh_port_t", "-p", "tcp", "2022"], "delta": "0:00:03.818145", "end": "2021-06-14 21:48:54.956660", "msg": "non-zero return code", "rc": 1, "start": "2021-06-14 21:48:51.138515", "stderr": "ValueError: Port tcp/2022 already defined", "stderr_lines": ["ValueError: Port tcp/2022 already defined"], "stdout": "", "stdout_lines": []}
2021-06-14 21:48:55,105 p=542569 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************
2021-06-14 21:48:55,106 p=542569 u=ansible n=ansible | ansible2.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 21:48:55,106 p=542569 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 21:48:55,106 p=542569 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-14 21:49:08,690 p=542843 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:49:08,881 p=542843 u=ansible n=ansible | control.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:49:08,888 p=542843 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:49:09,211 p=542843 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:49:09,235 p=542843 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:50:52,489 p=543814 u=ansible n=ansible | localhost | CHANGED | rc=0 >>
#	$OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

# If you want to change the port on a SELinux system, you have to tell
# SELinux about this change.
# semanage port -a -t ssh_port_t -p tcp #PORTNUMBER
#
#Port 22
#AddressFamily any
#ListenAddress 0.0.0.0
#ListenAddress ::

HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key

# Ciphers and keying
#RekeyLimit default none

# System-wide Crypto policy:
# This system is following system-wide crypto policy. The changes to
# Ciphers, MACs, KexAlgoritms and GSSAPIKexAlgorithsm will not have any
# effect here. They will be overridden by command-line options passed on
# the server start up.
# To opt out, uncomment a line with redefinition of  CRYPTO_POLICY=
# variable in  /etc/sysconfig/sshd  to overwrite the policy.
# For more information, see manual page for update-crypto-policies(8).

# Logging
#SyslogFacility AUTH
SyslogFacility AUTHPRIV
#LogLevel INFO

# Authentication:

#LoginGraceTime 2m
PermitRootLogin yes
#StrictModes yes
#MaxAuthTries 6
#MaxSessions 10

#PubkeyAuthentication yes

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
AuthorizedKeysFile	.ssh/authorized_keys

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
#PasswordAuthentication yes
#PermitEmptyPasswords no
PasswordAuthentication yes

# Change to no to disable s/key passwords
#ChallengeResponseAuthentication yes
ChallengeResponseAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no
#KerberosUseKuserok yes

# GSSAPI options
GSSAPIAuthentication yes
GSSAPICleanupCredentials no
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no
#GSSAPIEnablek5users no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
# WARNING: 'UsePAM no' is not supported in Fedora and may cause several
# problems.
UsePAM yes

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
X11Forwarding yes
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes

# It is recommended to use pam_motd in /etc/pam.d/sshd instead of PrintMotd,
# as it is more configurable and versatile than the built-in version.
PrintMotd no

#PrintLastLog yes
#TCPKeepAlive yes
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#UseDNS no
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# Accept locale-related environment variables
AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE
AcceptEnv XMODIFIERS

# override default of no subsystems
Subsystem	sftp	/usr/libexec/openssh/sftp-server

# Example of overriding settings on a per-user basis
#Match User anoncvs
#	X11Forwarding no
#	AllowTcpForwarding no
#	PermitTTY no
#	ForceCommand cvs server

2021-06-14 21:53:31,339 p=544950 u=ansible n=ansible | PLAY [task6] *****************************************************************************************************************
2021-06-14 21:53:31,347 p=544950 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************
2021-06-14 21:53:32,759 p=544950 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:53:32,909 p=544950 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:53:33,008 p=544950 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:53:33,015 p=544950 u=ansible n=ansible | TASK [task6 : copy template file] ********************************************************************************************
2021-06-14 21:53:33,903 p=544950 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:53:33,951 p=544950 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:53:33,968 p=544950 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:53:33,974 p=544950 u=ansible n=ansible | TASK [ensure selinux is enforcing] *******************************************************************************************
2021-06-14 21:53:34,639 p=544950 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:53:34,709 p=544950 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:53:34,719 p=544950 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:53:34,725 p=544950 u=ansible n=ansible | TASK [update selinux to use port 2022/tcp] ***********************************************************************************
2021-06-14 21:53:35,781 p=544950 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:53:36,153 p=544950 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:53:36,219 p=544950 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:53:36,225 p=544950 u=ansible n=ansible | TASK [open the firewall for port 2022] ***************************************************************************************
2021-06-14 21:53:36,949 p=544950 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 21:53:37,011 p=544950 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:53:37,028 p=544950 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 21:53:37,030 p=544950 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************
2021-06-14 21:53:37,030 p=544950 u=ansible n=ansible | ansible2.example.com       : ok=5    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 21:53:37,030 p=544950 u=ansible n=ansible | ansible3.example.com       : ok=5    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 21:53:37,030 p=544950 u=ansible n=ansible | ansible4.example.com       : ok=5    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 21:53:41,996 p=545197 u=ansible n=ansible | PLAY [task6] *****************************************************************************************************************
2021-06-14 21:53:42,004 p=545197 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************
2021-06-14 21:53:43,066 p=545197 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:53:43,171 p=545197 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:53:43,186 p=545197 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:53:43,193 p=545197 u=ansible n=ansible | TASK [task6 : copy template file] ********************************************************************************************
2021-06-14 21:53:44,094 p=545197 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:53:44,141 p=545197 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:53:44,146 p=545197 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:53:44,152 p=545197 u=ansible n=ansible | TASK [ensure selinux is enforcing] *******************************************************************************************
2021-06-14 21:53:44,841 p=545197 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:53:44,866 p=545197 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:53:44,887 p=545197 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:53:44,894 p=545197 u=ansible n=ansible | TASK [update selinux to use port 2022/tcp] ***********************************************************************************
2021-06-14 21:53:45,993 p=545197 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:53:46,031 p=545197 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:53:46,146 p=545197 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:53:46,152 p=545197 u=ansible n=ansible | TASK [open the firewall for port 2022] ***************************************************************************************
2021-06-14 21:53:46,922 p=545197 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:53:46,972 p=545197 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 21:53:46,982 p=545197 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 21:53:46,984 p=545197 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************
2021-06-14 21:53:46,984 p=545197 u=ansible n=ansible | ansible2.example.com       : ok=5    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 21:53:46,984 p=545197 u=ansible n=ansible | ansible3.example.com       : ok=5    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 21:53:46,984 p=545197 u=ansible n=ansible | ansible4.example.com       : ok=5    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 21:56:12,631 p=546426 u=ansible n=ansible | ERROR! conflicting action statements: template, handlers

The error appears to be in '/home/ansible/task6/tasks/main.yml': line 2, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

---
- name: copy template file
  ^ here

2021-06-14 21:56:48,500 p=546678 u=ansible n=ansible | ERROR! conflicting action statements: template, handlers

The error appears to be in '/home/ansible/task6/tasks/main.yml': line 2, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

---
- name: copy template file
  ^ here

2021-06-14 21:57:11,706 p=546846 u=ansible n=ansible | ERROR! unexpected parameter type in action: <class 'ansible.parsing.yaml.objects.AnsibleSequence'>

The error appears to be in '/home/ansible/task6/tasks/main.yml': line 9, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- handlers:
  ^ here

2021-06-14 21:57:22,391 p=546930 u=ansible n=ansible | ERROR! conflicting action statements: template, handlers

The error appears to be in '/home/ansible/task6/tasks/main.yml': line 2, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

---
- name: copy template file
  ^ here

2021-06-14 21:57:25,678 p=546958 u=ansible n=ansible | ERROR! conflicting action statements: template, handlers

The error appears to be in '/home/ansible/task6/tasks/main.yml': line 2, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

---
- name: copy template file
  ^ here

2021-06-14 21:57:42,533 p=547084 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  mapping values are not allowed in this context

The error appears to be in '/home/ansible/task6/tasks/main.yml': line 8, column 12, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

- name: restart ssh
    service:
           ^ here

2021-06-14 21:58:15,833 p=547323 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  mapping values are not allowed in this context

The error appears to be in '/home/ansible/task6/tasks/main.yml': line 8, column 12, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  name: restart ssh
    service:
           ^ here

2021-06-14 21:58:35,207 p=547463 u=ansible n=ansible | PLAY [task6] *****************************************************************************************************************
2021-06-14 21:58:35,215 p=547463 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************
2021-06-14 21:58:36,668 p=547463 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:58:36,707 p=547463 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:58:36,720 p=547463 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:58:36,727 p=547463 u=ansible n=ansible | TASK [task6 : copy template file] ********************************************************************************************
2021-06-14 21:58:37,620 p=547463 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:58:37,626 p=547463 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:58:37,646 p=547463 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:58:37,652 p=547463 u=ansible n=ansible | TASK [task6 : restart ssh] ***************************************************************************************************
2021-06-14 21:58:38,366 p=547463 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-14 21:58:38,546 p=547463 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 21:58:38,568 p=547463 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 21:58:38,574 p=547463 u=ansible n=ansible | TASK [ensure selinux is enforcing] *******************************************************************************************
2021-06-14 21:58:39,258 p=547463 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:58:39,296 p=547463 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:58:39,333 p=547463 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:58:39,339 p=547463 u=ansible n=ansible | TASK [update selinux to use port 2022/tcp] ***********************************************************************************
2021-06-14 21:58:40,528 p=547463 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:58:40,615 p=547463 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:58:40,623 p=547463 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:58:40,629 p=547463 u=ansible n=ansible | TASK [open the firewall for port 2022] ***************************************************************************************
2021-06-14 21:58:41,339 p=547463 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:58:41,425 p=547463 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:58:41,449 p=547463 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:58:41,450 p=547463 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************
2021-06-14 21:58:41,450 p=547463 u=ansible n=ansible | ansible2.example.com       : ok=6    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 21:58:41,450 p=547463 u=ansible n=ansible | ansible3.example.com       : ok=6    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 21:58:41,450 p=547463 u=ansible n=ansible | ansible4.example.com       : ok=6    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 21:58:49,078 p=547751 u=ansible n=ansible | control.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:58:49,168 p=547751 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:58:49,220 p=547751 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:58:49,266 p=547751 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:58:49,268 p=547751 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:59:02,199 p=548066 u=ansible n=ansible | PLAY [task6] *****************************************************************************************************************
2021-06-14 21:59:02,206 p=548066 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************
2021-06-14 21:59:03,361 p=548066 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:59:03,401 p=548066 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:59:03,411 p=548066 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:59:03,418 p=548066 u=ansible n=ansible | TASK [task6 : copy template file] ********************************************************************************************
2021-06-14 21:59:04,322 p=548066 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:59:04,338 p=548066 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:59:04,352 p=548066 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:59:04,358 p=548066 u=ansible n=ansible | TASK [task6 : restart ssh] ***************************************************************************************************
2021-06-14 21:59:05,083 p=548066 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-14 21:59:05,168 p=548066 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 21:59:05,174 p=548066 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 21:59:05,180 p=548066 u=ansible n=ansible | TASK [ensure selinux is enforcing] *******************************************************************************************
2021-06-14 21:59:05,863 p=548066 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:59:05,913 p=548066 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:59:05,925 p=548066 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:59:05,931 p=548066 u=ansible n=ansible | TASK [update selinux to use port 2022/tcp] ***********************************************************************************
2021-06-14 21:59:06,978 p=548066 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:59:07,129 p=548066 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:59:07,184 p=548066 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:59:07,190 p=548066 u=ansible n=ansible | TASK [open the firewall for port 2022] ***************************************************************************************
2021-06-14 21:59:07,899 p=548066 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:59:07,987 p=548066 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:59:07,993 p=548066 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:59:07,995 p=548066 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************
2021-06-14 21:59:07,995 p=548066 u=ansible n=ansible | ansible2.example.com       : ok=6    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 21:59:07,995 p=548066 u=ansible n=ansible | ansible3.example.com       : ok=6    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 21:59:07,995 p=548066 u=ansible n=ansible | ansible4.example.com       : ok=6    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 21:59:10,492 p=548310 u=ansible n=ansible | PLAY [task6] *****************************************************************************************************************
2021-06-14 21:59:10,500 p=548310 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************
2021-06-14 21:59:11,601 p=548310 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:59:11,665 p=548310 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:59:11,688 p=548310 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:59:11,695 p=548310 u=ansible n=ansible | TASK [task6 : copy template file] ********************************************************************************************
2021-06-14 21:59:12,588 p=548310 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:59:12,620 p=548310 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:59:12,639 p=548310 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:59:12,645 p=548310 u=ansible n=ansible | TASK [task6 : restart ssh] ***************************************************************************************************
2021-06-14 21:59:13,368 p=548310 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-14 21:59:13,925 p=548310 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 21:59:13,944 p=548310 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 21:59:13,950 p=548310 u=ansible n=ansible | TASK [ensure selinux is enforcing] *******************************************************************************************
2021-06-14 21:59:14,651 p=548310 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:59:14,682 p=548310 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:59:14,700 p=548310 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:59:14,707 p=548310 u=ansible n=ansible | TASK [update selinux to use port 2022/tcp] ***********************************************************************************
2021-06-14 21:59:15,772 p=548310 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:59:15,908 p=548310 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:59:15,959 p=548310 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:59:15,965 p=548310 u=ansible n=ansible | TASK [open the firewall for port 2022] ***************************************************************************************
2021-06-14 21:59:16,730 p=548310 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 21:59:16,759 p=548310 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 21:59:16,760 p=548310 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 21:59:16,762 p=548310 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************
2021-06-14 21:59:16,762 p=548310 u=ansible n=ansible | ansible2.example.com       : ok=6    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 21:59:16,762 p=548310 u=ansible n=ansible | ansible3.example.com       : ok=6    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 21:59:16,762 p=548310 u=ansible n=ansible | ansible4.example.com       : ok=6    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 21:59:20,216 p=548561 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:59:20,247 p=548561 u=ansible n=ansible | control.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:59:20,279 p=548561 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:59:20,363 p=548561 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:59:20,447 p=548561 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:59:57,084 p=549024 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:59:57,085 p=549024 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:59:57,109 p=549024 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:59:57,125 p=549024 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 21:59:57,292 p=549024 u=ansible n=ansible | control.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 22:03:05,348 p=550565 u=ansible n=ansible | PLAY [task6] *****************************************************************************************************************
2021-06-14 22:03:05,356 p=550565 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************
2021-06-14 22:03:05,394 p=550565 u=ansible n=ansible | fatal: [ansible3.example.com]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: connect to host ansible3.example.com port 22: Connection refused", "unreachable": true}
2021-06-14 22:03:05,398 p=550565 u=ansible n=ansible | fatal: [ansible4.example.com]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: connect to host ansible4.example.com port 22: Connection refused", "unreachable": true}
2021-06-14 22:03:06,552 p=550565 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 22:03:06,559 p=550565 u=ansible n=ansible | TASK [task6 : copy template file] ********************************************************************************************
2021-06-14 22:03:07,266 p=550565 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 22:03:07,273 p=550565 u=ansible n=ansible | TASK [task6 : restart ssh] ***************************************************************************************************
2021-06-14 22:03:07,838 p=550565 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-14 22:03:07,845 p=550565 u=ansible n=ansible | TASK [ensure selinux is enforcing] *******************************************************************************************
2021-06-14 22:03:08,376 p=550565 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 22:03:08,382 p=550565 u=ansible n=ansible | TASK [update selinux to use port 2022/tcp] ***********************************************************************************
2021-06-14 22:03:09,272 p=550565 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 22:03:09,278 p=550565 u=ansible n=ansible | TASK [open the firewall for port 2022] ***************************************************************************************
2021-06-14 22:03:09,826 p=550565 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 22:03:09,827 p=550565 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************
2021-06-14 22:03:09,828 p=550565 u=ansible n=ansible | ansible2.example.com       : ok=6    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 22:03:09,828 p=550565 u=ansible n=ansible | ansible3.example.com       : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 22:03:09,828 p=550565 u=ansible n=ansible | ansible4.example.com       : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 22:04:49,296 p=551366 u=ansible n=ansible | ansible4.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ssh: connect to host ansible4.example.com port 22: Connection refused",
    "unreachable": true
}
2021-06-14 22:04:49,305 p=551366 u=ansible n=ansible | ansible3.example.com | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ssh: connect to host ansible3.example.com port 22: Connection refused",
    "unreachable": true
}
2021-06-14 22:04:50,077 p=551366 u=ansible n=ansible | control.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 22:04:50,162 p=551366 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 22:04:50,170 p=551366 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 22:06:26,988 p=552256 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 22:06:26,993 p=552256 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 22:06:27,004 p=552256 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 22:06:27,011 p=552256 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 22:06:27,186 p=552256 u=ansible n=ansible | control.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 22:06:53,911 p=552672 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 22:06:58,297 p=552726 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 22:08:21,447 p=553370 u=ansible n=ansible | PLAY [task6] *****************************************************************************************************************
2021-06-14 22:08:21,455 p=553370 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************
2021-06-14 22:08:22,948 p=553370 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 22:08:22,957 p=553370 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 22:08:22,979 p=553370 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 22:08:22,986 p=553370 u=ansible n=ansible | TASK [task6 : copy template file] ********************************************************************************************
2021-06-14 22:08:23,912 p=553370 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 22:08:23,958 p=553370 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 22:08:23,963 p=553370 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 22:08:23,969 p=553370 u=ansible n=ansible | TASK [task6 : restart ssh] ***************************************************************************************************
2021-06-14 22:08:24,695 p=553370 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-14 22:08:24,776 p=553370 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 22:08:24,777 p=553370 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 22:08:24,783 p=553370 u=ansible n=ansible | TASK [ensure selinux is enforcing] *******************************************************************************************
2021-06-14 22:08:25,498 p=553370 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 22:08:25,521 p=553370 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 22:08:25,531 p=553370 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 22:08:25,537 p=553370 u=ansible n=ansible | TASK [update selinux to use port 2022/tcp] ***********************************************************************************
2021-06-14 22:08:26,648 p=553370 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 22:08:26,824 p=553370 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 22:08:26,843 p=553370 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 22:08:26,849 p=553370 u=ansible n=ansible | TASK [open the firewall for port 2022] ***************************************************************************************
2021-06-14 22:08:27,535 p=553370 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 22:08:27,617 p=553370 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 22:08:27,699 p=553370 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 22:08:27,706 p=553370 u=ansible n=ansible | TASK [reload the firewalld service] ******************************************************************************************
2021-06-14 22:08:28,337 p=553370 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-14 22:08:28,342 p=553370 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 22:08:28,370 p=553370 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 22:08:28,371 p=553370 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************
2021-06-14 22:08:28,371 p=553370 u=ansible n=ansible | ansible2.example.com       : ok=7    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 22:08:28,371 p=553370 u=ansible n=ansible | ansible3.example.com       : ok=7    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 22:08:28,371 p=553370 u=ansible n=ansible | ansible4.example.com       : ok=7    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 22:08:31,271 p=553657 u=ansible n=ansible | PLAY [task6] *****************************************************************************************************************
2021-06-14 22:08:31,278 p=553657 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************
2021-06-14 22:08:32,418 p=553657 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 22:08:32,489 p=553657 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 22:08:32,717 p=553657 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 22:08:32,724 p=553657 u=ansible n=ansible | TASK [task6 : copy template file] ********************************************************************************************
2021-06-14 22:08:33,598 p=553657 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 22:08:33,643 p=553657 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 22:08:33,664 p=553657 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 22:08:33,671 p=553657 u=ansible n=ansible | TASK [task6 : restart ssh] ***************************************************************************************************
2021-06-14 22:08:34,498 p=553657 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-14 22:08:34,501 p=553657 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 22:08:34,511 p=553657 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 22:08:34,517 p=553657 u=ansible n=ansible | TASK [ensure selinux is enforcing] *******************************************************************************************
2021-06-14 22:08:35,164 p=553657 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 22:08:35,258 p=553657 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 22:08:35,272 p=553657 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 22:08:35,278 p=553657 u=ansible n=ansible | TASK [update selinux to use port 2022/tcp] ***********************************************************************************
2021-06-14 22:08:36,424 p=553657 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 22:08:36,455 p=553657 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 22:08:36,561 p=553657 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 22:08:36,568 p=553657 u=ansible n=ansible | TASK [open the firewall for port 2022] ***************************************************************************************
2021-06-14 22:08:37,288 p=553657 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-14 22:08:37,348 p=553657 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-14 22:08:37,391 p=553657 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-14 22:08:37,397 p=553657 u=ansible n=ansible | TASK [reload the firewalld service] ******************************************************************************************
2021-06-14 22:08:39,255 p=553657 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-14 22:08:39,361 p=553657 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-14 22:08:39,393 p=553657 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-14 22:08:39,395 p=553657 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************
2021-06-14 22:08:39,395 p=553657 u=ansible n=ansible | ansible2.example.com       : ok=7    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 22:08:39,395 p=553657 u=ansible n=ansible | ansible3.example.com       : ok=7    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 22:08:39,395 p=553657 u=ansible n=ansible | ansible4.example.com       : ok=7    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-14 22:08:49,880 p=553998 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 22:08:49,918 p=553998 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-14 22:08:49,939 p=553998 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-15 07:49:52,092 p=576441 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-15 07:49:52,095 p=576441 u=ansible n=ansible | ansible3.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-15 07:49:52,104 p=576441 u=ansible n=ansible | ansible2.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-15 07:49:52,150 p=576441 u=ansible n=ansible | ansible4.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-15 07:49:52,321 p=576441 u=ansible n=ansible | control.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "ping": "pong"
}
2021-06-15 08:12:17,555 p=586065 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  mapping values are not allowed in this context

The error appears to be in '/home/ansible/task7-1-server.yml': line 3, column 8, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

- name setup web server
  hosts: webservers
       ^ here

2021-06-15 08:12:36,199 p=586198 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  mapping values are not allowed in this context

The error appears to be in '/home/ansible/task7-1-server.yml': line 3, column 7, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

- name setup web server
  host: webservers
      ^ here

2021-06-15 08:13:03,804 p=586434 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  found unacceptable key (unhashable type: 'AnsibleMapping')

The error appears to be in '/home/ansible/task7-1-server.yml': line 11, column 16, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      package:
        name: {{ web_package }}
               ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes. Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2021-06-15 08:13:30,274 p=586623 u=ansible n=ansible | PLAY [setup web server] *****************************************************************************************
2021-06-15 08:13:30,282 p=586623 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 08:13:31,592 p=586623 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:13:31,600 p=586623 u=ansible n=ansible | TASK [install the web server] ***********************************************************************************
2021-06-15 08:13:32,838 p=586623 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:13:32,839 p=586623 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 08:13:32,839 p=586623 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 08:17:18,683 p=588249 u=ansible n=ansible | ERROR! No argument passed to command module
2021-06-15 08:17:35,511 p=588329 u=ansible n=ansible | localhost | CHANGED => {
    "changed": true,
    "msg": "",
    "rc": 0,
    "results": [
        "Installed: apr-1.6.3-11.el8.x86_64",
        "Installed: apr-util-bdb-1.6.1-6.el8.x86_64",
        "Installed: apr-util-1.6.1-6.el8.x86_64",
        "Installed: apr-util-openssl-1.6.1-6.el8.x86_64",
        "Installed: httpd-2.4.37-39.module+el8.4.0+9658+b87b2deb.x86_64",
        "Installed: mod_http2-1.15.7-3.module+el8.4.0+8625+d397f3da.x86_64",
        "Installed: redhat-logos-httpd-84.4-1.el8.noarch",
        "Installed: httpd-tools-2.4.37-39.module+el8.4.0+9658+b87b2deb.x86_64",
        "Installed: httpd-filesystem-2.4.37-39.module+el8.4.0+9658+b87b2deb.noarch"
    ]
}
2021-06-15 08:23:43,702 p=614360 u=ansible n=ansible | localhost | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.200"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::d0eb:2348:63a1:cb77"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel/swap",
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_date_time": {
            "date": "2021-06-15",
            "day": "15",
            "epoch": "1623759823",
            "hour": "08",
            "iso8601": "2021-06-15T12:23:43Z",
            "iso8601_basic": "20210615T082343231169",
            "iso8601_basic_short": "20210615T082343",
            "iso8601_micro": "2021-06-15T12:23:43.231169Z",
            "minute": "23",
            "month": "06",
            "second": "43",
            "time": "08:23:43",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Tuesday",
            "weekday_number": "2",
            "weeknumber": "24",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.200",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:72:63:77",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel-root",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                ],
                "dm-1": [
                    "dm-name-rhel-swap",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                ],
                "sda3": [
                    "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "e582775b-f787-42fb-a7da-e66ffb7a210a"
                ],
                "dm-1": [
                    "521d3469-ac8d-490e-9c79-a6fd59024de4"
                ],
                "sda1": [
                    "6723-A89C"
                ],
                "sda2": [
                    "1e4b2b4a-ea26-430e-978c-de3884071e82"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-root",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "e582775b-f787-42fb-a7da-e66ffb7a210a"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-swap",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "521d3469-ac8d-490e-9c79-a6fd59024de4"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "6723-A89C"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "6723-A89C"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "1e4b2b4a-ea26-430e-978c-de3884071e82"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
                    },
                    "sda3": {
                        "holders": [
                            "rhel-swap",
                            "rhel-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "on",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.200",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::d0eb:2348:63a1:cb77",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:72:63:77",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HISTSIZE": "1000",
            "HOME": "/root",
            "HOSTNAME": "control.example.com",
            "LANG": "en_US.UTF-8",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/spool/mail/ansible",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-enorimplufgfdtihcqdurhknzoqglncv ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1623759822.8136518-614366-127686564418172/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "control.example.com",
        "ansible_hostname": "control",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "lo",
            "ens192"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:9a8e963cc88",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel"
                }
            },
            "vgs": {
                "rhel": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "36e2124a40614e3796fa06fcece0515e",
        "ansible_memfree_mb": 939,
        "ansible_memory_mb": {
            "nocache": {
                "free": 1454,
                "used": 372
            },
            "real": {
                "free": 939,
                "total": 1826,
                "used": 887
            },
            "swap": {
                "cached": 0,
                "free": 2047,
                "total": 2047,
                "used": 0
            }
        },
        "ansible_memtotal_mb": 1826,
        "ansible_mounts": [
            {
                "block_available": 3730320,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 568944,
                "device": "/dev/mapper/rhel-root",
                "fstype": "xfs",
                "inode_available": 8542104,
                "inode_total": 8603648,
                "inode_used": 61544,
                "mount": "/",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 15279390720,
                "size_total": 17609785344,
                "uuid": "e582775b-f787-42fb-a7da-e66ffb7a210a"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "6723-A89C"
            },
            {
                "block_available": 0,
                "block_size": 2048,
                "block_total": 4119280,
                "block_used": 4119280,
                "device": "/dev/sr0",
                "fstype": "iso9660",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/var/ftp/repo",
                "options": "ro,relatime,nojoliet,check=s,map=n,blocksize=2048",
                "size_available": 0,
                "size_total": 8436285440,
                "uuid": "2020-04-04-08-21-15-00"
            }
        ],
        "ansible_nodename": "control.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel/root",
                "rhel/swap"
            ],
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz",
            "1",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 2,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 2,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d 94 78 3e 53 21 2f-3c a5 64 70 c9 72 63 77",
        "ansible_product_uuid": "78944d56-533e-2f21-3ca5-6470c9726377",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "status": "disabled"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNhudUrTlfCgvAC31V1YPiPwqZKT7aFesPRbEGXj9B4esh+OI7dNbiUJPoteI+AqIZRzShz0BsfOtvfZux0v/dY=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIFC1LRLHGmTZfUEs+knXPYfQFkHnOTUCDib6l7DGR1F6",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQDTuLOzAeNf8ZQj8Qu64SLTprDRnagiihI/gUAzQX5NR8mkfVecF3591Hw0bY7d4OYL2GSa22Q97lWpSRMZzEe5kd0cIFTTg/coqMIK/VOKJvQarjnjj7rnrLnG8WJprf6kxITc7AuIWXTeD/vqgs/lBcdbD77PBXAShSj1dFD6qej4G7zOpo4OeQ0EWjbDQaRCqBWcTbaGEs2TpvIacfKSlWQ/tIvmcJQ2sVHqiGJ/AkRLMn4AHoKi5t7RKWT7HHhnc7ZDu686KGiplcSsiF/T37b6WneuS96tLNTUYbpT4Ot2zrYFYbo0YwRuzM1Jwpa/f3x0hoY7Lak/o3j6lDv5y9AhwhytPAKz8da2FLi2sna2Ve7913M9GMSiP41fRHnoLsqMy89IHDLm8vkJUjZxzRo7e4i4K5mXK/My7V5nGc3J8bJrmXCEzDDJfS42MuCmINcuz2MCjuvduwCrXroDHqrHMe306r1F9TQTeWlIJNSBwAuuC+FN8zVhlkJRiqc=",
        "ansible_swapfree_mb": 2047,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 845822,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-15 08:23:49,066 p=614456 u=ansible n=ansible | localhost | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.200"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::d0eb:2348:63a1:cb77"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel/swap",
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_date_time": {
            "date": "2021-06-15",
            "day": "15",
            "epoch": "1623759828",
            "hour": "08",
            "iso8601": "2021-06-15T12:23:48Z",
            "iso8601_basic": "20210615T082348775517",
            "iso8601_basic_short": "20210615T082348",
            "iso8601_micro": "2021-06-15T12:23:48.775517Z",
            "minute": "23",
            "month": "06",
            "second": "48",
            "time": "08:23:48",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Tuesday",
            "weekday_number": "2",
            "weeknumber": "24",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.200",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:72:63:77",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel-root",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                ],
                "dm-1": [
                    "dm-name-rhel-swap",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                ],
                "sda3": [
                    "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "e582775b-f787-42fb-a7da-e66ffb7a210a"
                ],
                "dm-1": [
                    "521d3469-ac8d-490e-9c79-a6fd59024de4"
                ],
                "sda1": [
                    "6723-A89C"
                ],
                "sda2": [
                    "1e4b2b4a-ea26-430e-978c-de3884071e82"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-root",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "e582775b-f787-42fb-a7da-e66ffb7a210a"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-swap",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "521d3469-ac8d-490e-9c79-a6fd59024de4"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "6723-A89C"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "6723-A89C"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "1e4b2b4a-ea26-430e-978c-de3884071e82"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
                    },
                    "sda3": {
                        "holders": [
                            "rhel-swap",
                            "rhel-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "on",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.200",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::d0eb:2348:63a1:cb77",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:72:63:77",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HISTSIZE": "1000",
            "HOME": "/root",
            "HOSTNAME": "control.example.com",
            "LANG": "en_US.UTF-8",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/spool/mail/ansible",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-ajattpjunppavizkzzohhaufkotmdmyq ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1623759828.3709338-614470-160959197814458/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "control.example.com",
        "ansible_hostname": "control",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "lo",
            "ens192"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:9a8e963cc88",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel"
                }
            },
            "vgs": {
                "rhel": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "36e2124a40614e3796fa06fcece0515e",
        "ansible_memfree_mb": 939,
        "ansible_memory_mb": {
            "nocache": {
                "free": 1454,
                "used": 372
            },
            "real": {
                "free": 939,
                "total": 1826,
                "used": 887
            },
            "swap": {
                "cached": 0,
                "free": 2047,
                "total": 2047,
                "used": 0
            }
        },
        "ansible_memtotal_mb": 1826,
        "ansible_mounts": [
            {
                "block_available": 3730243,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 569021,
                "device": "/dev/mapper/rhel-root",
                "fstype": "xfs",
                "inode_available": 8542104,
                "inode_total": 8603648,
                "inode_used": 61544,
                "mount": "/",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 15279075328,
                "size_total": 17609785344,
                "uuid": "e582775b-f787-42fb-a7da-e66ffb7a210a"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "6723-A89C"
            },
            {
                "block_available": 0,
                "block_size": 2048,
                "block_total": 4119280,
                "block_used": 4119280,
                "device": "/dev/sr0",
                "fstype": "iso9660",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/var/ftp/repo",
                "options": "ro,relatime,nojoliet,check=s,map=n,blocksize=2048",
                "size_available": 0,
                "size_total": 8436285440,
                "uuid": "2020-04-04-08-21-15-00"
            }
        ],
        "ansible_nodename": "control.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel/root",
                "rhel/swap"
            ],
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz",
            "1",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 2,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 2,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d 94 78 3e 53 21 2f-3c a5 64 70 c9 72 63 77",
        "ansible_product_uuid": "78944d56-533e-2f21-3ca5-6470c9726377",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "status": "disabled"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNhudUrTlfCgvAC31V1YPiPwqZKT7aFesPRbEGXj9B4esh+OI7dNbiUJPoteI+AqIZRzShz0BsfOtvfZux0v/dY=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIFC1LRLHGmTZfUEs+knXPYfQFkHnOTUCDib6l7DGR1F6",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQDTuLOzAeNf8ZQj8Qu64SLTprDRnagiihI/gUAzQX5NR8mkfVecF3591Hw0bY7d4OYL2GSa22Q97lWpSRMZzEe5kd0cIFTTg/coqMIK/VOKJvQarjnjj7rnrLnG8WJprf6kxITc7AuIWXTeD/vqgs/lBcdbD77PBXAShSj1dFD6qej4G7zOpo4OeQ0EWjbDQaRCqBWcTbaGEs2TpvIacfKSlWQ/tIvmcJQ2sVHqiGJ/AkRLMn4AHoKi5t7RKWT7HHhnc7ZDu686KGiplcSsiF/T37b6WneuS96tLNTUYbpT4Ot2zrYFYbo0YwRuzM1Jwpa/f3x0hoY7Lak/o3j6lDv5y9AhwhytPAKz8da2FLi2sna2Ve7913M9GMSiP41fRHnoLsqMy89IHDLm8vkJUjZxzRo7e4i4K5mXK/My7V5nGc3J8bJrmXCEzDDJfS42MuCmINcuz2MCjuvduwCrXroDHqrHMe306r1F9TQTeWlIJNSBwAuuC+FN8zVhlkJRiqc=",
        "ansible_swapfree_mb": 2047,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 845828,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-15 08:24:15,962 p=614707 u=ansible n=ansible | localhost | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.200"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::d0eb:2348:63a1:cb77"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel/swap",
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_date_time": {
            "date": "2021-06-15",
            "day": "15",
            "epoch": "1623759855",
            "hour": "08",
            "iso8601": "2021-06-15T12:24:15Z",
            "iso8601_basic": "20210615T082415910263",
            "iso8601_basic_short": "20210615T082415",
            "iso8601_micro": "2021-06-15T12:24:15.910263Z",
            "minute": "24",
            "month": "06",
            "second": "15",
            "time": "08:24:15",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Tuesday",
            "weekday_number": "2",
            "weeknumber": "24",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.200",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:72:63:77",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel-root",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                ],
                "dm-1": [
                    "dm-name-rhel-swap",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                ],
                "sda3": [
                    "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "e582775b-f787-42fb-a7da-e66ffb7a210a"
                ],
                "dm-1": [
                    "521d3469-ac8d-490e-9c79-a6fd59024de4"
                ],
                "sda1": [
                    "6723-A89C"
                ],
                "sda2": [
                    "1e4b2b4a-ea26-430e-978c-de3884071e82"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-root",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "e582775b-f787-42fb-a7da-e66ffb7a210a"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-swap",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "521d3469-ac8d-490e-9c79-a6fd59024de4"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "6723-A89C"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "6723-A89C"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "1e4b2b4a-ea26-430e-978c-de3884071e82"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
                    },
                    "sda3": {
                        "holders": [
                            "rhel-swap",
                            "rhel-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "on",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.200",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::d0eb:2348:63a1:cb77",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:72:63:77",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HISTSIZE": "1000",
            "HOME": "/root",
            "HOSTNAME": "control.example.com",
            "LANG": "en_US.UTF-8",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/spool/mail/ansible",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-isrtiqeyqcefttqyhuzbltrvupuaovap ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1623759855.2577643-614721-171015904039563/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "control.example.com",
        "ansible_hostname": "control",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "lo",
            "ens192"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:9a8e963cc88",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel"
                }
            },
            "vgs": {
                "rhel": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "36e2124a40614e3796fa06fcece0515e",
        "ansible_memfree_mb": 939,
        "ansible_memory_mb": {
            "nocache": {
                "free": 1454,
                "used": 372
            },
            "real": {
                "free": 939,
                "total": 1826,
                "used": 887
            },
            "swap": {
                "cached": 0,
                "free": 2047,
                "total": 2047,
                "used": 0
            }
        },
        "ansible_memtotal_mb": 1826,
        "ansible_mounts": [
            {
                "block_available": 3730243,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 569021,
                "device": "/dev/mapper/rhel-root",
                "fstype": "xfs",
                "inode_available": 8542104,
                "inode_total": 8603648,
                "inode_used": 61544,
                "mount": "/",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 15279075328,
                "size_total": 17609785344,
                "uuid": "e582775b-f787-42fb-a7da-e66ffb7a210a"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "6723-A89C"
            },
            {
                "block_available": 0,
                "block_size": 2048,
                "block_total": 4119280,
                "block_used": 4119280,
                "device": "/dev/sr0",
                "fstype": "iso9660",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/var/ftp/repo",
                "options": "ro,relatime,nojoliet,check=s,map=n,blocksize=2048",
                "size_available": 0,
                "size_total": 8436285440,
                "uuid": "2020-04-04-08-21-15-00"
            }
        ],
        "ansible_nodename": "control.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel/root",
                "rhel/swap"
            ],
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz",
            "1",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 2,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 2,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d 94 78 3e 53 21 2f-3c a5 64 70 c9 72 63 77",
        "ansible_product_uuid": "78944d56-533e-2f21-3ca5-6470c9726377",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "status": "disabled"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNhudUrTlfCgvAC31V1YPiPwqZKT7aFesPRbEGXj9B4esh+OI7dNbiUJPoteI+AqIZRzShz0BsfOtvfZux0v/dY=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIFC1LRLHGmTZfUEs+knXPYfQFkHnOTUCDib6l7DGR1F6",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQDTuLOzAeNf8ZQj8Qu64SLTprDRnagiihI/gUAzQX5NR8mkfVecF3591Hw0bY7d4OYL2GSa22Q97lWpSRMZzEe5kd0cIFTTg/coqMIK/VOKJvQarjnjj7rnrLnG8WJprf6kxITc7AuIWXTeD/vqgs/lBcdbD77PBXAShSj1dFD6qej4G7zOpo4OeQ0EWjbDQaRCqBWcTbaGEs2TpvIacfKSlWQ/tIvmcJQ2sVHqiGJ/AkRLMn4AHoKi5t7RKWT7HHhnc7ZDu686KGiplcSsiF/T37b6WneuS96tLNTUYbpT4Ot2zrYFYbo0YwRuzM1Jwpa/f3x0hoY7Lak/o3j6lDv5y9AhwhytPAKz8da2FLi2sna2Ve7913M9GMSiP41fRHnoLsqMy89IHDLm8vkJUjZxzRo7e4i4K5mXK/My7V5nGc3J8bJrmXCEzDDJfS42MuCmINcuz2MCjuvduwCrXroDHqrHMe306r1F9TQTeWlIJNSBwAuuC+FN8zVhlkJRiqc=",
        "ansible_swapfree_mb": 2047,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 845855,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-15 08:26:03,585 p=615554 u=ansible n=ansible | PLAY [setup web server] *****************************************************************************************
2021-06-15 08:26:03,595 p=615554 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 08:26:04,912 p=615554 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:26:04,919 p=615554 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 08:26:06,147 p=615554 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:26:06,153 p=615554 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 08:26:07,169 p=615554 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:26:07,175 p=615554 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 08:26:07,775 p=615554 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:26:07,782 p=615554 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 08:26:08,184 p=615554 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:26:08,190 p=615554 u=ansible n=ansible | TASK [restart the web service] **********************************************************************************
2021-06-15 08:26:08,620 p=615554 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:26:08,621 p=615554 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 08:26:08,622 p=615554 u=ansible n=ansible | ansible1.example.com       : ok=6    changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 08:28:23,369 p=616610 u=ansible n=ansible | PLAY [setup web server] *****************************************************************************************
2021-06-15 08:28:23,377 p=616610 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 08:28:24,657 p=616610 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:28:24,668 p=616610 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 08:28:25,908 p=616610 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:28:25,915 p=616610 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 08:28:26,485 p=616610 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:28:26,492 p=616610 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 08:28:27,070 p=616610 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:28:27,076 p=616610 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 08:28:27,483 p=616610 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:28:27,490 p=616610 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 08:28:27,810 p=616610 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:28:27,817 p=616610 u=ansible n=ansible | TASK [restart the web service] **********************************************************************************
2021-06-15 08:28:28,246 p=616610 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:28:28,248 p=616610 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 08:28:28,248 p=616610 u=ansible n=ansible | ansible1.example.com       : ok=7    changed=6    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 08:29:06,654 p=616988 u=ansible n=ansible | PLAY [setup web server] *****************************************************************************************
2021-06-15 08:29:06,662 p=616988 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 08:29:07,602 p=616988 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:29:07,608 p=616988 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 08:29:08,801 p=616988 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:29:08,807 p=616988 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 08:29:09,341 p=616988 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:29:09,348 p=616988 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 08:29:09,937 p=616988 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:29:09,944 p=616988 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 08:29:10,348 p=616988 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:29:10,354 p=616988 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 08:29:10,682 p=616988 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:29:10,688 p=616988 u=ansible n=ansible | TASK [restart the web service] **********************************************************************************
2021-06-15 08:29:11,128 p=616988 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:29:11,134 p=616988 u=ansible n=ansible | TASK [wget the web service] *************************************************************************************
2021-06-15 08:29:11,522 p=616988 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-15 08:29:11,526 p=616988 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 08:29:11,526 p=616988 u=ansible n=ansible | ansible1.example.com       : ok=7    changed=6    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 08:34:56,132 p=619552 u=ansible n=ansible | PLAY [setup web server] *****************************************************************************************
2021-06-15 08:34:56,139 p=619552 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 08:34:57,472 p=619552 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:34:57,479 p=619552 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 08:34:58,707 p=619552 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:34:58,713 p=619552 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 08:34:59,277 p=619552 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:34:59,284 p=619552 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 08:34:59,877 p=619552 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:34:59,884 p=619552 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 08:35:00,284 p=619552 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:35:00,291 p=619552 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 08:35:00,621 p=619552 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:35:00,627 p=619552 u=ansible n=ansible | TASK [restart the web service] **********************************************************************************
2021-06-15 08:35:01,073 p=619552 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:35:01,080 p=619552 u=ansible n=ansible | TASK [wget the web service] *************************************************************************************
2021-06-15 08:35:01,460 p=619552 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-15 08:35:01,462 p=619552 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 08:35:01,462 p=619552 u=ansible n=ansible | ansible1.example.com       : ok=7    changed=6    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 08:35:05,108 p=619704 u=ansible n=ansible | PLAY [setup web server] *****************************************************************************************
2021-06-15 08:35:05,116 p=619704 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 08:35:06,073 p=619704 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:35:06,081 p=619704 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 08:35:12,458 p=619704 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:35:12,464 p=619704 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 08:35:13,264 p=619704 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "ERROR: Exception caught: org.fedoraproject.FirewallD1.Exception: INVALID_SERVICE: 'httpd' not among existing services Permanent operation, Services are defined by port/tcp relationship and named as they are in /etc/services (on most systems)"}
2021-06-15 08:35:13,265 p=619704 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 08:35:13,266 p=619704 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 08:35:27,084 p=619904 u=ansible n=ansible | PLAY [setup web server] *****************************************************************************************
2021-06-15 08:35:27,091 p=619904 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 08:35:27,859 p=619904 u=ansible n=ansible |  [ERROR]: User interrupted execution

2021-06-15 08:35:42,933 p=620033 u=ansible n=ansible | PLAY [setup web server] *****************************************************************************************
2021-06-15 08:35:42,940 p=620033 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 08:35:43,868 p=620033 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:35:43,875 p=620033 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 08:35:45,148 p=620033 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:35:45,154 p=620033 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 08:35:45,718 p=620033 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:35:45,725 p=620033 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 08:35:47,068 p=620033 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:35:47,074 p=620033 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 08:35:48,013 p=620033 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:35:48,020 p=620033 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 08:35:48,639 p=620033 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:35:48,645 p=620033 u=ansible n=ansible | TASK [restart the web service] **********************************************************************************
2021-06-15 08:35:49,125 p=620033 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "Unable to start service httpd: Job for httpd.service failed because the control process exited with error code.\nSee \"systemctl status httpd.service\" and \"journalctl -xe\" for details.\n"}
2021-06-15 08:35:49,126 p=620033 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 08:35:49,126 p=620033 u=ansible n=ansible | ansible1.example.com       : ok=6    changed=4    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 08:39:32,692 p=621799 u=ansible n=ansible | PLAY [setup web server] *****************************************************************************************
2021-06-15 08:39:32,700 p=621799 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 08:39:33,918 p=621799 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:39:33,925 p=621799 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 08:39:35,140 p=621799 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:39:35,147 p=621799 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 08:39:35,729 p=621799 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:39:35,736 p=621799 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 08:39:36,822 p=621799 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:39:36,829 p=621799 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 08:39:37,670 p=621799 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:39:37,676 p=621799 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 08:39:38,347 p=621799 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:39:38,354 p=621799 u=ansible n=ansible | TASK [restart the web service] **********************************************************************************
2021-06-15 08:39:38,826 p=621799 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "Unable to start service httpd: Job for httpd.service failed because the control process exited with error code.\nSee \"systemctl status httpd.service\" and \"journalctl -xe\" for details.\n"}
2021-06-15 08:39:38,827 p=621799 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 08:39:38,827 p=621799 u=ansible n=ansible | ansible1.example.com       : ok=6    changed=2    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 08:50:27,293 p=626560 u=ansible n=ansible | PLAY [setup web server] *****************************************************************************************
2021-06-15 08:50:27,301 p=626560 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 08:50:28,562 p=626560 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:50:28,569 p=626560 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 08:50:29,792 p=626560 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:50:29,799 p=626560 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 08:50:30,378 p=626560 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:50:30,385 p=626560 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 08:50:30,974 p=626560 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:50:30,981 p=626560 u=ansible n=ansible | TASK [copy over the httpd.conf file as a jinja2 template] *******************************************************
2021-06-15 08:50:31,080 p=626560 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "Could not find or access 'templates/httpd.conf.j2'\nSearched in:\n\t/home/ansible/templates/templates/httpd.conf.j2\n\t/home/ansible/templates/httpd.conf.j2\n\t/home/ansible/templates/templates/httpd.conf.j2\n\t/home/ansible/templates/httpd.conf.j2 on the Ansible Controller.\nIf you are using a module and expect the file to exist on the remote, see the remote_src option"}
2021-06-15 08:50:31,081 p=626560 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 08:50:31,082 p=626560 u=ansible n=ansible | ansible1.example.com       : ok=4    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 08:51:23,509 p=627030 u=ansible n=ansible | PLAY [setup web server] *****************************************************************************************
2021-06-15 08:51:23,517 p=627030 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 08:51:24,445 p=627030 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:51:24,452 p=627030 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 08:51:25,647 p=627030 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:51:25,655 p=627030 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 08:51:26,190 p=627030 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:51:26,197 p=627030 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 08:51:26,780 p=627030 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:51:26,787 p=627030 u=ansible n=ansible | TASK [copy over the httpd.conf file as a jinja2 template] *******************************************************
2021-06-15 08:51:27,486 p=627030 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:51:27,492 p=627030 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 08:51:27,821 p=627030 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:51:27,827 p=627030 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 08:51:28,392 p=627030 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:51:28,398 p=627030 u=ansible n=ansible | TASK [restart the web service] **********************************************************************************
2021-06-15 08:51:28,829 p=627030 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:51:28,836 p=627030 u=ansible n=ansible | TASK [wget the web service] *************************************************************************************
2021-06-15 08:51:29,222 p=627030 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-15 08:51:29,223 p=627030 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 08:51:29,223 p=627030 u=ansible n=ansible | ansible1.example.com       : ok=8    changed=3    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 08:51:32,053 p=627192 u=ansible n=ansible | PLAY [setup web server] *****************************************************************************************
2021-06-15 08:51:32,061 p=627192 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 08:51:32,993 p=627192 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:51:33,000 p=627192 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 08:51:34,180 p=627192 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:51:34,187 p=627192 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 08:51:34,724 p=627192 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:51:34,731 p=627192 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 08:51:35,817 p=627192 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:51:35,824 p=627192 u=ansible n=ansible | TASK [copy over the httpd.conf file as a jinja2 template] *******************************************************
2021-06-15 08:51:36,596 p=627192 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:51:36,602 p=627192 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 08:51:37,297 p=627192 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 08:51:37,303 p=627192 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 08:51:37,864 p=627192 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 08:51:37,871 p=627192 u=ansible n=ansible | TASK [restart the web service] **********************************************************************************
2021-06-15 08:51:38,349 p=627192 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "Unable to start service httpd: Job for httpd.service failed because the control process exited with error code.\nSee \"systemctl status httpd.service\" and \"journalctl -xe\" for details.\n"}
2021-06-15 08:51:38,350 p=627192 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 08:51:38,350 p=627192 u=ansible n=ansible | ansible1.example.com       : ok=7    changed=2    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 09:04:39,433 p=632780 u=ansible n=ansible | PLAY [setup web server] *****************************************************************************************
2021-06-15 09:04:39,441 p=632780 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 09:04:41,906 p=632780 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 09:04:41,913 p=632780 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 09:04:45,370 p=632780 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 09:04:45,376 p=632780 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 09:04:45,997 p=632780 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 09:04:46,004 p=632780 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 09:04:47,163 p=632780 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 09:04:47,170 p=632780 u=ansible n=ansible | TASK [copy over the httpd.conf file as a jinja2 template] *******************************************************
2021-06-15 09:04:48,004 p=632780 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 09:04:48,012 p=632780 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 09:04:48,574 p=632780 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 09:04:48,581 p=632780 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 09:04:49,149 p=632780 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 09:04:49,156 p=632780 u=ansible n=ansible | TASK [restart the web service] **********************************************************************************
2021-06-15 09:04:49,661 p=632780 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "Unable to start service httpd: Job for httpd.service failed because the control process exited with error code.\nSee \"systemctl status httpd.service\" and \"journalctl -xe\" for details.\n"}
2021-06-15 09:04:49,662 p=632780 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 09:04:49,663 p=632780 u=ansible n=ansible | ansible1.example.com       : ok=7    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 10:13:03,674 p=661533 u=ansible n=ansible | PLAY [setup web server] *****************************************************************************************
2021-06-15 10:13:03,681 p=661533 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 10:13:04,842 p=661533 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:13:04,849 p=661533 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 10:13:06,146 p=661533 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:13:06,154 p=661533 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 10:13:06,728 p=661533 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:13:06,736 p=661533 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 10:13:07,318 p=661533 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:13:07,325 p=661533 u=ansible n=ansible | TASK [copy over the httpd.conf file as a jinja2 template] *******************************************************
2021-06-15 10:13:07,738 p=661533 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:13:07,745 p=661533 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 10:13:08,392 p=661533 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:13:08,399 p=661533 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 10:13:08,948 p=661533 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:13:08,954 p=661533 u=ansible n=ansible | TASK [restart the web service] **********************************************************************************
2021-06-15 10:13:09,388 p=661533 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:13:09,395 p=661533 u=ansible n=ansible | TASK [wget the web service] *************************************************************************************
2021-06-15 10:13:09,772 p=661533 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-15 10:13:09,773 p=661533 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 10:13:09,773 p=661533 u=ansible n=ansible | ansible1.example.com       : ok=8    changed=3    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 10:13:12,388 p=661698 u=ansible n=ansible | PLAY [setup web server] *****************************************************************************************
2021-06-15 10:13:12,396 p=661698 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 10:13:13,352 p=661698 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:13:13,359 p=661698 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 10:13:14,539 p=661698 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:13:14,546 p=661698 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 10:13:15,078 p=661698 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:13:15,085 p=661698 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 10:13:16,134 p=661698 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:13:16,145 p=661698 u=ansible n=ansible | TASK [copy over the httpd.conf file as a jinja2 template] *******************************************************
2021-06-15 10:13:17,042 p=661698 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:13:17,048 p=661698 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 10:13:17,686 p=661698 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:13:17,692 p=661698 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 10:13:18,247 p=661698 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:13:18,253 p=661698 u=ansible n=ansible | TASK [restart the web service] **********************************************************************************
2021-06-15 10:13:19,060 p=661698 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:13:19,068 p=661698 u=ansible n=ansible | TASK [wget the web service] *************************************************************************************
2021-06-15 10:13:19,569 p=661698 u=ansible n=ansible | [WARNING]: Consider using the get_url or uri module rather than running 'wget'.  If you need to use command
because get_url or uri is insufficient you can add 'warn: false' to this command task or set
'command_warnings=False' in ansible.cfg to get rid of this message.

2021-06-15 10:13:19,569 p=661698 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:13:19,571 p=661698 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 10:13:19,571 p=661698 u=ansible n=ansible | ansible1.example.com       : ok=9    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 10:14:05,129 p=662177 u=ansible n=ansible | PLAY [setup web server] *****************************************************************************************
2021-06-15 10:14:05,136 p=662177 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 10:14:06,036 p=662177 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:14:06,043 p=662177 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 10:14:07,224 p=662177 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:14:07,242 p=662177 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 10:14:07,790 p=662177 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:14:07,797 p=662177 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 10:14:08,847 p=662177 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:14:08,854 p=662177 u=ansible n=ansible | TASK [copy over the httpd.conf file as a jinja2 template] *******************************************************
2021-06-15 10:14:09,600 p=662177 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:14:09,606 p=662177 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 10:14:10,211 p=662177 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:14:10,219 p=662177 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 10:14:10,785 p=662177 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:14:10,792 p=662177 u=ansible n=ansible | TASK [restart the web service] **********************************************************************************
2021-06-15 10:14:12,279 p=662177 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:14:12,286 p=662177 u=ansible n=ansible | TASK [wget the web service] *************************************************************************************
2021-06-15 10:14:12,673 p=662177 u=ansible n=ansible | [WARNING]: Consider using the get_url or uri module rather than running 'wget'.  If you need to use command
because get_url or uri is insufficient you can add 'warn: false' to this command task or set
'command_warnings=False' in ansible.cfg to get rid of this message.

2021-06-15 10:14:12,673 p=662177 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:14:12,675 p=662177 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 10:14:12,675 p=662177 u=ansible n=ansible | ansible1.example.com       : ok=9    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 10:16:03,136 p=663118 u=ansible n=ansible | PLAY [setup web server] *****************************************************************************************
2021-06-15 10:16:03,144 p=663118 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 10:16:04,277 p=663118 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:16:04,284 p=663118 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 10:16:05,493 p=663118 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:16:05,499 p=663118 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 10:16:06,061 p=663118 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:16:06,068 p=663118 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 10:16:07,138 p=663118 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:16:07,150 p=663118 u=ansible n=ansible | TASK [copy over the httpd.conf file as a jinja2 template] *******************************************************
2021-06-15 10:16:07,911 p=663118 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:16:07,917 p=663118 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 10:16:08,489 p=663118 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:16:08,496 p=663118 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 10:16:09,053 p=663118 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:16:09,067 p=663118 u=ansible n=ansible | TASK [restart the web service] **********************************************************************************
2021-06-15 10:16:10,563 p=663118 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:16:10,565 p=663118 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 10:16:10,565 p=663118 u=ansible n=ansible | ansible1.example.com       : ok=8    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 10:18:15,564 p=664139 u=ansible n=ansible | PLAY [setup web server] *****************************************************************************************
2021-06-15 10:18:15,572 p=664139 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 10:18:16,684 p=664139 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:18:16,692 p=664139 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 10:18:17,884 p=664139 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:18:17,890 p=664139 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 10:18:18,424 p=664139 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:18:18,431 p=664139 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 10:18:19,006 p=664139 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:18:19,013 p=664139 u=ansible n=ansible | TASK [copy over the httpd.conf file as a jinja2 template] *******************************************************
2021-06-15 10:18:19,699 p=664139 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:18:19,706 p=664139 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 10:18:20,266 p=664139 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:18:20,273 p=664139 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 10:18:20,827 p=664139 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:18:20,828 p=664139 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 10:18:20,828 p=664139 u=ansible n=ansible | ansible1.example.com       : ok=7    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 10:18:25,743 p=664297 u=ansible n=ansible | PLAY [setup web server] *****************************************************************************************
2021-06-15 10:18:25,750 p=664297 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 10:18:26,679 p=664297 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:18:26,687 p=664297 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 10:18:27,888 p=664297 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:18:27,895 p=664297 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 10:18:28,418 p=664297 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:18:28,425 p=664297 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 10:18:29,461 p=664297 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:18:29,469 p=664297 u=ansible n=ansible | TASK [copy over the httpd.conf file as a jinja2 template] *******************************************************
2021-06-15 10:18:30,215 p=664297 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:18:30,222 p=664297 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 10:18:30,774 p=664297 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:18:30,780 p=664297 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 10:18:31,327 p=664297 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:18:31,328 p=664297 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 10:18:31,328 p=664297 u=ansible n=ansible | ansible1.example.com       : ok=7    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 10:19:23,326 p=664814 u=ansible n=ansible | PLAY [setup web server] *****************************************************************************************
2021-06-15 10:19:23,334 p=664814 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 10:19:24,275 p=664814 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:19:24,281 p=664814 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 10:19:25,483 p=664814 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:19:25,489 p=664814 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 10:19:26,041 p=664814 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:19:26,047 p=664814 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 10:19:27,104 p=664814 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:19:27,111 p=664814 u=ansible n=ansible | TASK [copy over the httpd.conf file as a jinja2 template] *******************************************************
2021-06-15 10:19:27,851 p=664814 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:19:27,857 p=664814 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 10:19:28,412 p=664814 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:19:28,418 p=664814 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 10:19:29,157 p=664814 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:19:29,157 p=664814 u=ansible n=ansible | RUNNING HANDLER [restart httpd] *********************************************************************************
2021-06-15 10:19:30,655 p=664814 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:19:30,657 p=664814 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 10:19:30,657 p=664814 u=ansible n=ansible | ansible1.example.com       : ok=8    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 10:19:57,603 p=665152 u=ansible n=ansible | PLAY [setup web server] *****************************************************************************************
2021-06-15 10:19:57,611 p=665152 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 10:19:58,508 p=665152 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:19:58,514 p=665152 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 10:19:59,670 p=665152 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:19:59,677 p=665152 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 10:20:00,225 p=665152 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:20:00,234 p=665152 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 10:20:01,295 p=665152 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:20:01,303 p=665152 u=ansible n=ansible | TASK [copy over the httpd.conf file as a jinja2 template] *******************************************************
2021-06-15 10:20:02,054 p=665152 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:20:02,061 p=665152 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 10:20:02,610 p=665152 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:20:02,616 p=665152 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 10:20:03,299 p=665152 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:20:03,299 p=665152 u=ansible n=ansible | RUNNING HANDLER [restart httpd] *********************************************************************************
2021-06-15 10:20:04,799 p=665152 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:20:04,800 p=665152 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 10:20:04,801 p=665152 u=ansible n=ansible | ansible1.example.com       : ok=8    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 10:25:37,577 p=667630 u=ansible n=ansible | PLAY [setup web server] *****************************************************************************************
2021-06-15 10:25:37,585 p=667630 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 10:25:40,439 p=667630 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:25:40,446 p=667630 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 10:25:46,966 p=667630 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:25:46,973 p=667630 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 10:25:47,561 p=667630 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:25:47,567 p=667630 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 10:25:48,728 p=667630 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:25:48,735 p=667630 u=ansible n=ansible | TASK [copy over the httpd.conf file as a jinja2 template] *******************************************************
2021-06-15 10:25:49,589 p=667630 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:25:49,595 p=667630 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 10:25:50,202 p=667630 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:25:50,209 p=667630 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 10:25:50,935 p=667630 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:25:50,935 p=667630 u=ansible n=ansible | RUNNING HANDLER [restart httpd] *********************************************************************************
2021-06-15 10:25:51,812 p=667630 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:25:51,813 p=667630 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 10:25:51,813 p=667630 u=ansible n=ansible | ansible1.example.com       : ok=8    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 10:26:35,528 p=668132 u=ansible n=ansible | PLAY [setup web server] *****************************************************************************************
2021-06-15 10:26:35,535 p=668132 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 10:26:36,508 p=668132 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:26:36,515 p=668132 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 10:26:37,700 p=668132 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:26:37,707 p=668132 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 10:26:38,248 p=668132 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:26:38,256 p=668132 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 10:26:39,323 p=668132 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:26:39,331 p=668132 u=ansible n=ansible | TASK [copy over the httpd.conf file as a jinja2 template] *******************************************************
2021-06-15 10:26:40,111 p=668132 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:26:40,118 p=668132 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 10:26:40,700 p=668132 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 10:26:40,707 p=668132 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 10:26:41,408 p=668132 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:26:41,408 p=668132 u=ansible n=ansible | RUNNING HANDLER [restart httpd] *********************************************************************************
2021-06-15 10:26:43,078 p=668132 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 10:26:43,079 p=668132 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 10:26:43,080 p=668132 u=ansible n=ansible | ansible1.example.com       : ok=8    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 10:27:30,208 p=668576 u=ansible n=ansible | localhost | CHANGED => {
    "changed": true,
    "msg": "",
    "rc": 0,
    "results": [
        "Removed: mod_http2-1.15.7-3.module+el8.4.0+8625+d397f3da.x86_64",
        "Removed: httpd-2.4.37-39.module+el8.4.0+9658+b87b2deb.x86_64"
    ]
}
2021-06-15 10:27:30,514 p=668755 u=ansible n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: ansible1

2021-06-15 10:27:30,514 p=668755 u=ansible n=ansible | [WARNING]: No hosts matched, nothing to do

2021-06-15 10:28:16,086 p=669079 u=ansible n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: ansible1

2021-06-15 10:28:16,086 p=669079 u=ansible n=ansible | [WARNING]: No hosts matched, nothing to do

2021-06-15 10:28:26,831 p=669156 u=ansible n=ansible | ansible1.example.com | FAILED | rc=-1 >>
Failed to connect to the host via ssh: ssh: connect to host ansible1.example.com port 22: Connection refused

2021-06-15 10:38:59,484 p=673647 u=ansible n=ansible | PLAY [install wget, elinks, and curl] ***************************************************************************
2021-06-15 10:38:59,492 p=673647 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 10:39:00,898 p=673647 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 10:39:00,923 p=673647 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 10:39:00,930 p=673647 u=ansible n=ansible | TASK [install packages] *****************************************************************************************
2021-06-15 10:39:03,584 p=673647 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "failures": ["No package elinks available."], "msg": "Failed to install some of the specified packages", "rc": 1, "results": []}
2021-06-15 10:39:03,981 p=673647 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "failures": ["No package elinks available."], "msg": "Failed to install some of the specified packages", "rc": 1, "results": []}
2021-06-15 10:39:03,982 p=673647 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 10:39:03,982 p=673647 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 10:39:03,982 p=673647 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 10:43:15,890 p=675519 u=ansible n=ansible | PLAY [install wget, elinks, and curl] ***************************************************************************
2021-06-15 10:43:15,897 p=675519 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 10:43:17,245 p=675519 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 10:43:17,257 p=675519 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 10:43:17,263 p=675519 u=ansible n=ansible | TASK [enable codeready-builder for elink package] ***************************************************************
2021-06-15 10:43:17,682 p=675519 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "Parameter 'baseurl', 'metalink' or 'mirrorlist' is required."}
2021-06-15 10:43:17,698 p=675519 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "Parameter 'baseurl', 'metalink' or 'mirrorlist' is required."}
2021-06-15 10:43:17,699 p=675519 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 10:43:17,699 p=675519 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 10:43:17,699 p=675519 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 10:45:04,995 p=676263 u=ansible n=ansible | PLAY [install wget, elinks, and curl] ***************************************************************************
2021-06-15 10:45:05,005 p=676263 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 10:45:06,345 p=676263 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 10:45:06,362 p=676263 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 10:45:06,369 p=676263 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 10:45:06,793 p=676263 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-15 10:45:06,799 p=676263 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-15 10:45:06,805 p=676263 u=ansible n=ansible | TASK [install packages] *****************************************************************************************
2021-06-15 10:45:08,206 p=676263 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "failures": ["No package elinks available."], "msg": "Failed to install some of the specified packages", "rc": 1, "results": []}
2021-06-15 10:45:08,245 p=676263 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "failures": ["No package elinks available."], "msg": "Failed to install some of the specified packages", "rc": 1, "results": []}
2021-06-15 10:45:08,246 p=676263 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 10:45:08,246 p=676263 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 10:45:08,246 p=676263 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 10:48:37,229 p=677895 u=ansible n=ansible | PLAY [install wget, elinks, and curl] ***************************************************************************
2021-06-15 10:48:37,237 p=677895 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 10:48:38,634 p=677895 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 10:48:38,666 p=677895 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 10:48:38,673 p=677895 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 10:48:39,083 p=677895 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-15 10:48:39,088 p=677895 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-15 10:48:39,095 p=677895 u=ansible n=ansible | TASK [install packages] *****************************************************************************************
2021-06-15 10:48:40,430 p=677895 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "failures": ["No package elinks available."], "msg": "Failed to install some of the specified packages", "rc": 1, "results": []}
2021-06-15 10:48:40,535 p=677895 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "failures": ["No package elinks available."], "msg": "Failed to install some of the specified packages", "rc": 1, "results": []}
2021-06-15 10:48:40,536 p=677895 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 10:48:40,536 p=677895 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 10:48:40,537 p=677895 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 10:50:15,827 p=678657 u=ansible n=ansible | PLAY [install wget, elinks, and curl] ***************************************************************************
2021-06-15 10:50:15,834 p=678657 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 10:50:17,180 p=678657 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 10:50:17,185 p=678657 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 10:50:17,191 p=678657 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 10:50:17,624 p=678657 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-15 10:50:17,629 p=678657 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-15 10:50:17,636 p=678657 u=ansible n=ansible | TASK [install packages] *****************************************************************************************
2021-06-15 10:50:18,861 p=678657 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "failures": ["No package elinks available."], "msg": "Failed to install some of the specified packages", "rc": 1, "results": []}
2021-06-15 10:50:19,050 p=678657 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "failures": ["No package elinks available."], "msg": "Failed to install some of the specified packages", "rc": 1, "results": []}
2021-06-15 10:50:19,051 p=678657 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 10:50:19,052 p=678657 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 10:50:19,052 p=678657 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 10:50:21,588 p=678777 u=ansible n=ansible | PLAY [install wget, elinks, and curl] ***************************************************************************
2021-06-15 10:50:21,596 p=678777 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 10:50:22,643 p=678777 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 10:50:22,647 p=678777 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 10:50:22,653 p=678777 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 10:50:23,106 p=678777 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-15 10:50:23,106 p=678777 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-15 10:50:23,113 p=678777 u=ansible n=ansible | TASK [install packages] *****************************************************************************************
2021-06-15 10:50:33,263 p=678777 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-15 10:50:34,415 p=678777 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-15 10:50:34,417 p=678777 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 10:50:34,417 p=678777 u=ansible n=ansible | ansible2.example.com       : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 10:50:34,417 p=678777 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 10:50:59,520 p=679121 u=ansible n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: ansible2

2021-06-15 10:50:59,520 p=679121 u=ansible n=ansible | [WARNING]: No hosts matched, nothing to do

2021-06-15 10:51:08,085 p=679177 u=ansible n=ansible | [WARNING]: Consider using the yum, dnf or zypper module rather than running 'rpm'.  If you need to use command
because yum, dnf or zypper is insufficient you can add 'warn: false' to this command task or set
'command_warnings=False' in ansible.cfg to get rid of this message.

2021-06-15 10:51:08,085 p=679177 u=ansible n=ansible | ansible2.example.com | CHANGED | rc=0 >>
elinks-0.12-0.58.pre6.el8.x86_64

2021-06-15 11:04:59,761 p=685058 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  found unexpected end of stream

The error appears to be in '/home/ansible/task7.yml': line 18, column 1, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      static: no
      when: "'webclients' in group_names:
^ here
This one looks easy to fix. It seems that there is a value started
with a quote, and the YAML parser is expecting to see the line ended
with the same kind of quote. For instance:

    when: "ok" in result.stdout

Could be written as:

   when: '"ok" in result.stdout'

Or equivalently:

   when: "'ok' in result.stdout"

2021-06-15 11:05:25,169 p=685240 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:05:25,208 p=685240 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:05:25,215 p=685240 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:05:27,167 p=685240 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:05:27,182 p=685240 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:05:27,477 p=685240 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:05:27,852 p=685240 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:05:27,957 p=685240 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:05:27,965 p=685240 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:05:27,997 p=685240 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:05:28,007 p=685240 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:05:28,007 p=685240 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:05:28,008 p=685240 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:05:28,013 p=685240 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:05:28,019 p=685240 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:05:28,073 p=685240 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:05:28,087 p=685240 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:05:28,089 p=685240 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:05:28,108 p=685240 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:05:28,114 p=685240 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "Could not find or access '/home/ansible/task7-server.yml' on the Ansible Controller."}
2021-06-15 11:05:28,120 p=685240 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:05:28,142 p=685240 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:05:28,153 p=685240 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:05:28,153 p=685240 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:05:28,158 p=685240 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:05:28,164 p=685240 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:05:28,212 p=685240 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:05:28,226 p=685240 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:05:28,238 p=685240 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"reason": "Could not find or access '/home/ansible/task7-client.yml' on the Ansible Controller."}
2021-06-15 11:05:28,238 p=685240 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"reason": "Could not find or access '/home/ansible/task7-client.yml' on the Ansible Controller."}
2021-06-15 11:05:28,239 p=685240 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:05:28,240 p=685240 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:05:28,240 p=685240 u=ansible n=ansible | ansible2.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:05:28,240 p=685240 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:05:28,240 p=685240 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:05:28,240 p=685240 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:05:52,703 p=685727 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:05:52,740 p=685727 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:05:52,748 p=685727 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:05:54,273 p=685727 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:05:54,275 p=685727 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:05:54,277 p=685727 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:05:54,280 p=685727 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:05:54,673 p=685727 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:05:54,681 p=685727 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:05:54,729 p=685727 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:05:54,730 p=685727 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:05:54,730 p=685727 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:05:54,730 p=685727 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:05:54,731 p=685727 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:05:54,737 p=685727 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:05:54,799 p=685727 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:05:54,811 p=685727 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:05:54,814 p=685727 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:05:54,816 p=685727 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:05:54,825 p=685727 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "conflicting action statements: hosts, tasks\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- name: setup web server\n  ^ here\n"}
2021-06-15 11:05:54,831 p=685727 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:05:54,863 p=685727 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:05:54,864 p=685727 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:05:54,864 p=685727 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:05:54,868 p=685727 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:05:54,874 p=685727 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:05:54,921 p=685727 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:05:54,948 p=685727 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:05:54,961 p=685727 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"reason": "conflicting action statements: hosts, tasks\n\nThe error appears to be in '/home/ansible/task7/task7-client.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- name: install wget, elinks, and curl\n  ^ here\n"}
2021-06-15 11:05:54,962 p=685727 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"reason": "conflicting action statements: hosts, tasks\n\nThe error appears to be in '/home/ansible/task7/task7-client.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- name: install wget, elinks, and curl\n  ^ here\n"}
2021-06-15 11:05:54,963 p=685727 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:05:54,964 p=685727 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:05:54,964 p=685727 u=ansible n=ansible | ansible2.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:05:54,964 p=685727 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:05:54,964 p=685727 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:05:54,964 p=685727 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:07:03,307 p=686511 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:07:03,345 p=686511 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:07:03,353 p=686511 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:07:05,249 p=686511 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:07:05,278 p=686511 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:07:05,294 p=686511 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:07:05,299 p=686511 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:07:05,649 p=686511 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:07:05,657 p=686511 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:07:05,705 p=686511 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:07:05,705 p=686511 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:07:05,706 p=686511 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:07:05,706 p=686511 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:07:05,708 p=686511 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:07:05,714 p=686511 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:07:05,784 p=686511 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:07:05,796 p=686511 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:07:05,796 p=686511 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:07:05,807 p=686511 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:07:05,816 p=686511 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "conflicting action statements: hosts, tasks\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- name: setup web server\n  ^ here\n"}
2021-06-15 11:07:05,822 p=686511 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:07:05,835 p=686511 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:07:05,845 p=686511 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:07:05,856 p=686511 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:07:05,861 p=686511 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:07:05,867 p=686511 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:07:05,917 p=686511 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:07:05,936 p=686511 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:07:05,949 p=686511 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"reason": "conflicting action statements: hosts, tasks\n\nThe error appears to be in '/home/ansible/task7/task7-client.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- name: install wget, elinks, and curl\n  ^ here\n"}
2021-06-15 11:07:05,949 p=686511 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"reason": "conflicting action statements: hosts, tasks\n\nThe error appears to be in '/home/ansible/task7/task7-client.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- name: install wget, elinks, and curl\n  ^ here\n"}
2021-06-15 11:07:05,950 p=686511 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:07:05,950 p=686511 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:07:05,951 p=686511 u=ansible n=ansible | ansible2.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:07:05,951 p=686511 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:07:05,951 p=686511 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:07:05,951 p=686511 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:08:29,052 p=687429 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:08:29,092 p=687429 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:08:29,099 p=687429 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:08:30,975 p=687429 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:08:30,979 p=687429 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:08:30,984 p=687429 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:08:31,001 p=687429 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:08:31,347 p=687429 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:08:31,355 p=687429 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:08:31,373 p=687429 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:08:31,385 p=687429 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:08:31,396 p=687429 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:08:31,407 p=687429 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:08:31,413 p=687429 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:08:31,420 p=687429 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:08:31,494 p=687429 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:08:31,497 p=687429 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:08:31,498 p=687429 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:08:31,507 p=687429 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:08:31,516 p=687429 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "conflicting action statements: hosts, tasks\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- name: setup web server\n  ^ here\n"}
2021-06-15 11:08:31,523 p=687429 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:08:31,535 p=687429 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:08:31,546 p=687429 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:08:31,555 p=687429 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:08:31,561 p=687429 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:08:31,569 p=687429 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:08:31,619 p=687429 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:08:31,639 p=687429 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:08:31,653 p=687429 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"reason": "conflicting action statements: hosts, tasks\n\nThe error appears to be in '/home/ansible/task7/task7-client.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- name: install wget, elinks, and curl\n  ^ here\n"}
2021-06-15 11:08:31,653 p=687429 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"reason": "conflicting action statements: hosts, tasks\n\nThe error appears to be in '/home/ansible/task7/task7-client.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- name: install wget, elinks, and curl\n  ^ here\n"}
2021-06-15 11:08:31,654 p=687429 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:08:31,654 p=687429 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:08:31,654 p=687429 u=ansible n=ansible | ansible2.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:08:31,654 p=687429 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:08:31,655 p=687429 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:08:31,655 p=687429 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:14:27,399 p=690212 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:14:27,445 p=690212 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:14:27,458 p=690212 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:14:29,369 p=690212 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:14:29,394 p=690212 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:14:29,417 p=690212 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:14:29,419 p=690212 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:14:29,787 p=690212 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:14:29,795 p=690212 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:14:29,809 p=690212 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:14:29,820 p=690212 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:14:29,831 p=690212 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:14:29,842 p=690212 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:14:29,848 p=690212 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:14:29,855 p=690212 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:14:29,920 p=690212 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:14:29,932 p=690212 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:14:29,932 p=690212 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:14:29,946 p=690212 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:14:29,955 p=690212 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "included task files must contain a list of tasks"}
2021-06-15 11:14:29,961 p=690212 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:14:29,973 p=690212 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:14:29,999 p=690212 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:14:29,999 p=690212 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:14:30,007 p=690212 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:14:30,014 p=690212 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:14:30,068 p=690212 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:14:30,087 p=690212 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:14:30,100 p=690212 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"reason": "included task files must contain a list of tasks"}
2021-06-15 11:14:30,100 p=690212 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"reason": "included task files must contain a list of tasks"}
2021-06-15 11:14:30,101 p=690212 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:14:30,102 p=690212 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:14:30,102 p=690212 u=ansible n=ansible | ansible2.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:14:30,102 p=690212 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:14:30,102 p=690212 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:14:30,102 p=690212 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:29:32,471 p=696896 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:29:32,509 p=696896 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:29:32,517 p=696896 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:29:34,514 p=696896 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:29:34,517 p=696896 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:29:34,520 p=696896 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:29:34,535 p=696896 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:29:34,863 p=696896 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:29:34,873 p=696896 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:29:34,898 p=696896 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:29:34,909 p=696896 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:29:34,919 p=696896 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:29:34,919 p=696896 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:29:34,926 p=696896 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:29:34,932 p=696896 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:29:35,000 p=696896 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:29:35,011 p=696896 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:29:35,011 p=696896 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:29:35,013 p=696896 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:29:35,021 p=696896 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "included task files must contain a list of tasks"}
2021-06-15 11:29:35,027 p=696896 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:29:35,049 p=696896 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:29:35,059 p=696896 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:29:35,060 p=696896 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:29:35,065 p=696896 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:29:35,072 p=696896 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:29:35,117 p=696896 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:29:35,140 p=696896 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:29:35,153 p=696896 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"reason": "included task files must contain a list of tasks"}
2021-06-15 11:29:35,153 p=696896 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"reason": "included task files must contain a list of tasks"}
2021-06-15 11:29:35,154 p=696896 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:29:35,154 p=696896 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:29:35,155 p=696896 u=ansible n=ansible | ansible2.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:29:35,155 p=696896 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:29:35,155 p=696896 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:29:35,155 p=696896 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:31:35,706 p=698059 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:31:35,747 p=698059 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:31:35,754 p=698059 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:31:37,647 p=698059 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:31:37,651 p=698059 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:31:37,678 p=698059 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:31:37,680 p=698059 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:31:38,062 p=698059 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:31:38,070 p=698059 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:31:38,103 p=698059 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:31:38,114 p=698059 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:31:38,114 p=698059 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:31:38,115 p=698059 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:31:38,120 p=698059 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:31:38,127 p=698059 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:31:38,190 p=698059 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:31:38,217 p=698059 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:31:38,219 p=698059 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:31:38,223 p=698059 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:31:38,234 p=698059 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "conflicting action statements: hosts, tasks\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- hosts: all\n  ^ here\n"}
2021-06-15 11:31:38,247 p=698059 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:31:38,285 p=698059 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:31:38,303 p=698059 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:31:38,309 p=698059 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:31:38,312 p=698059 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:31:38,326 p=698059 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:31:38,382 p=698059 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:31:38,397 p=698059 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:31:38,409 p=698059 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"reason": "We were unable to read either as JSON nor YAML, these are the errors we got from each:\nJSON: Expecting value: line 1 column 1 (char 0)\n\nSyntax Error while loading YAML.\n  mapping values are not allowed in this context\n\nThe error appears to be in '/home/ansible/task7/task7-client.yml': line 3, column 9, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n- hosts: all\n    vars:\n        ^ here\n"}
2021-06-15 11:31:38,409 p=698059 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"reason": "We were unable to read either as JSON nor YAML, these are the errors we got from each:\nJSON: Expecting value: line 1 column 1 (char 0)\n\nSyntax Error while loading YAML.\n  mapping values are not allowed in this context\n\nThe error appears to be in '/home/ansible/task7/task7-client.yml': line 3, column 9, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n- hosts: all\n    vars:\n        ^ here\n"}
2021-06-15 11:31:38,411 p=698059 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:31:38,411 p=698059 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:31:38,411 p=698059 u=ansible n=ansible | ansible2.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:31:38,411 p=698059 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:31:38,411 p=698059 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:31:38,411 p=698059 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:33:34,291 p=699174 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:33:34,329 p=699174 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:33:34,337 p=699174 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:33:36,235 p=699174 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:33:36,237 p=699174 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:33:36,243 p=699174 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:33:36,245 p=699174 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:33:36,585 p=699174 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:33:36,594 p=699174 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:33:36,616 p=699174 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:33:36,627 p=699174 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:33:36,638 p=699174 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:33:36,638 p=699174 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:33:36,643 p=699174 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:33:36,650 p=699174 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:33:36,721 p=699174 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:33:36,722 p=699174 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:33:36,727 p=699174 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:33:36,745 p=699174 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:33:36,754 p=699174 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "conflicting action statements: hosts, tasks\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- hosts: all\n  ^ here\n"}
2021-06-15 11:33:36,760 p=699174 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:33:36,773 p=699174 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:33:36,786 p=699174 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:33:36,799 p=699174 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:33:36,805 p=699174 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:33:36,812 p=699174 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:33:36,866 p=699174 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:33:36,893 p=699174 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:33:36,909 p=699174 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"reason": "included task files must contain a list of tasks"}
2021-06-15 11:33:36,909 p=699174 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"reason": "included task files must contain a list of tasks"}
2021-06-15 11:33:36,910 p=699174 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:33:36,910 p=699174 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:33:36,910 p=699174 u=ansible n=ansible | ansible2.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:33:36,910 p=699174 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:33:36,910 p=699174 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:33:36,911 p=699174 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:34:17,696 p=699769 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:34:17,735 p=699769 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:34:17,743 p=699769 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:34:19,256 p=699769 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:34:19,261 p=699769 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:34:19,266 p=699769 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:34:19,300 p=699769 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:34:19,672 p=699769 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:34:19,681 p=699769 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:34:19,706 p=699769 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:34:19,716 p=699769 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:34:19,727 p=699769 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:34:19,728 p=699769 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:34:19,733 p=699769 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:34:19,740 p=699769 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:34:19,790 p=699769 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:34:19,819 p=699769 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:34:19,822 p=699769 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:34:19,823 p=699769 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:34:19,833 p=699769 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "conflicting action statements: hosts, tasks\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- hosts: all\n  ^ here\n"}
2021-06-15 11:34:19,839 p=699769 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:34:19,852 p=699769 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:34:19,878 p=699769 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:34:19,880 p=699769 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:34:19,880 p=699769 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:34:19,888 p=699769 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:34:19,938 p=699769 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:34:19,964 p=699769 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:34:20,072 p=699769 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"reason": "conflicting action statements: include_vars, package\n\nThe error appears to be in '/home/ansible/task7/task7-client.yml': line 10, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: install packages\n  ^ here\n"}
2021-06-15 11:34:20,073 p=699769 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"reason": "conflicting action statements: include_vars, package\n\nThe error appears to be in '/home/ansible/task7/task7-client.yml': line 10, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: install packages\n  ^ here\n"}
2021-06-15 11:34:20,074 p=699769 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:34:20,075 p=699769 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:34:20,075 p=699769 u=ansible n=ansible | ansible2.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:34:20,075 p=699769 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:34:20,075 p=699769 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:34:20,075 p=699769 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:35:27,184 p=700531 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:35:27,222 p=700531 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:35:27,230 p=700531 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:35:29,057 p=700531 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:35:29,122 p=700531 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:35:29,142 p=700531 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:35:29,147 p=700531 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:35:29,541 p=700531 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:35:29,549 p=700531 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:35:29,596 p=700531 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:35:29,597 p=700531 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:35:29,597 p=700531 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:35:29,598 p=700531 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:35:29,600 p=700531 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:35:29,606 p=700531 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:35:29,669 p=700531 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:35:29,678 p=700531 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:35:29,678 p=700531 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:35:29,693 p=700531 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:35:29,702 p=700531 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "conflicting action statements: hosts, tasks\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- hosts: all\n  ^ here\n"}
2021-06-15 11:35:29,708 p=700531 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:35:29,732 p=700531 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:35:29,743 p=700531 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:35:29,744 p=700531 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:35:29,750 p=700531 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:35:29,756 p=700531 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:35:29,817 p=700531 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:35:29,836 p=700531 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:35:29,939 p=700531 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"reason": "conflicting action statements: include_vars, package\n\nThe error appears to be in '/home/ansible/task7/task7-client.yml': line 10, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: install packages\n  ^ here\n"}
2021-06-15 11:35:29,939 p=700531 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"reason": "conflicting action statements: include_vars, package\n\nThe error appears to be in '/home/ansible/task7/task7-client.yml': line 10, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: install packages\n  ^ here\n"}
2021-06-15 11:35:29,940 p=700531 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:35:29,941 p=700531 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:35:29,941 p=700531 u=ansible n=ansible | ansible2.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:35:29,941 p=700531 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:35:29,941 p=700531 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:35:29,941 p=700531 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:40:24,414 p=702901 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:40:24,454 p=702901 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:40:24,461 p=702901 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:40:26,302 p=702901 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:40:26,336 p=702901 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:40:26,341 p=702901 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:40:26,345 p=702901 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:40:26,762 p=702901 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:40:26,770 p=702901 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:40:26,803 p=702901 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:40:26,813 p=702901 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:40:26,814 p=702901 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:40:26,814 p=702901 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:40:26,820 p=702901 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:40:26,826 p=702901 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:40:26,896 p=702901 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:40:26,897 p=702901 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:40:26,899 p=702901 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:40:26,911 p=702901 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:40:26,920 p=702901 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "conflicting action statements: hosts, tasks\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- hosts: all\n  ^ here\n"}
2021-06-15 11:40:26,926 p=702901 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:40:26,958 p=702901 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:40:26,959 p=702901 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:40:26,959 p=702901 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:40:26,963 p=702901 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:40:26,969 p=702901 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:40:27,021 p=702901 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:40:27,039 p=702901 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:40:27,153 p=702901 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"reason": "conflicting action statements: include_vars, package\n\nThe error appears to be in '/home/ansible/task7/task7-client.yml': line 10, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: install packages\n  ^ here\n"}
2021-06-15 11:40:27,154 p=702901 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"reason": "conflicting action statements: include_vars, package\n\nThe error appears to be in '/home/ansible/task7/task7-client.yml': line 10, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: install packages\n  ^ here\n"}
2021-06-15 11:40:27,156 p=702901 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:40:27,156 p=702901 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:40:27,156 p=702901 u=ansible n=ansible | ansible2.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:40:27,157 p=702901 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:40:27,157 p=702901 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:40:27,157 p=702901 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:41:23,121 p=703602 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:41:23,160 p=703602 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:41:23,169 p=703602 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:41:24,703 p=703602 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:41:24,712 p=703602 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:41:24,726 p=703602 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:41:24,750 p=703602 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:41:26,187 p=703602 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:41:26,195 p=703602 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:41:26,243 p=703602 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:41:26,244 p=703602 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:41:26,244 p=703602 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:41:26,244 p=703602 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:41:26,248 p=703602 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:41:26,255 p=703602 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:41:26,320 p=703602 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:41:26,323 p=703602 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:41:26,335 p=703602 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:41:26,352 p=703602 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:41:26,361 p=703602 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "conflicting action statements: hosts, tasks\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- hosts: all\n  ^ here\n"}
2021-06-15 11:41:26,367 p=703602 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:41:26,379 p=703602 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:41:26,391 p=703602 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:41:26,401 p=703602 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:41:26,406 p=703602 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:41:26,413 p=703602 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:41:26,471 p=703602 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:41:26,491 p=703602 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:41:26,599 p=703602 u=ansible n=ansible | included: /home/ansible/task7/task7-client.yml for ansible2.example.com, ansible3.example.com
2021-06-15 11:41:26,607 p=703602 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 11:41:27,067 p=703602 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:41:27,070 p=703602 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:41:27,078 p=703602 u=ansible n=ansible | TASK [install packages] *****************************************************************************************
2021-06-15 11:41:27,104 p=703602 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'client_packages' is undefined\n\nThe error appears to be in '/home/ansible/task7/task7-client.yml': line 10, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: install packages\n  ^ here\n"}
2021-06-15 11:41:27,113 p=703602 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'client_packages' is undefined\n\nThe error appears to be in '/home/ansible/task7/task7-client.yml': line 10, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: install packages\n  ^ here\n"}
2021-06-15 11:41:27,114 p=703602 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:41:27,115 p=703602 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:41:27,115 p=703602 u=ansible n=ansible | ansible2.example.com       : ok=5    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:41:27,115 p=703602 u=ansible n=ansible | ansible3.example.com       : ok=5    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:41:27,115 p=703602 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:41:27,115 p=703602 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:42:29,544 p=704364 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:42:29,582 p=704364 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:42:29,590 p=704364 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:42:31,476 p=704364 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:42:31,504 p=704364 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:42:31,506 p=704364 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:42:31,516 p=704364 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:42:31,814 p=704364 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:42:31,822 p=704364 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:42:31,869 p=704364 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:42:31,870 p=704364 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:42:31,870 p=704364 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:42:31,870 p=704364 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:42:31,873 p=704364 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:42:31,879 p=704364 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:42:31,943 p=704364 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:42:31,953 p=704364 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:42:31,953 p=704364 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:42:31,967 p=704364 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:42:31,976 p=704364 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "conflicting action statements: hosts, tasks\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- hosts: all\n  ^ here\n"}
2021-06-15 11:42:31,982 p=704364 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:42:32,004 p=704364 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:42:32,014 p=704364 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:42:32,015 p=704364 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:42:32,020 p=704364 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:42:32,027 p=704364 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:42:32,082 p=704364 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:42:32,094 p=704364 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:42:32,194 p=704364 u=ansible n=ansible | included: /home/ansible/task7/task7-client.yml for ansible2.example.com, ansible3.example.com
2021-06-15 11:42:32,203 p=704364 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 11:42:32,639 p=704364 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:42:32,652 p=704364 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:42:32,659 p=704364 u=ansible n=ansible | TASK [include_vars] *********************************************************************************************
2021-06-15 11:42:32,680 p=704364 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"ansible_facts": {"client_packages": {}}, "ansible_included_var_files": [], "changed": false, "message": "/home/ansible/task7/client_packages.yml must be stored as a dictionary/hash"}
2021-06-15 11:42:32,682 p=704364 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"ansible_facts": {"client_packages": {}}, "ansible_included_var_files": [], "changed": false, "message": "/home/ansible/task7/client_packages.yml must be stored as a dictionary/hash"}
2021-06-15 11:42:32,684 p=704364 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:42:32,684 p=704364 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:42:32,684 p=704364 u=ansible n=ansible | ansible2.example.com       : ok=5    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:42:32,684 p=704364 u=ansible n=ansible | ansible3.example.com       : ok=5    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:42:32,684 p=704364 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:42:32,684 p=704364 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:42:44,403 p=704777 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:42:44,441 p=704777 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:42:44,448 p=704777 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:42:45,654 p=704777 u=ansible n=ansible |  [ERROR]: User interrupted execution

2021-06-15 11:43:05,350 p=705095 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:43:05,388 p=705095 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:43:05,395 p=705095 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:43:06,932 p=705095 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:43:06,962 p=705095 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:43:07,068 p=705095 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:43:07,075 p=705095 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:43:07,441 p=705095 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:43:07,449 p=705095 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:43:07,481 p=705095 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:43:07,491 p=705095 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:43:07,492 p=705095 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:43:07,497 p=705095 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:43:07,497 p=705095 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:43:07,504 p=705095 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:43:07,566 p=705095 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:43:07,579 p=705095 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:43:07,584 p=705095 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:43:07,596 p=705095 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:43:07,605 p=705095 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "conflicting action statements: hosts, tasks\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- hosts: all\n  ^ here\n"}
2021-06-15 11:43:07,612 p=705095 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:43:07,656 p=705095 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:43:07,657 p=705095 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:43:07,661 p=705095 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:43:07,665 p=705095 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:43:07,672 p=705095 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:43:07,755 p=705095 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:43:07,777 p=705095 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:43:07,881 p=705095 u=ansible n=ansible | included: /home/ansible/task7/task7-client.yml for ansible3.example.com, ansible2.example.com
2021-06-15 11:43:07,891 p=705095 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 11:43:08,387 p=705095 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:43:08,388 p=705095 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:43:08,396 p=705095 u=ansible n=ansible | TASK [include_vars] *********************************************************************************************
2021-06-15 11:43:08,406 p=705415 u=ansible n=ansible | [WARNING]: While constructing a mapping from /home/ansible/task7/client_packages.yml, line 1, column 1, found a
duplicate dict key (name). Using last defined value only.

2021-06-15 11:43:08,416 p=705417 u=ansible n=ansible | [WARNING]: While constructing a mapping from /home/ansible/task7/client_packages.yml, line 1, column 1, found a
duplicate dict key (name). Using last defined value only.

2021-06-15 11:43:08,417 p=705095 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:43:08,419 p=705095 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:43:08,426 p=705095 u=ansible n=ansible | TASK [package] **************************************************************************************************
2021-06-15 11:43:09,224 p=705095 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "argument name is of type <class 'dict'> and we were unable to convert to list: <class 'dict'> cannot be converted to a list"}
2021-06-15 11:43:09,307 p=705095 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "argument name is of type <class 'dict'> and we were unable to convert to list: <class 'dict'> cannot be converted to a list"}
2021-06-15 11:43:09,309 p=705095 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:43:09,309 p=705095 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:43:09,309 p=705095 u=ansible n=ansible | ansible2.example.com       : ok=6    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:43:09,309 p=705095 u=ansible n=ansible | ansible3.example.com       : ok=6    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:43:09,309 p=705095 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:43:09,309 p=705095 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:44:13,162 p=705891 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:44:13,200 p=705891 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:44:13,207 p=705891 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:44:15,083 p=705891 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:44:15,090 p=705891 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:44:15,093 p=705891 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:44:15,117 p=705891 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:44:15,410 p=705891 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:44:15,420 p=705891 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:44:15,466 p=705891 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:44:15,466 p=705891 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:44:15,467 p=705891 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:44:15,467 p=705891 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:44:15,469 p=705891 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:44:15,475 p=705891 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:44:15,537 p=705891 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:44:15,550 p=705891 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:44:15,553 p=705891 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:44:15,560 p=705891 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:44:15,569 p=705891 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "conflicting action statements: hosts, tasks\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- hosts: all\n  ^ here\n"}
2021-06-15 11:44:15,575 p=705891 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:44:15,589 p=705891 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:44:15,599 p=705891 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:44:15,609 p=705891 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:44:15,615 p=705891 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:44:15,622 p=705891 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:44:15,673 p=705891 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:44:15,685 p=705891 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:44:15,785 p=705891 u=ansible n=ansible | included: /home/ansible/task7/task7-client.yml for ansible2.example.com, ansible3.example.com
2021-06-15 11:44:15,794 p=705891 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 11:44:16,206 p=705891 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:44:16,212 p=705891 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:44:16,219 p=705891 u=ansible n=ansible | TASK [include_vars] *********************************************************************************************
2021-06-15 11:44:16,233 p=705891 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:44:16,240 p=705891 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:44:16,247 p=705891 u=ansible n=ansible | TASK [package] **************************************************************************************************
2021-06-15 11:44:16,945 p=705891 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "argument name is of type <class 'dict'> and we were unable to convert to list: <class 'dict'> cannot be converted to a list"}
2021-06-15 11:44:16,949 p=705891 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "argument name is of type <class 'dict'> and we were unable to convert to list: <class 'dict'> cannot be converted to a list"}
2021-06-15 11:44:16,950 p=705891 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:44:16,951 p=705891 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:44:16,951 p=705891 u=ansible n=ansible | ansible2.example.com       : ok=6    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:44:16,951 p=705891 u=ansible n=ansible | ansible3.example.com       : ok=6    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:44:16,951 p=705891 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:44:16,951 p=705891 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:44:52,006 p=706491 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:44:52,044 p=706491 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:44:52,056 p=706491 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:44:53,558 p=706491 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:44:53,572 p=706491 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:44:53,608 p=706491 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:44:53,633 p=706491 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:44:53,976 p=706491 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:44:53,984 p=706491 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:44:54,029 p=706491 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:44:54,030 p=706491 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:44:54,030 p=706491 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:44:54,031 p=706491 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:44:54,034 p=706491 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:44:54,041 p=706491 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:44:54,102 p=706491 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:44:54,115 p=706491 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:44:54,117 p=706491 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:44:54,123 p=706491 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:44:54,132 p=706491 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "conflicting action statements: hosts, tasks\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- hosts: all\n  ^ here\n"}
2021-06-15 11:44:54,138 p=706491 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:44:54,170 p=706491 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:44:54,170 p=706491 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:44:54,171 p=706491 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:44:54,175 p=706491 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:44:54,181 p=706491 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:44:54,237 p=706491 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:44:54,259 p=706491 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:44:54,360 p=706491 u=ansible n=ansible | included: /home/ansible/task7/task7-client.yml for ansible2.example.com, ansible3.example.com
2021-06-15 11:44:54,370 p=706491 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 11:44:54,795 p=706491 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:44:54,796 p=706491 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:44:54,803 p=706491 u=ansible n=ansible | TASK [include_vars] *********************************************************************************************
2021-06-15 11:44:54,812 p=706804 u=ansible n=ansible | [WARNING]: While constructing a mapping from /home/ansible/task7/client_packages.yml, line 2, column 3, found a
duplicate dict key (name). Using last defined value only.

2021-06-15 11:44:54,818 p=706491 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:44:54,825 p=706806 u=ansible n=ansible | [WARNING]: While constructing a mapping from /home/ansible/task7/client_packages.yml, line 2, column 3, found a
duplicate dict key (name). Using last defined value only.

2021-06-15 11:44:54,827 p=706491 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:44:54,834 p=706491 u=ansible n=ansible | TASK [package] **************************************************************************************************
2021-06-15 11:44:55,534 p=706491 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "argument name is of type <class 'dict'> and we were unable to convert to list: <class 'dict'> cannot be converted to a list"}
2021-06-15 11:44:55,542 p=706491 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "argument name is of type <class 'dict'> and we were unable to convert to list: <class 'dict'> cannot be converted to a list"}
2021-06-15 11:44:55,544 p=706491 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:44:55,544 p=706491 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:44:55,544 p=706491 u=ansible n=ansible | ansible2.example.com       : ok=6    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:44:55,544 p=706491 u=ansible n=ansible | ansible3.example.com       : ok=6    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:44:55,545 p=706491 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:44:55,545 p=706491 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:47:52,179 p=708088 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:47:52,217 p=708088 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:47:52,225 p=708088 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:47:54,120 p=708088 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:47:54,122 p=708088 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:47:54,128 p=708088 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:47:54,131 p=708088 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:47:55,489 p=708088 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:47:55,497 p=708088 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:47:55,540 p=708088 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:47:55,541 p=708088 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:47:55,541 p=708088 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:47:55,541 p=708088 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:47:55,546 p=708088 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:47:55,552 p=708088 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:47:55,620 p=708088 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:47:55,626 p=708088 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:47:55,646 p=708088 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:47:55,649 p=708088 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:47:55,659 p=708088 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "conflicting action statements: hosts, tasks\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- hosts: all\n  ^ here\n"}
2021-06-15 11:47:55,665 p=708088 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:47:55,678 p=708088 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:47:55,688 p=708088 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:47:55,699 p=708088 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:47:55,707 p=708088 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:47:55,714 p=708088 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:47:55,764 p=708088 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:47:55,778 p=708088 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:47:55,790 p=708088 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"reason": "We were unable to read either as JSON nor YAML, these are the errors we got from each:\nJSON: Expecting value: line 1 column 1 (char 0)\n\nSyntax Error while loading YAML.\n  mapping values are not allowed in this context\n\nThe error appears to be in '/home/ansible/task7/task7-client.yml': line 10, column 12, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n- name: install web client packages\n    package:\n           ^ here\n"}
2021-06-15 11:47:55,790 p=708088 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"reason": "We were unable to read either as JSON nor YAML, these are the errors we got from each:\nJSON: Expecting value: line 1 column 1 (char 0)\n\nSyntax Error while loading YAML.\n  mapping values are not allowed in this context\n\nThe error appears to be in '/home/ansible/task7/task7-client.yml': line 10, column 12, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n- name: install web client packages\n    package:\n           ^ here\n"}
2021-06-15 11:47:55,792 p=708088 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:47:55,792 p=708088 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:47:55,792 p=708088 u=ansible n=ansible | ansible2.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:47:55,792 p=708088 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-15 11:47:55,792 p=708088 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:47:55,792 p=708088 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:48:19,031 p=708565 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:48:19,073 p=708565 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:48:19,081 p=708565 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:48:20,608 p=708565 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:48:20,613 p=708565 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:48:20,620 p=708565 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:48:20,646 p=708565 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:48:21,043 p=708565 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:48:21,052 p=708565 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:48:21,075 p=708565 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:48:21,087 p=708565 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:48:21,098 p=708565 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:48:21,105 p=708565 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:48:21,107 p=708565 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:48:21,114 p=708565 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:48:21,182 p=708565 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:48:21,185 p=708565 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:48:21,189 p=708565 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:48:21,208 p=708565 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:48:21,217 p=708565 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "conflicting action statements: hosts, tasks\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- hosts: all\n  ^ here\n"}
2021-06-15 11:48:21,223 p=708565 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:48:21,256 p=708565 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:48:21,257 p=708565 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:48:21,259 p=708565 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:48:21,261 p=708565 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:48:21,267 p=708565 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:48:21,311 p=708565 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:48:21,337 p=708565 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:48:21,446 p=708565 u=ansible n=ansible | included: /home/ansible/task7/task7-client.yml for ansible3.example.com, ansible2.example.com
2021-06-15 11:48:21,457 p=708565 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 11:48:21,918 p=708565 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:48:21,923 p=708565 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:48:21,930 p=708565 u=ansible n=ansible | TASK [install web client packages] ******************************************************************************
2021-06-15 11:48:23,437 p=708565 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:48:23,649 p=708565 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:48:23,651 p=708565 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:48:23,651 p=708565 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:48:23,651 p=708565 u=ansible n=ansible | ansible2.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 11:48:23,651 p=708565 u=ansible n=ansible | ansible3.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 11:48:23,652 p=708565 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:48:23,652 p=708565 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:50:36,847 p=709856 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:50:36,886 p=709856 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:50:36,894 p=709856 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:50:38,799 p=709856 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:50:38,801 p=709856 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:50:38,804 p=709856 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:50:38,806 p=709856 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:50:39,159 p=709856 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:50:39,167 p=709856 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:50:39,211 p=709856 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:50:39,211 p=709856 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:50:39,212 p=709856 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:50:39,212 p=709856 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:50:39,216 p=709856 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:50:39,222 p=709856 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:50:39,269 p=709856 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:50:39,295 p=709856 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:50:39,295 p=709856 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:50:39,306 p=709856 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:50:39,313 p=709856 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "We were unable to read either as JSON nor YAML, these are the errors we got from each:\nJSON: Expecting value: line 1 column 1 (char 0)\n\nSyntax Error while loading YAML.\n  did not find expected '-' indicator\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 46, column 1, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\nhandlers:\n^ here\n"}
2021-06-15 11:50:39,319 p=709856 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:50:39,333 p=709856 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:50:39,344 p=709856 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:50:39,354 p=709856 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:50:39,360 p=709856 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:50:39,366 p=709856 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:50:39,407 p=709856 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:50:39,438 p=709856 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:50:39,558 p=709856 u=ansible n=ansible | included: /home/ansible/task7/task7-client.yml for ansible2.example.com, ansible3.example.com
2021-06-15 11:50:39,566 p=709856 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 11:50:39,991 p=709856 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:50:39,999 p=709856 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:50:40,006 p=709856 u=ansible n=ansible | TASK [install web client packages] ******************************************************************************
2021-06-15 11:50:41,414 p=709856 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:50:41,498 p=709856 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:50:41,500 p=709856 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:50:41,500 p=709856 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:50:41,500 p=709856 u=ansible n=ansible | ansible2.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 11:50:41,500 p=709856 u=ansible n=ansible | ansible3.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 11:50:41,500 p=709856 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:50:41,500 p=709856 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:52:15,419 p=710866 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:52:15,457 p=710866 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:52:15,465 p=710866 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:52:17,379 p=710866 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:52:17,411 p=710866 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:52:17,416 p=710866 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:52:17,421 p=710866 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:52:17,726 p=710866 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:52:17,734 p=710866 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:52:17,749 p=710866 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:52:17,761 p=710866 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:52:17,772 p=710866 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:52:17,783 p=710866 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:52:17,790 p=710866 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:52:17,797 p=710866 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:52:17,858 p=710866 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:52:17,872 p=710866 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:52:17,874 p=710866 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:52:17,878 p=710866 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:52:17,885 p=710866 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "We were unable to read either as JSON nor YAML, these are the errors we got from each:\nJSON: Expecting value: line 1 column 1 (char 0)\n\nSyntax Error while loading YAML.\n  did not find expected key\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 8, column 4, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n    web_package: httpd\n   package:\n   ^ here\n"}
2021-06-15 11:52:17,891 p=710866 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:52:17,913 p=710866 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:52:17,924 p=710866 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:52:17,925 p=710866 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:52:17,930 p=710866 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:52:17,938 p=710866 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:52:17,990 p=710866 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:52:18,005 p=710866 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:52:18,107 p=710866 u=ansible n=ansible | included: /home/ansible/task7/task7-client.yml for ansible3.example.com, ansible2.example.com
2021-06-15 11:52:18,115 p=710866 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 11:52:18,543 p=710866 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:52:18,546 p=710866 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:52:18,553 p=710866 u=ansible n=ansible | TASK [install web client packages] ******************************************************************************
2021-06-15 11:52:20,003 p=710866 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:52:20,106 p=710866 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:52:20,108 p=710866 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:52:20,108 p=710866 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:52:20,108 p=710866 u=ansible n=ansible | ansible2.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 11:52:20,108 p=710866 u=ansible n=ansible | ansible3.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 11:52:20,108 p=710866 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:52:20,108 p=710866 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:53:01,392 p=711518 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:53:01,430 p=711518 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:53:01,438 p=711518 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:53:02,905 p=711518 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:53:02,973 p=711518 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:53:02,978 p=711518 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:53:02,987 p=711518 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:53:03,392 p=711518 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:53:03,400 p=711518 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:53:03,446 p=711518 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:53:03,446 p=711518 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:53:03,447 p=711518 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:53:03,447 p=711518 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:53:03,449 p=711518 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:53:03,455 p=711518 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:53:03,525 p=711518 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:53:03,527 p=711518 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:53:03,532 p=711518 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:53:03,547 p=711518 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:53:03,554 p=711518 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "We were unable to read either as JSON nor YAML, these are the errors we got from each:\nJSON: Expecting value: line 1 column 1 (char 0)\n\nSyntax Error while loading YAML.\n  did not find expected '-' indicator\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 46, column 1, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\nhandlers:\n^ here\n"}
2021-06-15 11:53:03,560 p=711518 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:53:03,573 p=711518 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:53:03,583 p=711518 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:53:03,593 p=711518 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:53:03,598 p=711518 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:53:03,605 p=711518 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:53:03,663 p=711518 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:53:03,682 p=711518 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:53:03,779 p=711518 u=ansible n=ansible | included: /home/ansible/task7/task7-client.yml for ansible2.example.com, ansible3.example.com
2021-06-15 11:53:03,789 p=711518 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 11:53:04,220 p=711518 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:53:04,231 p=711518 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:53:04,238 p=711518 u=ansible n=ansible | TASK [install web client packages] ******************************************************************************
2021-06-15 11:53:05,680 p=711518 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:53:05,773 p=711518 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:53:05,774 p=711518 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:53:05,774 p=711518 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:53:05,774 p=711518 u=ansible n=ansible | ansible2.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 11:53:05,774 p=711518 u=ansible n=ansible | ansible3.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 11:53:05,775 p=711518 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:53:05,775 p=711518 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:55:29,705 p=712887 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:55:29,745 p=712887 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:55:29,753 p=712887 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:55:31,623 p=712887 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:55:31,647 p=712887 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:55:31,649 p=712887 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:55:31,651 p=712887 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:55:32,041 p=712887 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:55:32,049 p=712887 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:55:32,064 p=712887 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:55:32,075 p=712887 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:55:32,086 p=712887 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:55:32,097 p=712887 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:55:32,104 p=712887 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:55:32,114 p=712887 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:55:32,189 p=712887 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:55:32,189 p=712887 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:55:32,193 p=712887 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:55:32,200 p=712887 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:55:32,208 p=712887 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "We were unable to read either as JSON nor YAML, these are the errors we got from each:\nJSON: Expecting value: line 1 column 1 (char 0)\n\nSyntax Error while loading YAML.\n  did not find expected '-' indicator\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 41, column 1, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\nhandlers:\n^ here\n"}
2021-06-15 11:55:32,214 p=712887 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:55:32,228 p=712887 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:55:32,238 p=712887 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:55:32,249 p=712887 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:55:32,255 p=712887 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:55:32,262 p=712887 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:55:32,324 p=712887 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:55:32,336 p=712887 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:55:32,443 p=712887 u=ansible n=ansible | included: /home/ansible/task7/task7-client.yml for ansible2.example.com, ansible3.example.com
2021-06-15 11:55:32,451 p=712887 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 11:55:32,883 p=712887 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:55:32,884 p=712887 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:55:32,891 p=712887 u=ansible n=ansible | TASK [install web client packages] ******************************************************************************
2021-06-15 11:55:34,763 p=712887 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:55:34,776 p=712887 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:55:34,778 p=712887 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:55:34,779 p=712887 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:55:34,779 p=712887 u=ansible n=ansible | ansible2.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 11:55:34,779 p=712887 u=ansible n=ansible | ansible3.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 11:55:34,779 p=712887 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:55:34,779 p=712887 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:58:04,612 p=714290 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:58:04,650 p=714290 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:58:04,657 p=714290 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:58:06,594 p=714290 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:58:06,596 p=714290 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:58:06,598 p=714290 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:58:06,602 p=714290 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:58:06,909 p=714290 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:58:06,917 p=714290 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:58:06,943 p=714290 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:58:06,954 p=714290 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:58:06,967 p=714290 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:58:06,968 p=714290 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:58:06,973 p=714290 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:58:06,980 p=714290 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:58:07,028 p=714290 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:58:07,063 p=714290 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:58:07,063 p=714290 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:58:07,065 p=714290 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:58:07,073 p=714290 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "We were unable to read either as JSON nor YAML, these are the errors we got from each:\nJSON: Expecting value: line 1 column 1 (char 0)\n\nSyntax Error while loading YAML.\n  did not find expected '-' indicator\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 44, column 1, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\nhandlers:\n^ here\n"}
2021-06-15 11:58:07,079 p=714290 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:58:07,103 p=714290 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:58:07,114 p=714290 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:58:07,115 p=714290 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:58:07,120 p=714290 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:58:07,126 p=714290 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:58:07,186 p=714290 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:58:07,193 p=714290 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:58:07,296 p=714290 u=ansible n=ansible | included: /home/ansible/task7/task7-client.yml for ansible2.example.com, ansible3.example.com
2021-06-15 11:58:07,305 p=714290 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 11:58:07,736 p=714290 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:58:07,741 p=714290 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:58:07,748 p=714290 u=ansible n=ansible | TASK [install web client packages] ******************************************************************************
2021-06-15 11:58:09,314 p=714290 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:58:09,442 p=714290 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:58:09,443 p=714290 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:58:09,444 p=714290 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:58:09,444 p=714290 u=ansible n=ansible | ansible2.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 11:58:09,444 p=714290 u=ansible n=ansible | ansible3.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 11:58:09,444 p=714290 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:58:09,444 p=714290 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:58:41,677 p=714879 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:58:41,734 p=714879 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:58:41,746 p=714879 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:58:43,351 p=714879 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:58:43,397 p=714879 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:58:43,414 p=714879 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:58:43,443 p=714879 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:58:43,826 p=714879 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:58:43,834 p=714879 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:58:43,873 p=714879 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:58:43,884 p=714879 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:58:43,884 p=714879 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:58:43,885 p=714879 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:58:43,890 p=714879 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:58:43,897 p=714879 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:58:43,961 p=714879 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:58:43,969 p=714879 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:58:43,969 p=714879 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:58:43,985 p=714879 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:58:43,994 p=714879 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "conflicting action statements: include_vars, package\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 1, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: install the web server package\n  ^ here\n"}
2021-06-15 11:58:44,000 p=714879 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:58:44,030 p=714879 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:58:44,041 p=714879 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:58:44,042 p=714879 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:58:44,047 p=714879 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:58:44,053 p=714879 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:58:44,104 p=714879 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:58:44,128 p=714879 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:58:44,229 p=714879 u=ansible n=ansible | included: /home/ansible/task7/task7-client.yml for ansible2.example.com, ansible3.example.com
2021-06-15 11:58:44,238 p=714879 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 11:58:44,655 p=714879 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:58:44,658 p=714879 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:58:44,665 p=714879 u=ansible n=ansible | TASK [install web client packages] ******************************************************************************
2021-06-15 11:58:46,117 p=714879 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:58:46,251 p=714879 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:58:46,252 p=714879 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:58:46,252 p=714879 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:58:46,252 p=714879 u=ansible n=ansible | ansible2.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 11:58:46,252 p=714879 u=ansible n=ansible | ansible3.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 11:58:46,253 p=714879 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:58:46,253 p=714879 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:59:34,593 p=715556 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 11:59:34,631 p=715556 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 11:59:34,638 p=715556 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 11:59:36,158 p=715556 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:59:36,161 p=715556 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 11:59:36,166 p=715556 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:59:36,202 p=715556 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 11:59:36,531 p=715556 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 11:59:36,540 p=715556 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:59:36,558 p=715556 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:59:36,570 p=715556 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:59:36,581 p=715556 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:59:36,590 p=715556 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:59:36,597 p=715556 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 11:59:36,604 p=715556 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 11:59:36,652 p=715556 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:59:36,684 p=715556 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 11:59:36,686 p=715556 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 11:59:36,686 p=715556 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:59:36,696 p=715556 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "conflicting action statements: include_vars, package\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 1, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: install the web server package\n  ^ here\n"}
2021-06-15 11:59:36,702 p=715556 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 11:59:36,715 p=715556 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:59:36,727 p=715556 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:59:36,738 p=715556 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:59:36,743 p=715556 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 11:59:36,749 p=715556 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 11:59:36,795 p=715556 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 11:59:36,830 p=715556 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 11:59:36,944 p=715556 u=ansible n=ansible | included: /home/ansible/task7/task7-client.yml for ansible3.example.com, ansible2.example.com
2021-06-15 11:59:36,953 p=715556 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 11:59:37,392 p=715556 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:59:37,393 p=715556 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:59:37,400 p=715556 u=ansible n=ansible | TASK [install web client packages] ******************************************************************************
2021-06-15 11:59:38,890 p=715556 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 11:59:38,993 p=715556 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 11:59:38,995 p=715556 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 11:59:38,995 p=715556 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 11:59:38,995 p=715556 u=ansible n=ansible | ansible2.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 11:59:38,995 p=715556 u=ansible n=ansible | ansible3.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 11:59:38,995 p=715556 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 11:59:38,996 p=715556 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 12:30:07,418 p=719217 u=ansible n=ansible | [DEPRECATION WARNING]: The use of 'static' has been deprecated. Use 'import_tasks' for static inclusion, or 
'include_tasks' for dynamic inclusion. This feature will be removed in version 2.12. Deprecation warnings can be
 disabled by setting deprecation_warnings=False in ansible.cfg.
2021-06-15 12:30:07,457 p=719217 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 12:30:07,464 p=719217 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 12:30:09,413 p=719217 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:30:09,428 p=719217 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:30:09,440 p=719217 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:30:09,468 p=719217 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 12:30:10,773 p=719217 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 12:30:10,781 p=719217 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 12:30:10,795 p=719217 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:30:10,806 p=719217 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:30:10,817 p=719217 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:30:10,828 p=719217 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:30:10,835 p=719217 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:30:10,841 p=719217 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 12:30:10,921 p=719217 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 12:30:10,923 p=719217 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 12:30:10,926 p=719217 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 12:30:10,933 p=719217 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 12:30:10,943 p=719217 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "conflicting action statements: include_vars, package\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 1, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: install the web server package\n  ^ here\n"}
2021-06-15 12:30:10,949 p=719217 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 12:30:10,972 p=719217 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:30:10,982 p=719217 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:30:10,983 p=719217 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:30:10,988 p=719217 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:30:10,995 p=719217 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 12:30:11,050 p=719217 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 12:30:11,062 p=719217 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 12:30:11,161 p=719217 u=ansible n=ansible | included: /home/ansible/task7/task7-client.yml for ansible2.example.com, ansible3.example.com
2021-06-15 12:30:11,170 p=719217 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 12:30:11,594 p=719217 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:30:11,608 p=719217 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:30:11,615 p=719217 u=ansible n=ansible | TASK [install web client packages] ******************************************************************************
2021-06-15 12:30:13,055 p=719217 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:30:13,181 p=719217 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:30:13,183 p=719217 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 12:30:13,183 p=719217 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 12:30:13,183 p=719217 u=ansible n=ansible | ansible2.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 12:30:13,183 p=719217 u=ansible n=ansible | ansible3.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 12:30:13,183 p=719217 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 12:30:13,183 p=719217 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 12:31:05,990 p=719980 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 12:31:05,998 p=719980 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 12:31:07,476 p=719980 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:31:07,484 p=719980 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 12:31:07,486 p=719980 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:31:07,510 p=719980 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:31:07,974 p=719980 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 12:31:07,982 p=719980 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 12:31:08,020 p=719980 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:31:08,032 p=719980 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:31:08,033 p=719980 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:31:08,033 p=719980 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:31:08,038 p=719980 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:31:08,045 p=719980 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 12:31:08,117 p=719980 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 12:31:08,118 p=719980 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 12:31:08,122 p=719980 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 12:31:08,130 p=719980 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 12:31:08,139 p=719980 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "conflicting action statements: include_vars, package\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 1, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: install the web server package\n  ^ here\n"}
2021-06-15 12:31:08,146 p=719980 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 12:31:08,180 p=719980 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:31:08,181 p=719980 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:31:08,183 p=719980 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:31:08,184 p=719980 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:31:08,191 p=719980 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 12:31:08,245 p=719980 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 12:31:08,267 p=719980 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 12:31:08,367 p=719980 u=ansible n=ansible | included: /home/ansible/task7/task7-client.yml for ansible2.example.com, ansible3.example.com
2021-06-15 12:31:08,376 p=719980 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 12:31:08,807 p=719980 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:31:08,809 p=719980 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:31:08,816 p=719980 u=ansible n=ansible | TASK [install web client packages] ******************************************************************************
2021-06-15 12:31:10,284 p=719980 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:31:10,377 p=719980 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:31:10,379 p=719980 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 12:31:10,379 p=719980 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 12:31:10,379 p=719980 u=ansible n=ansible | ansible2.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 12:31:10,379 p=719980 u=ansible n=ansible | ansible3.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 12:31:10,380 p=719980 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 12:31:10,380 p=719980 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 12:31:54,298 p=720653 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 12:31:54,306 p=720653 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 12:31:55,820 p=720653 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:31:55,828 p=720653 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:31:55,830 p=720653 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 12:31:55,832 p=720653 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:31:56,260 p=720653 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 12:31:56,268 p=720653 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 12:31:56,292 p=720653 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:31:56,302 p=720653 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:31:56,313 p=720653 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:31:56,314 p=720653 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:31:56,320 p=720653 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:31:56,326 p=720653 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 12:31:56,398 p=720653 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 12:31:56,401 p=720653 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 12:31:56,401 p=720653 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 12:31:56,410 p=720653 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 12:31:56,419 p=720653 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "conflicting action statements: include_vars, package\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- name: install the web server package\n  ^ here\n"}
2021-06-15 12:31:56,425 p=720653 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 12:31:56,438 p=720653 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:31:56,449 p=720653 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:31:56,459 p=720653 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:31:56,465 p=720653 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:31:56,472 p=720653 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 12:31:56,536 p=720653 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 12:31:56,550 p=720653 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 12:31:56,651 p=720653 u=ansible n=ansible | included: /home/ansible/task7/task7-client.yml for ansible2.example.com, ansible3.example.com
2021-06-15 12:31:56,661 p=720653 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 12:31:57,089 p=720653 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:31:57,095 p=720653 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:31:57,102 p=720653 u=ansible n=ansible | TASK [install web client packages] ******************************************************************************
2021-06-15 12:31:58,702 p=720653 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:31:58,733 p=720653 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:31:58,737 p=720653 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 12:31:58,737 p=720653 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 12:31:58,737 p=720653 u=ansible n=ansible | ansible2.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 12:31:58,737 p=720653 u=ansible n=ansible | ansible3.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 12:31:58,738 p=720653 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 12:31:58,738 p=720653 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 12:33:10,638 p=721498 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 12:33:10,645 p=721498 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 12:33:12,471 p=721498 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:33:12,524 p=721498 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 12:33:12,530 p=721498 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:33:12,532 p=721498 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:33:12,843 p=721498 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 12:33:12,851 p=721498 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 12:33:12,885 p=721498 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:33:12,895 p=721498 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:33:12,896 p=721498 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:33:12,901 p=721498 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:33:12,903 p=721498 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:33:12,909 p=721498 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 12:33:12,972 p=721498 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 12:33:12,973 p=721498 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 12:33:12,992 p=721498 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 12:33:13,000 p=721498 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 12:33:13,029 p=721498 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "conflicting action statements: include_vars, template\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 18, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n    state: restarted\n- name: copy over the httpd.conf file as a jinja2 template\n  ^ here\n"}
2021-06-15 12:33:13,035 p=721498 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 12:33:13,067 p=721498 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:33:13,067 p=721498 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:33:13,067 p=721498 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:33:13,071 p=721498 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:33:13,079 p=721498 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 12:33:13,130 p=721498 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 12:33:13,144 p=721498 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 12:33:13,230 p=721498 u=ansible n=ansible | included: /home/ansible/task7/task7-client.yml for ansible2.example.com, ansible3.example.com
2021-06-15 12:33:13,238 p=721498 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 12:33:13,670 p=721498 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:33:13,674 p=721498 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:33:13,682 p=721498 u=ansible n=ansible | TASK [install web client packages] ******************************************************************************
2021-06-15 12:33:15,160 p=721498 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:33:15,238 p=721498 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:33:15,240 p=721498 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 12:33:15,240 p=721498 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 12:33:15,240 p=721498 u=ansible n=ansible | ansible2.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 12:33:15,240 p=721498 u=ansible n=ansible | ansible3.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 12:33:15,240 p=721498 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 12:33:15,240 p=721498 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 12:33:49,866 p=722095 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 12:33:49,873 p=722095 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 12:33:51,420 p=722095 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 12:33:51,445 p=722095 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:33:51,472 p=722095 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:33:51,475 p=722095 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:33:51,765 p=722095 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 12:33:51,773 p=722095 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 12:33:51,807 p=722095 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:33:51,817 p=722095 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:33:51,818 p=722095 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:33:51,818 p=722095 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:33:51,824 p=722095 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:33:51,830 p=722095 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 12:33:51,899 p=722095 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 12:33:51,900 p=722095 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 12:33:51,911 p=722095 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 12:33:51,913 p=722095 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 12:33:51,941 p=722095 u=ansible n=ansible | included: /home/ansible/task7/task7-server.yml for ansible1.example.com
2021-06-15 12:33:51,950 p=722095 u=ansible n=ansible | TASK [include vars] *********************************************************************************************
2021-06-15 12:33:51,962 p=722095 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:33:51,970 p=722095 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 12:33:55,057 p=722095 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:33:55,063 p=722095 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 12:33:55,747 p=722095 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:33:55,754 p=722095 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 12:33:56,422 p=722095 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 12:33:56,430 p=722095 u=ansible n=ansible | TASK [copy over the httpd.conf file as a jinja2 template] *******************************************************
2021-06-15 12:33:57,252 p=722095 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:33:57,258 p=722095 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 12:33:57,832 p=722095 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:33:57,845 p=722095 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 12:33:58,177 p=722095 u=ansible n=ansible | ERROR! The requested handler 'restart httpd' was not found in either the main handlers list nor in the listening handlers list
2021-06-15 12:34:27,568 p=722684 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 12:34:27,576 p=722684 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 12:34:29,096 p=722684 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 12:34:29,098 p=722684 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:34:29,109 p=722684 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:34:29,134 p=722684 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:34:29,505 p=722684 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 12:34:29,513 p=722684 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 12:34:29,545 p=722684 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:34:29,556 p=722684 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:34:29,556 p=722684 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:34:29,556 p=722684 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:34:29,562 p=722684 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:34:29,568 p=722684 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 12:34:29,628 p=722684 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 12:34:29,639 p=722684 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 12:34:29,642 p=722684 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 12:34:29,653 p=722684 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 12:34:29,681 p=722684 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"reason": "conflicting action statements: template, handler\n\nThe error appears to be in '/home/ansible/task7/task7-server.yml': line 38, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: copy over the index.html file as a jinja2 template\n  ^ here\n"}
2021-06-15 12:34:29,687 p=722684 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 12:34:29,709 p=722684 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:34:29,720 p=722684 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:34:29,720 p=722684 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:34:29,725 p=722684 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:34:29,731 p=722684 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 12:34:29,781 p=722684 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 12:34:29,797 p=722684 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 12:34:29,877 p=722684 u=ansible n=ansible | included: /home/ansible/task7/task7-client.yml for ansible2.example.com, ansible3.example.com
2021-06-15 12:34:29,887 p=722684 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 12:34:30,321 p=722684 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:34:30,324 p=722684 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:34:30,330 p=722684 u=ansible n=ansible | TASK [install web client packages] ******************************************************************************
2021-06-15 12:34:31,713 p=722684 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:34:31,943 p=722684 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:34:31,945 p=722684 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 12:34:31,945 p=722684 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 12:34:31,945 p=722684 u=ansible n=ansible | ansible2.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 12:34:31,945 p=722684 u=ansible n=ansible | ansible3.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 12:34:31,946 p=722684 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 12:34:31,946 p=722684 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 12:34:52,795 p=723171 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 12:34:52,803 p=723171 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 12:34:54,301 p=723171 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:34:54,321 p=723171 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 12:34:54,330 p=723171 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:34:54,371 p=723171 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:34:54,738 p=723171 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 12:34:54,746 p=723171 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 12:34:54,792 p=723171 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:34:54,792 p=723171 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:34:54,793 p=723171 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:34:54,793 p=723171 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:34:54,795 p=723171 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:34:54,801 p=723171 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 12:34:54,848 p=723171 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 12:34:54,879 p=723171 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 12:34:54,881 p=723171 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 12:34:54,881 p=723171 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 12:34:54,910 p=723171 u=ansible n=ansible | included: /home/ansible/task7/task7-server.yml for ansible1.example.com
2021-06-15 12:34:54,919 p=723171 u=ansible n=ansible | TASK [include vars] *********************************************************************************************
2021-06-15 12:34:54,931 p=723171 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:34:54,938 p=723171 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 12:34:56,184 p=723171 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:34:56,191 p=723171 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 12:34:56,760 p=723171 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:34:56,767 p=723171 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 12:34:57,354 p=723171 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 12:34:57,361 p=723171 u=ansible n=ansible | TASK [copy over the httpd.conf file as a jinja2 template] *******************************************************
2021-06-15 12:34:58,076 p=723171 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:34:58,083 p=723171 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 12:34:58,649 p=723171 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:34:58,656 p=723171 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 12:34:58,994 p=723171 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 12:34:59,001 p=723171 u=ansible n=ansible | TASK [restart httpd] ********************************************************************************************
2021-06-15 12:34:59,442 p=723171 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 12:34:59,449 p=723171 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 12:34:59,497 p=723171 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:34:59,497 p=723171 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:34:59,498 p=723171 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:34:59,498 p=723171 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:34:59,502 p=723171 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:34:59,508 p=723171 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 12:34:59,571 p=723171 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 12:34:59,578 p=723171 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-15 12:34:59,595 p=723171 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 12:34:59,677 p=723171 u=ansible n=ansible | included: /home/ansible/task7/task7-client.yml for ansible2.example.com, ansible3.example.com
2021-06-15 12:34:59,690 p=723171 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 12:35:00,148 p=723171 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:35:00,153 p=723171 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:35:00,159 p=723171 u=ansible n=ansible | TASK [install web client packages] ******************************************************************************
2021-06-15 12:35:01,563 p=723171 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:35:01,651 p=723171 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:35:01,652 p=723171 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 12:35:01,653 p=723171 u=ansible n=ansible | ansible1.example.com       : ok=12   changed=3    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 12:35:01,653 p=723171 u=ansible n=ansible | ansible2.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 12:35:01,653 p=723171 u=ansible n=ansible | ansible3.example.com       : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 12:35:01,653 p=723171 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 12:35:01,653 p=723171 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 12:37:12,768 p=724595 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 12:37:12,776 p=724595 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 12:37:14,606 p=724595 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 12:37:14,646 p=724595 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:37:14,670 p=724595 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:37:14,673 p=724595 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:37:15,049 p=724595 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 12:37:15,057 p=724595 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 12:37:15,080 p=724595 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:37:15,090 p=724595 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:37:15,100 p=724595 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:37:15,101 p=724595 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:37:15,106 p=724595 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:37:15,113 p=724595 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 12:37:15,172 p=724595 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 12:37:15,185 p=724595 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 12:37:15,188 p=724595 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 12:37:15,196 p=724595 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 12:37:15,223 p=724595 u=ansible n=ansible | included: /home/ansible/task7/task7-server.yml for ansible1.example.com
2021-06-15 12:37:15,233 p=724595 u=ansible n=ansible | TASK [include vars] *********************************************************************************************
2021-06-15 12:37:15,244 p=724595 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:37:15,253 p=724595 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 12:37:16,473 p=724595 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:37:16,480 p=724595 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 12:37:17,050 p=724595 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:37:17,057 p=724595 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 12:37:17,631 p=724595 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 12:37:17,649 p=724595 u=ansible n=ansible | TASK [copy over the httpd.conf file as a jinja2 template] *******************************************************
2021-06-15 12:37:18,349 p=724595 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:37:18,356 p=724595 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 12:37:18,913 p=724595 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:37:18,919 p=724595 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 12:37:19,245 p=724595 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 12:37:19,253 p=724595 u=ansible n=ansible | TASK [restart httpd] ********************************************************************************************
2021-06-15 12:37:19,684 p=724595 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 12:37:19,690 p=724595 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 12:37:19,712 p=724595 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:37:19,724 p=724595 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:37:19,734 p=724595 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:37:19,734 p=724595 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:37:19,739 p=724595 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:37:19,746 p=724595 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 12:37:19,812 p=724595 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 12:37:19,813 p=724595 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-15 12:37:19,837 p=724595 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 12:37:19,932 p=724595 u=ansible n=ansible | included: /home/ansible/task7/task7-client.yml for ansible2.example.com, ansible3.example.com
2021-06-15 12:37:19,945 p=724595 u=ansible n=ansible | TASK [include vars] *********************************************************************************************
2021-06-15 12:37:19,963 p=724595 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:37:19,969 p=724595 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:37:19,976 p=724595 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 12:37:20,421 p=724595 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:37:20,424 p=724595 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:37:20,431 p=724595 u=ansible n=ansible | TASK [install web client packages] ******************************************************************************
2021-06-15 12:37:21,770 p=724595 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:37:21,876 p=724595 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:37:21,878 p=724595 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 12:37:21,878 p=724595 u=ansible n=ansible | ansible1.example.com       : ok=12   changed=3    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 12:37:21,878 p=724595 u=ansible n=ansible | ansible2.example.com       : ok=7    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 12:37:21,878 p=724595 u=ansible n=ansible | ansible3.example.com       : ok=7    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 12:37:21,879 p=724595 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 12:37:21,879 p=724595 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 12:37:46,099 p=725236 u=ansible n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: webclient

2021-06-15 12:37:46,099 p=725236 u=ansible n=ansible | [WARNING]: No hosts matched, nothing to do

2021-06-15 12:37:46,102 p=725236 u=ansible n=ansible | ERROR! this task 'packages' has extra params, which is only allowed in the following modules: ansible.builtin.set_fact, ansible.builtin.shell, ansible.legacy.set_fact, ansible.builtin.meta, ansible.builtin.command, ansible.builtin.import_role, win_shell, ansible.legacy.include_tasks, group_by, ansible.builtin.raw, ansible.legacy.group_by, ansible.builtin.include_tasks, ansible.builtin.add_host, import_tasks, ansible.legacy.include_vars, win_command, include_role, ansible.legacy.script, ansible.builtin.include, include_tasks, set_fact, command, ansible.builtin.group_by, ansible.legacy.command, ansible.legacy.add_host, ansible.builtin.script, raw, ansible.legacy.win_shell, ansible.builtin.win_shell, meta, shell, include_vars, ansible.legacy.import_role, ansible.legacy.shell, ansible.builtin.include_role, ansible.legacy.include, ansible.builtin.win_command, ansible.legacy.raw, ansible.legacy.import_tasks, add_host, ansible.builtin.import_tasks, script, ansible.legacy.meta, ansible.legacy.include_role, import_role, ansible.legacy.win_command, include, ansible.builtin.include_vars
2021-06-15 12:37:51,325 p=725274 u=ansible n=ansible | ERROR! this task 'packages' has extra params, which is only allowed in the following modules: ansible.builtin.meta, ansible.builtin.win_shell, ansible.builtin.include_role, include_role, ansible.legacy.import_tasks, ansible.builtin.include_tasks, ansible.builtin.win_command, import_role, ansible.legacy.set_fact, ansible.builtin.import_tasks, include_vars, ansible.legacy.group_by, ansible.legacy.add_host, ansible.builtin.set_fact, raw, ansible.legacy.raw, group_by, ansible.legacy.include_role, include, ansible.builtin.shell, ansible.builtin.group_by, ansible.builtin.add_host, ansible.legacy.meta, ansible.builtin.raw, meta, ansible.legacy.win_shell, set_fact, add_host, ansible.legacy.include_tasks, command, shell, ansible.legacy.include, include_tasks, win_shell, ansible.legacy.command, ansible.legacy.win_command, win_command, ansible.builtin.command, ansible.legacy.script, ansible.legacy.shell, ansible.builtin.include, ansible.builtin.include_vars, ansible.builtin.import_role, ansible.builtin.script, ansible.legacy.import_role, ansible.legacy.include_vars, script, import_tasks
2021-06-15 12:38:01,670 p=725347 u=ansible n=ansible | ansible2.example.com | FAILED! => {
    "msg": "The module packages was not found in configured module paths"
}
2021-06-15 12:38:01,671 p=725347 u=ansible n=ansible | ansible3.example.com | FAILED! => {
    "msg": "The module packages was not found in configured module paths"
}
2021-06-15 12:38:13,835 p=725430 u=ansible n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "msg": "",
    "rc": 0,
    "results": [
        "Removed: elinks-0.12-0.58.pre6.el8.x86_64"
    ]
}
2021-06-15 12:38:13,865 p=725430 u=ansible n=ansible | ansible3.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "msg": "",
    "rc": 0,
    "results": [
        "Removed: elinks-0.12-0.58.pre6.el8.x86_64"
    ]
}
2021-06-15 12:38:29,468 p=725569 u=ansible n=ansible | ansible3.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "msg": "",
    "rc": 0,
    "results": [
        "Removed: wget-1.19.5-8.el8_1.1.x86_64"
    ]
}
2021-06-15 12:38:30,953 p=725569 u=ansible n=ansible | ansible2.example.com | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": true,
    "msg": "",
    "rc": 0,
    "results": [
        "Removed: wget-1.19.5-8.el8_1.1.x86_64"
    ]
}
2021-06-15 12:38:34,808 p=725678 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 12:38:34,815 p=725678 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 12:38:36,372 p=725678 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:38:36,431 p=725678 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 12:38:36,493 p=725678 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 12:38:36,695 p=725678 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:38:36,853 p=725678 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:38:36,861 p=725678 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 12:38:36,903 p=725678 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:38:36,904 p=725678 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:38:36,904 p=725678 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:38:36,906 p=725678 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:38:36,909 p=725678 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:38:36,916 p=725678 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 12:38:36,991 p=725678 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 12:38:37,004 p=725678 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 12:38:37,006 p=725678 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 12:38:37,006 p=725678 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 12:38:37,034 p=725678 u=ansible n=ansible | included: /home/ansible/task7/task7-server.yml for ansible1.example.com
2021-06-15 12:38:37,043 p=725678 u=ansible n=ansible | TASK [include vars] *********************************************************************************************
2021-06-15 12:38:37,055 p=725678 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:38:37,062 p=725678 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 12:38:38,270 p=725678 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:38:38,277 p=725678 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 12:38:38,843 p=725678 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:38:38,850 p=725678 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 12:38:39,431 p=725678 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 12:38:39,438 p=725678 u=ansible n=ansible | TASK [copy over the httpd.conf file as a jinja2 template] *******************************************************
2021-06-15 12:38:40,137 p=725678 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:38:40,144 p=725678 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 12:38:40,704 p=725678 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:38:40,711 p=725678 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 12:38:41,039 p=725678 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 12:38:41,046 p=725678 u=ansible n=ansible | TASK [restart httpd] ********************************************************************************************
2021-06-15 12:38:41,486 p=725678 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 12:38:41,493 p=725678 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 12:38:41,515 p=725678 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:38:41,525 p=725678 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:38:41,535 p=725678 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:38:41,536 p=725678 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:38:41,541 p=725678 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:38:41,549 p=725678 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 12:38:41,610 p=725678 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 12:38:41,610 p=725678 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-15 12:38:41,632 p=725678 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 12:38:41,713 p=725678 u=ansible n=ansible | included: /home/ansible/task7/task7-client.yml for ansible2.example.com, ansible3.example.com
2021-06-15 12:38:41,726 p=725678 u=ansible n=ansible | TASK [include vars] *********************************************************************************************
2021-06-15 12:38:41,741 p=725678 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:38:41,747 p=725678 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:38:41,754 p=725678 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 12:38:42,227 p=725678 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:38:42,229 p=725678 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:38:42,235 p=725678 u=ansible n=ansible | TASK [install web client packages] ******************************************************************************
2021-06-15 12:38:43,922 p=725678 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-15 12:38:44,017 p=725678 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-15 12:38:44,019 p=725678 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 12:38:44,019 p=725678 u=ansible n=ansible | ansible1.example.com       : ok=12   changed=3    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 12:38:44,020 p=725678 u=ansible n=ansible | ansible2.example.com       : ok=7    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 12:38:44,020 p=725678 u=ansible n=ansible | ansible3.example.com       : ok=7    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 12:38:44,020 p=725678 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 12:38:44,020 p=725678 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 12:39:04,010 p=726285 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 12:39:04,018 p=726285 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 12:39:05,569 p=726285 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 12:39:05,585 p=726285 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:39:05,611 p=726285 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:39:05,638 p=726285 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:39:05,979 p=726285 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 12:39:05,987 p=726285 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 12:39:06,003 p=726285 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:39:06,038 p=726285 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:39:06,039 p=726285 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:39:06,039 p=726285 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:39:06,043 p=726285 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 12:39:06,049 p=726285 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 12:39:06,114 p=726285 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 12:39:06,120 p=726285 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 12:39:06,120 p=726285 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 12:39:06,138 p=726285 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 12:39:06,165 p=726285 u=ansible n=ansible | included: /home/ansible/task7/task7-server.yml for ansible1.example.com
2021-06-15 12:39:06,174 p=726285 u=ansible n=ansible | TASK [include vars] *********************************************************************************************
2021-06-15 12:39:06,186 p=726285 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:39:06,193 p=726285 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 12:39:07,360 p=726285 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:39:07,368 p=726285 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 12:39:07,931 p=726285 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:39:07,938 p=726285 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 12:39:09,020 p=726285 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 12:39:09,029 p=726285 u=ansible n=ansible | TASK [copy over the httpd.conf file as a jinja2 template] *******************************************************
2021-06-15 12:39:09,816 p=726285 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:39:09,823 p=726285 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 12:39:10,387 p=726285 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 12:39:10,394 p=726285 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 12:39:11,122 p=726285 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 12:39:11,128 p=726285 u=ansible n=ansible | TASK [restart httpd] ********************************************************************************************
2021-06-15 12:39:12,638 p=726285 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 12:39:12,645 p=726285 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 12:39:12,658 p=726285 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:39:12,669 p=726285 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:39:12,680 p=726285 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:39:12,691 p=726285 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:39:12,697 p=726285 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 12:39:12,704 p=726285 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 12:39:12,786 p=726285 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 12:39:12,787 p=726285 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-15 12:39:12,791 p=726285 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 12:39:12,872 p=726285 u=ansible n=ansible | included: /home/ansible/task7/task7-client.yml for ansible3.example.com, ansible2.example.com
2021-06-15 12:39:12,885 p=726285 u=ansible n=ansible | TASK [include vars] *********************************************************************************************
2021-06-15 12:39:12,900 p=726285 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:39:12,906 p=726285 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:39:12,913 p=726285 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 12:39:13,349 p=726285 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 12:39:13,352 p=726285 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 12:39:13,358 p=726285 u=ansible n=ansible | TASK [install web client packages] ******************************************************************************
2021-06-15 12:39:17,138 p=726285 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-15 12:39:17,256 p=726285 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-15 12:39:17,260 p=726285 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 12:39:17,260 p=726285 u=ansible n=ansible | ansible1.example.com       : ok=12   changed=3    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 12:39:17,260 p=726285 u=ansible n=ansible | ansible2.example.com       : ok=7    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 12:39:17,260 p=726285 u=ansible n=ansible | ansible3.example.com       : ok=7    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 12:39:17,260 p=726285 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 12:39:17,261 p=726285 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 12:39:45,053 p=726963 u=ansible n=ansible | [WARNING]: Consider using the yum, dnf or zypper module rather than running 'rpm'.  If you need to use command
because yum, dnf or zypper is insufficient you can add 'warn: false' to this command task or set
'command_warnings=False' in ansible.cfg to get rid of this message.

2021-06-15 12:39:45,053 p=726963 u=ansible n=ansible | ansible3.example.com | CHANGED | rc=0 >>
elinks-0.12-0.58.pre6.el8.x86_64

2021-06-15 12:39:45,065 p=726963 u=ansible n=ansible | ansible2.example.com | CHANGED | rc=0 >>
elinks-0.12-0.58.pre6.el8.x86_64

2021-06-15 12:46:50,888 p=729956 u=ansible n=ansible | [WARNING]: Consider using the yum, dnf or zypper module rather than running 'rpm'.  If you need to use command
because yum, dnf or zypper is insufficient you can add 'warn: false' to this command task or set
'command_warnings=False' in ansible.cfg to get rid of this message.

2021-06-15 12:46:50,889 p=729956 u=ansible n=ansible | ansible1.example.com | CHANGED | rc=0 >>


2021-06-15 12:46:50,903 p=729956 u=ansible n=ansible | ansible3.example.com | CHANGED | rc=0 >>
elinks-0.12-0.58.pre6.el8.x86_64

2021-06-15 12:46:50,994 p=729956 u=ansible n=ansible | ansible2.example.com | CHANGED | rc=0 >>
elinks-0.12-0.58.pre6.el8.x86_64

2021-06-15 12:46:51,140 p=729956 u=ansible n=ansible | control.example.com | CHANGED | rc=0 >>


2021-06-15 12:46:51,271 p=729956 u=ansible n=ansible | ansible4.example.com | CHANGED | rc=0 >>


2021-06-15 13:07:57,688 p=739132 u=ansible n=ansible | PLAY [task6] ****************************************************************************************************
2021-06-15 13:07:57,697 p=739132 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 13:07:59,332 p=739132 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 13:07:59,436 p=739132 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 13:07:59,536 p=739132 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 13:07:59,543 p=739132 u=ansible n=ansible | TASK [task6 : copy template file] *******************************************************************************
2021-06-15 13:08:00,537 p=739132 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-15 13:08:00,579 p=739132 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 13:08:00,594 p=739132 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-15 13:08:00,601 p=739132 u=ansible n=ansible | TASK [task6 : restart ssh] **************************************************************************************
2021-06-15 13:08:01,422 p=739132 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-15 13:08:01,499 p=739132 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 13:08:01,521 p=739132 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-15 13:08:01,528 p=739132 u=ansible n=ansible | TASK [ensure selinux is enforcing] ******************************************************************************
2021-06-15 13:08:02,284 p=739132 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 13:08:02,297 p=739132 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 13:08:02,307 p=739132 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 13:08:02,313 p=739132 u=ansible n=ansible | TASK [update selinux to use port 2022/tcp] **********************************************************************
2021-06-15 13:08:03,588 p=739132 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 13:08:03,780 p=739132 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 13:08:04,217 p=739132 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 13:08:04,223 p=739132 u=ansible n=ansible | TASK [open the firewall for port 2022] **************************************************************************
2021-06-15 13:08:05,256 p=739132 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 13:08:05,464 p=739132 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 13:08:05,477 p=739132 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 13:08:05,484 p=739132 u=ansible n=ansible | TASK [reload the firewalld service] *****************************************************************************
2021-06-15 13:08:06,986 p=739132 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 13:08:07,158 p=739132 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-15 13:08:07,290 p=739132 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-15 13:08:07,293 p=739132 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 13:08:07,293 p=739132 u=ansible n=ansible | ansible2.example.com       : ok=7    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 13:08:07,294 p=739132 u=ansible n=ansible | ansible3.example.com       : ok=7    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 13:08:07,294 p=739132 u=ansible n=ansible | ansible4.example.com       : ok=7    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 13:13:31,978 p=741777 u=ansible n=ansible | PLAY [task7 generic "web" playbook] *****************************************************************************
2021-06-15 13:13:31,986 p=741777 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 13:13:33,585 p=741777 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 13:13:33,676 p=741777 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 13:13:34,770 p=741777 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 13:13:34,832 p=741777 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 13:13:34,897 p=741777 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 13:13:34,905 p=741777 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 13:13:34,928 p=741777 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 13:13:34,939 p=741777 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 13:13:34,949 p=741777 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 13:13:34,950 p=741777 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 13:13:34,955 p=741777 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Server Tasks on Web Servers"
}
2021-06-15 13:13:34,963 p=741777 u=ansible n=ansible | TASK [run task7-server.yml against webservers] ******************************************************************
2021-06-15 13:13:35,042 p=741777 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 13:13:35,042 p=741777 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-15 13:13:35,051 p=741777 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-15 13:13:35,063 p=741777 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 13:13:35,091 p=741777 u=ansible n=ansible | included: /home/ansible/task7/task7-server.yml for ansible1.example.com
2021-06-15 13:13:35,100 p=741777 u=ansible n=ansible | TASK [include vars] *********************************************************************************************
2021-06-15 13:13:35,112 p=741777 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 13:13:35,119 p=741777 u=ansible n=ansible | TASK [install the web server package] ***************************************************************************
2021-06-15 13:13:36,379 p=741777 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 13:13:36,386 p=741777 u=ansible n=ansible | TASK [open firewalld for httpd] *********************************************************************************
2021-06-15 13:13:36,985 p=741777 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 13:13:36,992 p=741777 u=ansible n=ansible | TASK [reload firewalld] *****************************************************************************************
2021-06-15 13:13:38,090 p=741777 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 13:13:38,098 p=741777 u=ansible n=ansible | TASK [copy over the httpd.conf file as a jinja2 template] *******************************************************
2021-06-15 13:13:38,895 p=741777 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 13:13:38,902 p=741777 u=ansible n=ansible | TASK [copy over the vhost.conf file as a jinja2 template] *******************************************************
2021-06-15 13:13:39,482 p=741777 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-15 13:13:39,489 p=741777 u=ansible n=ansible | TASK [copy over the index.html file as a jinja2 template] *******************************************************
2021-06-15 13:13:40,192 p=741777 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 13:13:40,199 p=741777 u=ansible n=ansible | TASK [restart httpd] ********************************************************************************************
2021-06-15 13:13:41,723 p=741777 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-15 13:13:41,730 p=741777 u=ansible n=ansible | TASK [debug] ****************************************************************************************************
2021-06-15 13:13:41,755 p=741777 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 13:13:41,766 p=741777 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 13:13:41,777 p=741777 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 13:13:41,778 p=741777 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 13:13:41,784 p=741777 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "Running Client Tasks on Web Clients"
}
2021-06-15 13:13:41,791 p=741777 u=ansible n=ansible | TASK [run task7-client.yml against webclients] ******************************************************************
2021-06-15 13:13:41,856 p=741777 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 13:13:41,856 p=741777 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-15 13:13:41,876 p=741777 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 13:13:41,957 p=741777 u=ansible n=ansible | included: /home/ansible/task7/task7-client.yml for ansible2.example.com, ansible3.example.com
2021-06-15 13:13:41,970 p=741777 u=ansible n=ansible | TASK [include vars] *********************************************************************************************
2021-06-15 13:13:41,992 p=741777 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 13:13:41,993 p=741777 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 13:13:42,000 p=741777 u=ansible n=ansible | TASK [configure the redpen codeready-builder repository] ********************************************************
2021-06-15 13:13:42,472 p=741777 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 13:13:42,487 p=741777 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 13:13:42,493 p=741777 u=ansible n=ansible | TASK [install web client packages] ******************************************************************************
2021-06-15 13:13:45,505 p=741777 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 13:13:46,361 p=741777 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 13:13:46,363 p=741777 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 13:13:46,363 p=741777 u=ansible n=ansible | ansible1.example.com       : ok=12   changed=3    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 13:13:46,364 p=741777 u=ansible n=ansible | ansible2.example.com       : ok=7    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 13:13:46,364 p=741777 u=ansible n=ansible | ansible3.example.com       : ok=7    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 13:13:46,364 p=741777 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 13:13:46,364 p=741777 u=ansible n=ansible | control.example.com        : ok=3    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-15 13:44:39,013 p=752936 u=ansible n=ansible | ERROR! Invalid query. At least one search term, platform, galaxy tag or author must be provided.
2021-06-15 13:45:01,270 p=753105 u=ansible n=ansible | Using /home/ansible/ansible.cfg as config file
2021-06-15 13:49:08,446 p=754869 u=ansible n=ansible | ERROR! A playbook must be a list of plays, got a <class 'ansible.parsing.yaml.objects.AnsibleMapping'> instead

The error appears to be in '/home/ansible/galaxyroles.yml': line 2, column 1, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

---
roles:
^ here

2021-06-15 13:59:26,730 p=759203 u=ansible n=ansible | ERROR! A malformed block was encountered while loading tasks: {'shell': 'ansible-galaxy install -r requirements.yml'} should be a list or None but is <class 'ansible.parsing.yaml.objects.AnsibleMapping'>

The error appears to be in '/home/ansible/galaxyroles.yml': line 2, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

---
- name: install galaxy role on ansible4
  ^ here

2021-06-15 14:00:48,180 p=759780 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  mapping values are not allowed in this context

The error appears to be in '/home/ansible/galaxyroles.yml': line 7, column 12, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  - name: install from requirements file
      shell: "ansible-galaxy install -r requirements.yml"
           ^ here

2021-06-15 14:01:04,921 p=759917 u=ansible n=ansible | PLAY [install galaxy role on ansible4] **************************************************************************
2021-06-15 14:01:04,929 p=759917 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 14:01:06,296 p=759917 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 14:01:06,304 p=759917 u=ansible n=ansible | TASK [install from requirements file] ***************************************************************************
2021-06-15 14:01:06,686 p=759917 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 14:01:06,687 p=759917 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 14:01:06,687 p=759917 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 14:01:11,345 p=759993 u=ansible n=ansible | PLAY [install galaxy role on ansible4] **************************************************************************
2021-06-15 14:01:11,353 p=759993 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 14:01:12,291 p=759993 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 14:01:12,299 p=759993 u=ansible n=ansible | TASK [install from requirements file] ***************************************************************************
2021-06-15 14:01:12,679 p=759993 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": true, "cmd": "ansible-galaxy install -r requirements.yml", "delta": "0:00:00.002859", "end": "2021-06-15 14:01:12.639533", "msg": "non-zero return code", "rc": 127, "start": "2021-06-15 14:01:12.636674", "stderr": "/bin/sh: ansible-galaxy: command not found", "stderr_lines": ["/bin/sh: ansible-galaxy: command not found"], "stdout": "", "stdout_lines": []}
2021-06-15 14:01:12,680 p=759993 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 14:01:12,680 p=759993 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 14:02:18,297 p=760495 u=ansible n=ansible | PLAY [install galaxy role on ansible4] **************************************************************************
2021-06-15 14:02:18,305 p=760495 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 14:02:19,385 p=760495 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 14:02:19,393 p=760495 u=ansible n=ansible | TASK [install from requirements file] ***************************************************************************
2021-06-15 14:02:19,764 p=760495 u=ansible n=ansible | skipping: [control.example.com]
2021-06-15 14:02:19,767 p=760495 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 14:02:19,767 p=760495 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-15 14:02:24,341 p=760855 u=ansible n=ansible | PLAY [install galaxy role on ansible4] **************************************************************************
2021-06-15 14:02:24,349 p=760855 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 14:02:25,260 p=760855 u=ansible n=ansible | ok: [control.example.com]
2021-06-15 14:02:25,268 p=760855 u=ansible n=ansible | TASK [install from requirements file] ***************************************************************************
2021-06-15 14:02:26,029 p=761155 u=root n=ansible | - downloading role 'redis', owned by geerlingguy
2021-06-15 14:02:26,455 p=761155 u=root n=ansible | - downloading role from https://github.com/geerlingguy/ansible-role-redis/archive/1.7.0.tar.gz
2021-06-15 14:02:26,758 p=761155 u=root n=ansible | - extracting redis to /root/.ansible/roles/redis
2021-06-15 14:02:26,764 p=761155 u=root n=ansible | - redis (1.7.0) was installed successfully
2021-06-15 14:02:26,764 p=761155 u=root n=ansible | - downloading role 'nginx', owned by geerlingguy
2021-06-15 14:02:27,168 p=761155 u=root n=ansible | - downloading role from https://github.com/geerlingguy/ansible-role-nginx/archive/3.0.0.tar.gz
2021-06-15 14:02:27,431 p=761155 u=root n=ansible | - extracting nginx to /root/.ansible/roles/nginx
2021-06-15 14:02:27,438 p=761155 u=root n=ansible | - nginx (3.0.0) was installed successfully
2021-06-15 14:02:27,517 p=760855 u=ansible n=ansible | changed: [control.example.com]
2021-06-15 14:02:27,519 p=760855 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 14:02:27,519 p=760855 u=ansible n=ansible | control.example.com        : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 14:05:33,270 p=762559 u=ansible n=ansible | - downloading role 'redis', owned by geerlingguy
2021-06-15 14:05:33,632 p=762559 u=ansible n=ansible | - downloading role from https://github.com/geerlingguy/ansible-role-redis/archive/1.7.0.tar.gz
2021-06-15 14:05:33,875 p=762559 u=ansible n=ansible | - extracting redis to /home/ansible/.ansible/roles/redis
2021-06-15 14:05:33,878 p=762559 u=ansible n=ansible | - redis (1.7.0) was installed successfully
2021-06-15 14:05:33,878 p=762559 u=ansible n=ansible | - downloading role 'nginx', owned by geerlingguy
2021-06-15 14:05:34,848 p=762559 u=ansible n=ansible | - downloading role from https://github.com/geerlingguy/ansible-role-nginx/archive/3.0.0.tar.gz
2021-06-15 14:05:35,087 p=762559 u=ansible n=ansible | - extracting nginx to /home/ansible/.ansible/roles/nginx
2021-06-15 14:05:35,091 p=762559 u=ansible n=ansible | - nginx (3.0.0) was installed successfully
2021-06-15 14:11:20,271 p=765117 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  found character that cannot start any token

The error appears to be in '/home/ansible/galaxyroles.yml': line 6, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    - redis
    `- nginx
    ^ here

2021-06-15 14:11:27,578 p=765173 u=ansible n=ansible | PLAY [install galaxy role on ansible4] **************************************************************************
2021-06-15 14:11:27,589 p=765173 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 14:11:28,882 p=765173 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 14:11:28,889 p=765173 u=ansible n=ansible | TASK [redis : Include OS-specific variables.] *******************************************************************
2021-06-15 14:11:28,918 p=765173 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 14:11:28,925 p=765173 u=ansible n=ansible | TASK [Define redis_package.] ************************************************************************************
2021-06-15 14:11:28,952 p=765173 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 14:11:28,959 p=765173 u=ansible n=ansible | TASK [redis : Ensure Redis configuration dir exists.] ***********************************************************
2021-06-15 14:11:29,354 p=765173 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 14:11:29,361 p=765173 u=ansible n=ansible | TASK [redis : Ensure Redis is configured.] **********************************************************************
2021-06-15 14:11:29,746 p=765173 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 14:11:29,753 p=765173 u=ansible n=ansible | TASK [redis : include_tasks] ************************************************************************************
2021-06-15 14:11:29,786 p=765173 u=ansible n=ansible | included: /home/ansible/.ansible/roles/redis/tasks/setup-RedHat.yml for ansible4.example.com
2021-06-15 14:11:29,794 p=765173 u=ansible n=ansible | TASK [redis : Ensure Redis is installed.] ***********************************************************************
2021-06-15 14:11:31,588 p=765173 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 14:11:31,595 p=765173 u=ansible n=ansible | TASK [redis : include_tasks] ************************************************************************************
2021-06-15 14:11:31,621 p=765173 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 14:11:31,627 p=765173 u=ansible n=ansible | TASK [redis : include_tasks] ************************************************************************************
2021-06-15 14:11:31,653 p=765173 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 14:11:31,659 p=765173 u=ansible n=ansible | TASK [redis : Ensure Redis is running and enabled on boot.] *****************************************************
2021-06-15 14:11:32,270 p=765173 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 14:11:32,277 p=765173 u=ansible n=ansible | TASK [nginx : Include OS-specific variables.] *******************************************************************
2021-06-15 14:11:32,303 p=765173 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 14:11:32,309 p=765173 u=ansible n=ansible | TASK [Define nginx_user.] ***************************************************************************************
2021-06-15 14:11:32,338 p=765173 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 14:11:32,345 p=765173 u=ansible n=ansible | TASK [nginx : include_tasks] ************************************************************************************
2021-06-15 14:11:32,377 p=765173 u=ansible n=ansible | included: /home/ansible/.ansible/roles/nginx/tasks/setup-RedHat.yml for ansible4.example.com
2021-06-15 14:11:32,386 p=765173 u=ansible n=ansible | TASK [Enable nginx repo.] ***************************************************************************************
2021-06-15 14:11:32,710 p=765173 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 14:11:32,717 p=765173 u=ansible n=ansible | TASK [Ensure nginx is installed.] *******************************************************************************
2021-06-15 14:11:33,788 p=765173 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 14:11:33,795 p=765173 u=ansible n=ansible | TASK [nginx : include_tasks] ************************************************************************************
2021-06-15 14:11:33,821 p=765173 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 14:11:33,827 p=765173 u=ansible n=ansible | TASK [nginx : include_tasks] ************************************************************************************
2021-06-15 14:11:33,852 p=765173 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 14:11:33,859 p=765173 u=ansible n=ansible | TASK [nginx : include_tasks] ************************************************************************************
2021-06-15 14:11:33,883 p=765173 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 14:11:33,890 p=765173 u=ansible n=ansible | TASK [nginx : include_tasks] ************************************************************************************
2021-06-15 14:11:33,914 p=765173 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 14:11:33,920 p=765173 u=ansible n=ansible | TASK [nginx : include_tasks] ************************************************************************************
2021-06-15 14:11:33,946 p=765173 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 14:11:33,952 p=765173 u=ansible n=ansible | TASK [Remove default nginx vhost config file (if configured).] **************************************************
2021-06-15 14:11:33,976 p=765173 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 14:11:33,982 p=765173 u=ansible n=ansible | TASK [Ensure nginx_vhost_path exists.] **************************************************************************
2021-06-15 14:11:34,320 p=765173 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 14:11:34,334 p=765173 u=ansible n=ansible | TASK [nginx : Add managed vhost config files.] ******************************************************************
2021-06-15 14:11:34,365 p=765173 u=ansible n=ansible | TASK [nginx : Remove managed vhost config files.] ***************************************************************
2021-06-15 14:11:34,396 p=765173 u=ansible n=ansible | TASK [nginx : Remove legacy vhosts.conf file.] ******************************************************************
2021-06-15 14:11:34,727 p=765173 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 14:11:34,734 p=765173 u=ansible n=ansible | TASK [Copy nginx configuration in place.] ***********************************************************************
2021-06-15 14:11:35,074 p=765173 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 14:11:35,081 p=765173 u=ansible n=ansible | TASK [Ensure nginx service is running as configured.] ***********************************************************
2021-06-15 14:11:35,516 p=765173 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 14:11:35,517 p=765173 u=ansible n=ansible | RUNNING HANDLER [restart redis] *********************************************************************************
2021-06-15 14:11:35,966 p=765173 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 14:11:35,967 p=765173 u=ansible n=ansible | RUNNING HANDLER [reload nginx] **********************************************************************************
2021-06-15 14:11:36,406 p=765173 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 14:11:36,407 p=765173 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 14:11:36,407 p=765173 u=ansible n=ansible | ansible4.example.com       : ok=19   changed=10   unreachable=0    failed=0    skipped=10   rescued=0    ignored=0   
2021-06-15 14:11:52,116 p=765507 u=ansible n=ansible | PLAY [install galaxy role on ansible4] **************************************************************************
2021-06-15 14:11:52,127 p=765507 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 14:11:53,071 p=765507 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 14:11:53,079 p=765507 u=ansible n=ansible | TASK [redis : Include OS-specific variables.] *******************************************************************
2021-06-15 14:11:53,108 p=765507 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 14:11:53,115 p=765507 u=ansible n=ansible | TASK [Define redis_package.] ************************************************************************************
2021-06-15 14:11:53,144 p=765507 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 14:11:53,151 p=765507 u=ansible n=ansible | TASK [redis : Ensure Redis configuration dir exists.] ***********************************************************
2021-06-15 14:11:53,556 p=765507 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 14:11:53,563 p=765507 u=ansible n=ansible | TASK [redis : Ensure Redis is configured.] **********************************************************************
2021-06-15 14:11:53,950 p=765507 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 14:11:53,956 p=765507 u=ansible n=ansible | TASK [redis : include_tasks] ************************************************************************************
2021-06-15 14:11:53,989 p=765507 u=ansible n=ansible | included: /home/ansible/.ansible/roles/redis/tasks/setup-RedHat.yml for ansible4.example.com
2021-06-15 14:11:53,997 p=765507 u=ansible n=ansible | TASK [redis : Ensure Redis is installed.] ***********************************************************************
2021-06-15 14:11:55,208 p=765507 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 14:11:55,215 p=765507 u=ansible n=ansible | TASK [redis : include_tasks] ************************************************************************************
2021-06-15 14:11:55,243 p=765507 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 14:11:55,249 p=765507 u=ansible n=ansible | TASK [redis : include_tasks] ************************************************************************************
2021-06-15 14:11:55,273 p=765507 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 14:11:55,280 p=765507 u=ansible n=ansible | TASK [redis : Ensure Redis is running and enabled on boot.] *****************************************************
2021-06-15 14:11:55,874 p=765507 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 14:11:55,880 p=765507 u=ansible n=ansible | TASK [nginx : Include OS-specific variables.] *******************************************************************
2021-06-15 14:11:55,908 p=765507 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 14:11:55,915 p=765507 u=ansible n=ansible | TASK [Define nginx_user.] ***************************************************************************************
2021-06-15 14:11:55,941 p=765507 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 14:11:55,948 p=765507 u=ansible n=ansible | TASK [nginx : include_tasks] ************************************************************************************
2021-06-15 14:11:55,981 p=765507 u=ansible n=ansible | included: /home/ansible/.ansible/roles/nginx/tasks/setup-RedHat.yml for ansible4.example.com
2021-06-15 14:11:55,990 p=765507 u=ansible n=ansible | TASK [Enable nginx repo.] ***************************************************************************************
2021-06-15 14:11:56,320 p=765507 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 14:11:56,326 p=765507 u=ansible n=ansible | TASK [Ensure nginx is installed.] *******************************************************************************
2021-06-15 14:11:57,441 p=765507 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 14:11:57,447 p=765507 u=ansible n=ansible | TASK [nginx : include_tasks] ************************************************************************************
2021-06-15 14:11:57,472 p=765507 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 14:11:57,478 p=765507 u=ansible n=ansible | TASK [nginx : include_tasks] ************************************************************************************
2021-06-15 14:11:57,503 p=765507 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 14:11:57,510 p=765507 u=ansible n=ansible | TASK [nginx : include_tasks] ************************************************************************************
2021-06-15 14:11:57,536 p=765507 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 14:11:57,543 p=765507 u=ansible n=ansible | TASK [nginx : include_tasks] ************************************************************************************
2021-06-15 14:11:57,567 p=765507 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 14:11:57,573 p=765507 u=ansible n=ansible | TASK [nginx : include_tasks] ************************************************************************************
2021-06-15 14:11:57,599 p=765507 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 14:11:57,606 p=765507 u=ansible n=ansible | TASK [Remove default nginx vhost config file (if configured).] **************************************************
2021-06-15 14:11:57,630 p=765507 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-15 14:11:57,637 p=765507 u=ansible n=ansible | TASK [Ensure nginx_vhost_path exists.] **************************************************************************
2021-06-15 14:11:57,972 p=765507 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 14:11:57,979 p=765507 u=ansible n=ansible | TASK [nginx : Add managed vhost config files.] ******************************************************************
2021-06-15 14:11:58,010 p=765507 u=ansible n=ansible | TASK [nginx : Remove managed vhost config files.] ***************************************************************
2021-06-15 14:11:58,041 p=765507 u=ansible n=ansible | TASK [nginx : Remove legacy vhosts.conf file.] ******************************************************************
2021-06-15 14:11:58,372 p=765507 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 14:11:58,379 p=765507 u=ansible n=ansible | TASK [Copy nginx configuration in place.] ***********************************************************************
2021-06-15 14:11:58,721 p=765507 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 14:11:58,728 p=765507 u=ansible n=ansible | TASK [Ensure nginx service is running as configured.] ***********************************************************
2021-06-15 14:11:59,184 p=765507 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 14:11:59,185 p=765507 u=ansible n=ansible | RUNNING HANDLER [restart redis] *********************************************************************************
2021-06-15 14:11:59,634 p=765507 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 14:11:59,634 p=765507 u=ansible n=ansible | RUNNING HANDLER [reload nginx] **********************************************************************************
2021-06-15 14:12:00,093 p=765507 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 14:12:00,095 p=765507 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 14:12:00,095 p=765507 u=ansible n=ansible | ansible4.example.com       : ok=19   changed=10   unreachable=0    failed=0    skipped=10   rescued=0    ignored=0   
2021-06-15 14:41:14,203 p=777976 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  mapping values are not allowed in this context

The error appears to be in '/home/ansible/task9.yml': line 6, column 15, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    -name: copy over the motd file
      template:
              ^ here

2021-06-15 14:41:44,526 p=778194 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  could not find expected ':'

The error appears to be in '/home/ansible/task9.yml': line 4, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  hostoiiiirvers
  tasks:
  ^ here

2021-06-15 14:42:00,254 p=778306 u=ansible n=ansible | ERROR! 'host' is not a valid attribute for a Play

The error appears to be in '/home/ansible/task9.yml': line 2, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

---
- name: generate motd using a template
  ^ here

2021-06-15 14:42:16,874 p=778432 u=ansible n=ansible | ERROR! 'host' is not a valid attribute for a Play

The error appears to be in '/home/ansible/task9.yml': line 2, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

---
- name: generate motd using a template
  ^ here

2021-06-15 14:42:34,852 p=778566 u=ansible n=ansible | PLAY [generate motd using a template] ***************************************************************************
2021-06-15 14:42:34,865 p=778566 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 14:42:36,559 p=778566 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 14:42:36,603 p=778566 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 14:42:36,606 p=778566 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 14:42:36,614 p=778566 u=ansible n=ansible | TASK [copy over the motd file] **********************************************************************************
2021-06-15 14:42:37,168 p=778566 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-15 14:42:37,182 p=778566 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-15 14:42:37,252 p=778566 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 14:42:37,254 p=778566 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 14:42:37,254 p=778566 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 14:42:37,254 p=778566 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 14:42:37,254 p=778566 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 14:42:43,134 p=778703 u=ansible n=ansible | PLAY [generate motd using a template] ***************************************************************************
2021-06-15 14:42:43,141 p=778703 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 14:42:44,352 p=778703 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 14:42:44,405 p=778703 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 14:42:44,419 p=778703 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 14:42:44,427 p=778703 u=ansible n=ansible | TASK [copy over the motd file] **********************************************************************************
2021-06-15 14:42:45,505 p=778703 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 14:42:45,571 p=778703 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-15 14:42:45,573 p=778703 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-15 14:42:45,575 p=778703 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 14:42:45,575 p=778703 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 14:42:45,575 p=778703 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 14:42:45,575 p=778703 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 14:43:02,214 p=778920 u=ansible n=ansible | ansible4.example.com | CHANGED | rc=0 >>
Welcome to RDL System - ansible4.example.com

2021-06-15 14:43:02,245 p=778920 u=ansible n=ansible | ansible2.example.com | CHANGED | rc=0 >>
Welcome to RDL System - ansible2.example.com

2021-06-15 14:43:02,277 p=778920 u=ansible n=ansible | ansible3.example.com | CHANGED | rc=0 >>
Welcome to RDL System - ansible3.example.com

2021-06-15 14:44:06,706 p=779413 u=ansible n=ansible | localhost | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.200"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::d0eb:2348:63a1:cb77"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel/swap",
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_date_time": {
            "date": "2021-06-15",
            "day": "15",
            "epoch": "1623782646",
            "hour": "14",
            "iso8601": "2021-06-15T18:44:06Z",
            "iso8601_basic": "20210615T144406421349",
            "iso8601_basic_short": "20210615T144406",
            "iso8601_micro": "2021-06-15T18:44:06.421349Z",
            "minute": "44",
            "month": "06",
            "second": "06",
            "time": "14:44:06",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Tuesday",
            "weekday_number": "2",
            "weeknumber": "24",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.200",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:72:63:77",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel-root",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                ],
                "dm-1": [
                    "dm-name-rhel-swap",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                ],
                "sda3": [
                    "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "e582775b-f787-42fb-a7da-e66ffb7a210a"
                ],
                "dm-1": [
                    "521d3469-ac8d-490e-9c79-a6fd59024de4"
                ],
                "sda1": [
                    "6723-A89C"
                ],
                "sda2": [
                    "1e4b2b4a-ea26-430e-978c-de3884071e82"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-root",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "e582775b-f787-42fb-a7da-e66ffb7a210a"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-swap",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "521d3469-ac8d-490e-9c79-a6fd59024de4"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "6723-A89C"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "6723-A89C"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "1e4b2b4a-ea26-430e-978c-de3884071e82"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
                    },
                    "sda3": {
                        "holders": [
                            "rhel-swap",
                            "rhel-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "on",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.200",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::d0eb:2348:63a1:cb77",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:72:63:77",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HISTSIZE": "1000",
            "HOME": "/root",
            "HOSTNAME": "control.example.com",
            "LANG": "en_US.UTF-8",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/spool/mail/ansible",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-sazwbrhvdhwwxrefcfzqmyykjzkuckow ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1623782646.0041564-779427-82619892263711/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "control.example.com",
        "ansible_hostname": "control",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "lo",
            "ens192"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:9a8e963cc88",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel"
                }
            },
            "vgs": {
                "rhel": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "36e2124a40614e3796fa06fcece0515e",
        "ansible_memfree_mb": 846,
        "ansible_memory_mb": {
            "nocache": {
                "free": 1377,
                "used": 449
            },
            "real": {
                "free": 846,
                "total": 1826,
                "used": 980
            },
            "swap": {
                "cached": 0,
                "free": 2047,
                "total": 2047,
                "used": 0
            }
        },
        "ansible_memtotal_mb": 1826,
        "ansible_mounts": [
            {
                "block_available": 3728524,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 570740,
                "device": "/dev/mapper/rhel-root",
                "fstype": "xfs",
                "inode_available": 8542471,
                "inode_total": 8603648,
                "inode_used": 61177,
                "mount": "/",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 15272034304,
                "size_total": 17609785344,
                "uuid": "e582775b-f787-42fb-a7da-e66ffb7a210a"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "6723-A89C"
            },
            {
                "block_available": 0,
                "block_size": 2048,
                "block_total": 4119280,
                "block_used": 4119280,
                "device": "/dev/sr0",
                "fstype": "iso9660",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/var/ftp/repo",
                "options": "ro,relatime,nojoliet,check=s,map=n,blocksize=2048",
                "size_available": 0,
                "size_total": 8436285440,
                "uuid": "2020-04-04-08-21-15-00"
            }
        ],
        "ansible_nodename": "control.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel/root",
                "rhel/swap"
            ],
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz",
            "1",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 2,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 2,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d 94 78 3e 53 21 2f-3c a5 64 70 c9 72 63 77",
        "ansible_product_uuid": "78944d56-533e-2f21-3ca5-6470c9726377",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "status": "disabled"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNhudUrTlfCgvAC31V1YPiPwqZKT7aFesPRbEGXj9B4esh+OI7dNbiUJPoteI+AqIZRzShz0BsfOtvfZux0v/dY=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIFC1LRLHGmTZfUEs+knXPYfQFkHnOTUCDib6l7DGR1F6",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQDTuLOzAeNf8ZQj8Qu64SLTprDRnagiihI/gUAzQX5NR8mkfVecF3591Hw0bY7d4OYL2GSa22Q97lWpSRMZzEe5kd0cIFTTg/coqMIK/VOKJvQarjnjj7rnrLnG8WJprf6kxITc7AuIWXTeD/vqgs/lBcdbD77PBXAShSj1dFD6qej4G7zOpo4OeQ0EWjbDQaRCqBWcTbaGEs2TpvIacfKSlWQ/tIvmcJQ2sVHqiGJ/AkRLMn4AHoKi5t7RKWT7HHhnc7ZDu686KGiplcSsiF/T37b6WneuS96tLNTUYbpT4Ot2zrYFYbo0YwRuzM1Jwpa/f3x0hoY7Lak/o3j6lDv5y9AhwhytPAKz8da2FLi2sna2Ve7913M9GMSiP41fRHnoLsqMy89IHDLm8vkJUjZxzRo7e4i4K5mXK/My7V5nGc3J8bJrmXCEzDDJfS42MuCmINcuz2MCjuvduwCrXroDHqrHMe306r1F9TQTeWlIJNSBwAuuC+FN8zVhlkJRiqc=",
        "ansible_swapfree_mb": 2047,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 868645,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-15 14:44:12,866 p=779527 u=ansible n=ansible | localhost | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.200"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::d0eb:2348:63a1:cb77"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel/swap",
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_date_time": {
            "date": "2021-06-15",
            "day": "15",
            "epoch": "1623782652",
            "hour": "14",
            "iso8601": "2021-06-15T18:44:12Z",
            "iso8601_basic": "20210615T144412820071",
            "iso8601_basic_short": "20210615T144412",
            "iso8601_micro": "2021-06-15T18:44:12.820071Z",
            "minute": "44",
            "month": "06",
            "second": "12",
            "time": "14:44:12",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Tuesday",
            "weekday_number": "2",
            "weeknumber": "24",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.200",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:72:63:77",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel-root",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                ],
                "dm-1": [
                    "dm-name-rhel-swap",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                ],
                "sda3": [
                    "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "e582775b-f787-42fb-a7da-e66ffb7a210a"
                ],
                "dm-1": [
                    "521d3469-ac8d-490e-9c79-a6fd59024de4"
                ],
                "sda1": [
                    "6723-A89C"
                ],
                "sda2": [
                    "1e4b2b4a-ea26-430e-978c-de3884071e82"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-root",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "e582775b-f787-42fb-a7da-e66ffb7a210a"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-swap",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "521d3469-ac8d-490e-9c79-a6fd59024de4"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "6723-A89C"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "6723-A89C"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "1e4b2b4a-ea26-430e-978c-de3884071e82"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
                    },
                    "sda3": {
                        "holders": [
                            "rhel-swap",
                            "rhel-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "on",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.200",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::d0eb:2348:63a1:cb77",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:72:63:77",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HISTSIZE": "1000",
            "HOME": "/root",
            "HOSTNAME": "control.example.com",
            "LANG": "en_US.UTF-8",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/spool/mail/ansible",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-yvcisqpzctlfhnmxtjskbufdafwzxgsp ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1623782652.1782475-779541-152905188169098/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "control.example.com",
        "ansible_hostname": "control",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "ens192",
            "lo"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:9a8e963cc88",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel"
                }
            },
            "vgs": {
                "rhel": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "36e2124a40614e3796fa06fcece0515e",
        "ansible_memfree_mb": 873,
        "ansible_memory_mb": {
            "nocache": {
                "free": 1404,
                "used": 422
            },
            "real": {
                "free": 873,
                "total": 1826,
                "used": 953
            },
            "swap": {
                "cached": 0,
                "free": 2047,
                "total": 2047,
                "used": 0
            }
        },
        "ansible_memtotal_mb": 1826,
        "ansible_mounts": [
            {
                "block_available": 3728413,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 570851,
                "device": "/dev/mapper/rhel-root",
                "fstype": "xfs",
                "inode_available": 8542471,
                "inode_total": 8603648,
                "inode_used": 61177,
                "mount": "/",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 15271579648,
                "size_total": 17609785344,
                "uuid": "e582775b-f787-42fb-a7da-e66ffb7a210a"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "6723-A89C"
            },
            {
                "block_available": 0,
                "block_size": 2048,
                "block_total": 4119280,
                "block_used": 4119280,
                "device": "/dev/sr0",
                "fstype": "iso9660",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/var/ftp/repo",
                "options": "ro,relatime,nojoliet,check=s,map=n,blocksize=2048",
                "size_available": 0,
                "size_total": 8436285440,
                "uuid": "2020-04-04-08-21-15-00"
            }
        ],
        "ansible_nodename": "control.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel/root",
                "rhel/swap"
            ],
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz",
            "1",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 2,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 2,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d 94 78 3e 53 21 2f-3c a5 64 70 c9 72 63 77",
        "ansible_product_uuid": "78944d56-533e-2f21-3ca5-6470c9726377",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "status": "disabled"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNhudUrTlfCgvAC31V1YPiPwqZKT7aFesPRbEGXj9B4esh+OI7dNbiUJPoteI+AqIZRzShz0BsfOtvfZux0v/dY=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIFC1LRLHGmTZfUEs+knXPYfQFkHnOTUCDib6l7DGR1F6",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQDTuLOzAeNf8ZQj8Qu64SLTprDRnagiihI/gUAzQX5NR8mkfVecF3591Hw0bY7d4OYL2GSa22Q97lWpSRMZzEe5kd0cIFTTg/coqMIK/VOKJvQarjnjj7rnrLnG8WJprf6kxITc7AuIWXTeD/vqgs/lBcdbD77PBXAShSj1dFD6qej4G7zOpo4OeQ0EWjbDQaRCqBWcTbaGEs2TpvIacfKSlWQ/tIvmcJQ2sVHqiGJ/AkRLMn4AHoKi5t7RKWT7HHhnc7ZDu686KGiplcSsiF/T37b6WneuS96tLNTUYbpT4Ot2zrYFYbo0YwRuzM1Jwpa/f3x0hoY7Lak/o3j6lDv5y9AhwhytPAKz8da2FLi2sna2Ve7913M9GMSiP41fRHnoLsqMy89IHDLm8vkJUjZxzRo7e4i4K5mXK/My7V5nGc3J8bJrmXCEzDDJfS42MuCmINcuz2MCjuvduwCrXroDHqrHMe306r1F9TQTeWlIJNSBwAuuC+FN8zVhlkJRiqc=",
        "ansible_swapfree_mb": 2047,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 868651,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-15 14:44:19,454 p=779631 u=ansible n=ansible | localhost | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.200"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::d0eb:2348:63a1:cb77"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel/swap",
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_date_time": {
            "date": "2021-06-15",
            "day": "15",
            "epoch": "1623782658",
            "hour": "14",
            "iso8601": "2021-06-15T18:44:18Z",
            "iso8601_basic": "20210615T144418161419",
            "iso8601_basic_short": "20210615T144418",
            "iso8601_micro": "2021-06-15T18:44:18.161419Z",
            "minute": "44",
            "month": "06",
            "second": "18",
            "time": "14:44:18",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Tuesday",
            "weekday_number": "2",
            "weeknumber": "24",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.200",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:72:63:77",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel-root",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                ],
                "dm-1": [
                    "dm-name-rhel-swap",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                ],
                "sda3": [
                    "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "e582775b-f787-42fb-a7da-e66ffb7a210a"
                ],
                "dm-1": [
                    "521d3469-ac8d-490e-9c79-a6fd59024de4"
                ],
                "sda1": [
                    "6723-A89C"
                ],
                "sda2": [
                    "1e4b2b4a-ea26-430e-978c-de3884071e82"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-root",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "e582775b-f787-42fb-a7da-e66ffb7a210a"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-swap",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "521d3469-ac8d-490e-9c79-a6fd59024de4"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "6723-A89C"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "6723-A89C"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "1e4b2b4a-ea26-430e-978c-de3884071e82"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
                    },
                    "sda3": {
                        "holders": [
                            "rhel-swap",
                            "rhel-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "on",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.200",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::d0eb:2348:63a1:cb77",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:72:63:77",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HISTSIZE": "1000",
            "HOME": "/root",
            "HOSTNAME": "control.example.com",
            "LANG": "en_US.UTF-8",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/spool/mail/ansible",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-atkrvntwxjpdkftvhcluhujvqicmzdzy ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1623782657.7650344-779638-223633353725947/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "control.example.com",
        "ansible_hostname": "control",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "ens192",
            "lo"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:9a8e963cc88",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel"
                }
            },
            "vgs": {
                "rhel": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "36e2124a40614e3796fa06fcece0515e",
        "ansible_memfree_mb": 873,
        "ansible_memory_mb": {
            "nocache": {
                "free": 1404,
                "used": 422
            },
            "real": {
                "free": 873,
                "total": 1826,
                "used": 953
            },
            "swap": {
                "cached": 0,
                "free": 2047,
                "total": 2047,
                "used": 0
            }
        },
        "ansible_memtotal_mb": 1826,
        "ansible_mounts": [
            {
                "block_available": 3728396,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 570868,
                "device": "/dev/mapper/rhel-root",
                "fstype": "xfs",
                "inode_available": 8542471,
                "inode_total": 8603648,
                "inode_used": 61177,
                "mount": "/",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 15271510016,
                "size_total": 17609785344,
                "uuid": "e582775b-f787-42fb-a7da-e66ffb7a210a"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "6723-A89C"
            },
            {
                "block_available": 0,
                "block_size": 2048,
                "block_total": 4119280,
                "block_used": 4119280,
                "device": "/dev/sr0",
                "fstype": "iso9660",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/var/ftp/repo",
                "options": "ro,relatime,nojoliet,check=s,map=n,blocksize=2048",
                "size_available": 0,
                "size_total": 8436285440,
                "uuid": "2020-04-04-08-21-15-00"
            }
        ],
        "ansible_nodename": "control.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel/root",
                "rhel/swap"
            ],
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz",
            "1",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 2,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 2,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d 94 78 3e 53 21 2f-3c a5 64 70 c9 72 63 77",
        "ansible_product_uuid": "78944d56-533e-2f21-3ca5-6470c9726377",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "status": "disabled"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNhudUrTlfCgvAC31V1YPiPwqZKT7aFesPRbEGXj9B4esh+OI7dNbiUJPoteI+AqIZRzShz0BsfOtvfZux0v/dY=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIFC1LRLHGmTZfUEs+knXPYfQFkHnOTUCDib6l7DGR1F6",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQDTuLOzAeNf8ZQj8Qu64SLTprDRnagiihI/gUAzQX5NR8mkfVecF3591Hw0bY7d4OYL2GSa22Q97lWpSRMZzEe5kd0cIFTTg/coqMIK/VOKJvQarjnjj7rnrLnG8WJprf6kxITc7AuIWXTeD/vqgs/lBcdbD77PBXAShSj1dFD6qej4G7zOpo4OeQ0EWjbDQaRCqBWcTbaGEs2TpvIacfKSlWQ/tIvmcJQ2sVHqiGJ/AkRLMn4AHoKi5t7RKWT7HHhnc7ZDu686KGiplcSsiF/T37b6WneuS96tLNTUYbpT4Ot2zrYFYbo0YwRuzM1Jwpa/f3x0hoY7Lak/o3j6lDv5y9AhwhytPAKz8da2FLi2sna2Ve7913M9GMSiP41fRHnoLsqMy89IHDLm8vkJUjZxzRo7e4i4K5mXK/My7V5nGc3J8bJrmXCEzDDJfS42MuCmINcuz2MCjuvduwCrXroDHqrHMe306r1F9TQTeWlIJNSBwAuuC+FN8zVhlkJRiqc=",
        "ansible_swapfree_mb": 2047,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 868657,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-15 14:44:25,559 p=779742 u=ansible n=ansible | localhost | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.200"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::d0eb:2348:63a1:cb77"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel/swap",
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_date_time": {
            "date": "2021-06-15",
            "day": "15",
            "epoch": "1623782665",
            "hour": "14",
            "iso8601": "2021-06-15T18:44:25Z",
            "iso8601_basic": "20210615T144425208575",
            "iso8601_basic_short": "20210615T144425",
            "iso8601_micro": "2021-06-15T18:44:25.208575Z",
            "minute": "44",
            "month": "06",
            "second": "25",
            "time": "14:44:25",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Tuesday",
            "weekday_number": "2",
            "weeknumber": "24",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.200",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:72:63:77",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel-root",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                ],
                "dm-1": [
                    "dm-name-rhel-swap",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                ],
                "sda3": [
                    "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "e582775b-f787-42fb-a7da-e66ffb7a210a"
                ],
                "dm-1": [
                    "521d3469-ac8d-490e-9c79-a6fd59024de4"
                ],
                "sda1": [
                    "6723-A89C"
                ],
                "sda2": [
                    "1e4b2b4a-ea26-430e-978c-de3884071e82"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-root",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "e582775b-f787-42fb-a7da-e66ffb7a210a"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-swap",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "521d3469-ac8d-490e-9c79-a6fd59024de4"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "6723-A89C"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "6723-A89C"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "1e4b2b4a-ea26-430e-978c-de3884071e82"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
                    },
                    "sda3": {
                        "holders": [
                            "rhel-swap",
                            "rhel-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "on",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.200",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::d0eb:2348:63a1:cb77",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:72:63:77",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HISTSIZE": "1000",
            "HOME": "/root",
            "HOSTNAME": "control.example.com",
            "LANG": "C",
            "LC_ALL": "C",
            "LC_NUMERIC": "C",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/spool/mail/ansible",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-mjtivkjwntfiieapzpamonpxhkgomobp ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1623782664.808836-779748-189380104561782/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "control.example.com",
        "ansible_hostname": "control",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "ens192",
            "lo"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:9a8e963cc88",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel"
                }
            },
            "vgs": {
                "rhel": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "36e2124a40614e3796fa06fcece0515e",
        "ansible_memfree_mb": 871,
        "ansible_memory_mb": {
            "nocache": {
                "free": 1402,
                "used": 424
            },
            "real": {
                "free": 871,
                "total": 1826,
                "used": 955
            },
            "swap": {
                "cached": 0,
                "free": 2047,
                "total": 2047,
                "used": 0
            }
        },
        "ansible_memtotal_mb": 1826,
        "ansible_mounts": [
            {
                "block_available": 3728396,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 570868,
                "device": "/dev/mapper/rhel-root",
                "fstype": "xfs",
                "inode_available": 8542471,
                "inode_total": 8603648,
                "inode_used": 61177,
                "mount": "/",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 15271510016,
                "size_total": 17609785344,
                "uuid": "e582775b-f787-42fb-a7da-e66ffb7a210a"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "6723-A89C"
            },
            {
                "block_available": 0,
                "block_size": 2048,
                "block_total": 4119280,
                "block_used": 4119280,
                "device": "/dev/sr0",
                "fstype": "iso9660",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/var/ftp/repo",
                "options": "ro,relatime,nojoliet,check=s,map=n,blocksize=2048",
                "size_available": 0,
                "size_total": 8436285440,
                "uuid": "2020-04-04-08-21-15-00"
            }
        ],
        "ansible_nodename": "control.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel/root",
                "rhel/swap"
            ],
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz",
            "1",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 2,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 2,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d 94 78 3e 53 21 2f-3c a5 64 70 c9 72 63 77",
        "ansible_product_uuid": "78944d56-533e-2f21-3ca5-6470c9726377",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "status": "disabled"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNhudUrTlfCgvAC31V1YPiPwqZKT7aFesPRbEGXj9B4esh+OI7dNbiUJPoteI+AqIZRzShz0BsfOtvfZux0v/dY=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIFC1LRLHGmTZfUEs+knXPYfQFkHnOTUCDib6l7DGR1F6",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQDTuLOzAeNf8ZQj8Qu64SLTprDRnagiihI/gUAzQX5NR8mkfVecF3591Hw0bY7d4OYL2GSa22Q97lWpSRMZzEe5kd0cIFTTg/coqMIK/VOKJvQarjnjj7rnrLnG8WJprf6kxITc7AuIWXTeD/vqgs/lBcdbD77PBXAShSj1dFD6qej4G7zOpo4OeQ0EWjbDQaRCqBWcTbaGEs2TpvIacfKSlWQ/tIvmcJQ2sVHqiGJ/AkRLMn4AHoKi5t7RKWT7HHhnc7ZDu686KGiplcSsiF/T37b6WneuS96tLNTUYbpT4Ot2zrYFYbo0YwRuzM1Jwpa/f3x0hoY7Lak/o3j6lDv5y9AhwhytPAKz8da2FLi2sna2Ve7913M9GMSiP41fRHnoLsqMy89IHDLm8vkJUjZxzRo7e4i4K5mXK/My7V5nGc3J8bJrmXCEzDDJfS42MuCmINcuz2MCjuvduwCrXroDHqrHMe306r1F9TQTeWlIJNSBwAuuC+FN8zVhlkJRiqc=",
        "ansible_swapfree_mb": 2047,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 868664,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-15 14:45:49,142 p=780384 u=ansible n=ansible | localhost | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.200"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::d0eb:2348:63a1:cb77"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel/swap",
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_date_time": {
            "date": "2021-06-15",
            "day": "15",
            "epoch": "1623782748",
            "hour": "14",
            "iso8601": "2021-06-15T18:45:48Z",
            "iso8601_basic": "20210615T144548857817",
            "iso8601_basic_short": "20210615T144548",
            "iso8601_micro": "2021-06-15T18:45:48.857817Z",
            "minute": "45",
            "month": "06",
            "second": "48",
            "time": "14:45:48",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Tuesday",
            "weekday_number": "2",
            "weeknumber": "24",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.200",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:72:63:77",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel-root",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                ],
                "dm-1": [
                    "dm-name-rhel-swap",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                ],
                "sda3": [
                    "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "e582775b-f787-42fb-a7da-e66ffb7a210a"
                ],
                "dm-1": [
                    "521d3469-ac8d-490e-9c79-a6fd59024de4"
                ],
                "sda1": [
                    "6723-A89C"
                ],
                "sda2": [
                    "1e4b2b4a-ea26-430e-978c-de3884071e82"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-root",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "e582775b-f787-42fb-a7da-e66ffb7a210a"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-swap",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "521d3469-ac8d-490e-9c79-a6fd59024de4"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "6723-A89C"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "6723-A89C"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "1e4b2b4a-ea26-430e-978c-de3884071e82"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
                    },
                    "sda3": {
                        "holders": [
                            "rhel-swap",
                            "rhel-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "on",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.200",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::d0eb:2348:63a1:cb77",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:72:63:77",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HISTSIZE": "1000",
            "HOME": "/root",
            "HOSTNAME": "control.example.com",
            "LANG": "en_US.UTF-8",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/spool/mail/ansible",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-pvzfytkgqoszfdogippgkevsjigzkqcy ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1623782748.447601-780391-111173364249700/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "control.example.com",
        "ansible_hostname": "control",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "lo",
            "ens192"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:9a8e963cc88",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel"
                }
            },
            "vgs": {
                "rhel": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "36e2124a40614e3796fa06fcece0515e",
        "ansible_memfree_mb": 873,
        "ansible_memory_mb": {
            "nocache": {
                "free": 1404,
                "used": 422
            },
            "real": {
                "free": 873,
                "total": 1826,
                "used": 953
            },
            "swap": {
                "cached": 0,
                "free": 2047,
                "total": 2047,
                "used": 0
            }
        },
        "ansible_memtotal_mb": 1826,
        "ansible_mounts": [
            {
                "block_available": 3728431,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 570833,
                "device": "/dev/mapper/rhel-root",
                "fstype": "xfs",
                "inode_available": 8542471,
                "inode_total": 8603648,
                "inode_used": 61177,
                "mount": "/",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 15271653376,
                "size_total": 17609785344,
                "uuid": "e582775b-f787-42fb-a7da-e66ffb7a210a"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "6723-A89C"
            },
            {
                "block_available": 0,
                "block_size": 2048,
                "block_total": 4119280,
                "block_used": 4119280,
                "device": "/dev/sr0",
                "fstype": "iso9660",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/var/ftp/repo",
                "options": "ro,relatime,nojoliet,check=s,map=n,blocksize=2048",
                "size_available": 0,
                "size_total": 8436285440,
                "uuid": "2020-04-04-08-21-15-00"
            }
        ],
        "ansible_nodename": "control.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel/root",
                "rhel/swap"
            ],
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz",
            "1",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 2,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 2,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d 94 78 3e 53 21 2f-3c a5 64 70 c9 72 63 77",
        "ansible_product_uuid": "78944d56-533e-2f21-3ca5-6470c9726377",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "status": "disabled"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNhudUrTlfCgvAC31V1YPiPwqZKT7aFesPRbEGXj9B4esh+OI7dNbiUJPoteI+AqIZRzShz0BsfOtvfZux0v/dY=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIFC1LRLHGmTZfUEs+knXPYfQFkHnOTUCDib6l7DGR1F6",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQDTuLOzAeNf8ZQj8Qu64SLTprDRnagiihI/gUAzQX5NR8mkfVecF3591Hw0bY7d4OYL2GSa22Q97lWpSRMZzEe5kd0cIFTTg/coqMIK/VOKJvQarjnjj7rnrLnG8WJprf6kxITc7AuIWXTeD/vqgs/lBcdbD77PBXAShSj1dFD6qej4G7zOpo4OeQ0EWjbDQaRCqBWcTbaGEs2TpvIacfKSlWQ/tIvmcJQ2sVHqiGJ/AkRLMn4AHoKi5t7RKWT7HHhnc7ZDu686KGiplcSsiF/T37b6WneuS96tLNTUYbpT4Ot2zrYFYbo0YwRuzM1Jwpa/f3x0hoY7Lak/o3j6lDv5y9AhwhytPAKz8da2FLi2sna2Ve7913M9GMSiP41fRHnoLsqMy89IHDLm8vkJUjZxzRo7e4i4K5mXK/My7V5nGc3J8bJrmXCEzDDJfS42MuCmINcuz2MCjuvduwCrXroDHqrHMe306r1F9TQTeWlIJNSBwAuuC+FN8zVhlkJRiqc=",
        "ansible_swapfree_mb": 2047,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 868748,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-15 14:47:17,443 p=781064 u=ansible n=ansible | localhost | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.200"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::d0eb:2348:63a1:cb77"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel/swap",
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_date_time": {
            "date": "2021-06-15",
            "day": "15",
            "epoch": "1623782837",
            "hour": "14",
            "iso8601": "2021-06-15T18:47:17Z",
            "iso8601_basic": "20210615T144717146576",
            "iso8601_basic_short": "20210615T144717",
            "iso8601_micro": "2021-06-15T18:47:17.146576Z",
            "minute": "47",
            "month": "06",
            "second": "17",
            "time": "14:47:17",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Tuesday",
            "weekday_number": "2",
            "weeknumber": "24",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.200",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:72:63:77",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel-root",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                ],
                "dm-1": [
                    "dm-name-rhel-swap",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                ],
                "sda3": [
                    "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "e582775b-f787-42fb-a7da-e66ffb7a210a"
                ],
                "dm-1": [
                    "521d3469-ac8d-490e-9c79-a6fd59024de4"
                ],
                "sda1": [
                    "6723-A89C"
                ],
                "sda2": [
                    "1e4b2b4a-ea26-430e-978c-de3884071e82"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-root",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "e582775b-f787-42fb-a7da-e66ffb7a210a"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-swap",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "521d3469-ac8d-490e-9c79-a6fd59024de4"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "6723-A89C"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "6723-A89C"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "1e4b2b4a-ea26-430e-978c-de3884071e82"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
                    },
                    "sda3": {
                        "holders": [
                            "rhel-swap",
                            "rhel-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "on",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.200",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::d0eb:2348:63a1:cb77",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:72:63:77",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HISTSIZE": "1000",
            "HOME": "/root",
            "HOSTNAME": "control.example.com",
            "LANG": "en_US.UTF-8",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/spool/mail/ansible",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-cgaamvgjahyfntcaqggxkvfuvljnnxpl ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1623782836.7431273-781071-187833821465228/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "control.example.com",
        "ansible_hostname": "control",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "ens192",
            "lo"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:9a8e963cc88",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel"
                }
            },
            "vgs": {
                "rhel": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "36e2124a40614e3796fa06fcece0515e",
        "ansible_memfree_mb": 873,
        "ansible_memory_mb": {
            "nocache": {
                "free": 1404,
                "used": 422
            },
            "real": {
                "free": 873,
                "total": 1826,
                "used": 953
            },
            "swap": {
                "cached": 0,
                "free": 2047,
                "total": 2047,
                "used": 0
            }
        },
        "ansible_memtotal_mb": 1826,
        "ansible_mounts": [
            {
                "block_available": 3728431,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 570833,
                "device": "/dev/mapper/rhel-root",
                "fstype": "xfs",
                "inode_available": 8542471,
                "inode_total": 8603648,
                "inode_used": 61177,
                "mount": "/",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 15271653376,
                "size_total": 17609785344,
                "uuid": "e582775b-f787-42fb-a7da-e66ffb7a210a"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "6723-A89C"
            },
            {
                "block_available": 0,
                "block_size": 2048,
                "block_total": 4119280,
                "block_used": 4119280,
                "device": "/dev/sr0",
                "fstype": "iso9660",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/var/ftp/repo",
                "options": "ro,relatime,nojoliet,check=s,map=n,blocksize=2048",
                "size_available": 0,
                "size_total": 8436285440,
                "uuid": "2020-04-04-08-21-15-00"
            }
        ],
        "ansible_nodename": "control.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel/root",
                "rhel/swap"
            ],
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz",
            "1",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 2,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 2,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d 94 78 3e 53 21 2f-3c a5 64 70 c9 72 63 77",
        "ansible_product_uuid": "78944d56-533e-2f21-3ca5-6470c9726377",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "status": "disabled"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNhudUrTlfCgvAC31V1YPiPwqZKT7aFesPRbEGXj9B4esh+OI7dNbiUJPoteI+AqIZRzShz0BsfOtvfZux0v/dY=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIFC1LRLHGmTZfUEs+knXPYfQFkHnOTUCDib6l7DGR1F6",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQDTuLOzAeNf8ZQj8Qu64SLTprDRnagiihI/gUAzQX5NR8mkfVecF3591Hw0bY7d4OYL2GSa22Q97lWpSRMZzEe5kd0cIFTTg/coqMIK/VOKJvQarjnjj7rnrLnG8WJprf6kxITc7AuIWXTeD/vqgs/lBcdbD77PBXAShSj1dFD6qej4G7zOpo4OeQ0EWjbDQaRCqBWcTbaGEs2TpvIacfKSlWQ/tIvmcJQ2sVHqiGJ/AkRLMn4AHoKi5t7RKWT7HHhnc7ZDu686KGiplcSsiF/T37b6WneuS96tLNTUYbpT4Ot2zrYFYbo0YwRuzM1Jwpa/f3x0hoY7Lak/o3j6lDv5y9AhwhytPAKz8da2FLi2sna2Ve7913M9GMSiP41fRHnoLsqMy89IHDLm8vkJUjZxzRo7e4i4K5mXK/My7V5nGc3J8bJrmXCEzDDJfS42MuCmINcuz2MCjuvduwCrXroDHqrHMe306r1F9TQTeWlIJNSBwAuuC+FN8zVhlkJRiqc=",
        "ansible_swapfree_mb": 2047,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 868836,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-15 14:47:44,873 p=781316 u=ansible n=ansible | localhost | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.200"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::d0eb:2348:63a1:cb77"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel/swap",
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_date_time": {
            "date": "2021-06-15",
            "day": "15",
            "epoch": "1623782864",
            "hour": "14",
            "iso8601": "2021-06-15T18:47:44Z",
            "iso8601_basic": "20210615T144744797976",
            "iso8601_basic_short": "20210615T144744",
            "iso8601_micro": "2021-06-15T18:47:44.797976Z",
            "minute": "47",
            "month": "06",
            "second": "44",
            "time": "14:47:44",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Tuesday",
            "weekday_number": "2",
            "weeknumber": "24",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.200",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:72:63:77",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel-root",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                ],
                "dm-1": [
                    "dm-name-rhel-swap",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                ],
                "sda3": [
                    "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "e582775b-f787-42fb-a7da-e66ffb7a210a"
                ],
                "dm-1": [
                    "521d3469-ac8d-490e-9c79-a6fd59024de4"
                ],
                "sda1": [
                    "6723-A89C"
                ],
                "sda2": [
                    "1e4b2b4a-ea26-430e-978c-de3884071e82"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-root",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "e582775b-f787-42fb-a7da-e66ffb7a210a"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-swap",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "521d3469-ac8d-490e-9c79-a6fd59024de4"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "6723-A89C"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "6723-A89C"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "1e4b2b4a-ea26-430e-978c-de3884071e82"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
                    },
                    "sda3": {
                        "holders": [
                            "rhel-swap",
                            "rhel-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "on",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.200",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::d0eb:2348:63a1:cb77",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:72:63:77",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HISTSIZE": "1000",
            "HOME": "/root",
            "HOSTNAME": "control.example.com",
            "LANG": "C",
            "LC_ALL": "C",
            "LC_NUMERIC": "C",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/spool/mail/ansible",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-fmtgkvpgwrdewqbaudfozhdixelysbjm ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1623782864.1810772-781323-67995391468091/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "control.example.com",
        "ansible_hostname": "control",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "lo",
            "ens192"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:9a8e963cc88",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel"
                }
            },
            "vgs": {
                "rhel": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "36e2124a40614e3796fa06fcece0515e",
        "ansible_memfree_mb": 872,
        "ansible_memory_mb": {
            "nocache": {
                "free": 1403,
                "used": 423
            },
            "real": {
                "free": 872,
                "total": 1826,
                "used": 954
            },
            "swap": {
                "cached": 0,
                "free": 2047,
                "total": 2047,
                "used": 0
            }
        },
        "ansible_memtotal_mb": 1826,
        "ansible_mounts": [
            {
                "block_available": 3728362,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 570902,
                "device": "/dev/mapper/rhel-root",
                "fstype": "xfs",
                "inode_available": 8542471,
                "inode_total": 8603648,
                "inode_used": 61177,
                "mount": "/",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 15271370752,
                "size_total": 17609785344,
                "uuid": "e582775b-f787-42fb-a7da-e66ffb7a210a"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "6723-A89C"
            },
            {
                "block_available": 0,
                "block_size": 2048,
                "block_total": 4119280,
                "block_used": 4119280,
                "device": "/dev/sr0",
                "fstype": "iso9660",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/var/ftp/repo",
                "options": "ro,relatime,nojoliet,check=s,map=n,blocksize=2048",
                "size_available": 0,
                "size_total": 8436285440,
                "uuid": "2020-04-04-08-21-15-00"
            }
        ],
        "ansible_nodename": "control.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel/root",
                "rhel/swap"
            ],
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz",
            "1",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 2,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 2,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d 94 78 3e 53 21 2f-3c a5 64 70 c9 72 63 77",
        "ansible_product_uuid": "78944d56-533e-2f21-3ca5-6470c9726377",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "status": "disabled"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNhudUrTlfCgvAC31V1YPiPwqZKT7aFesPRbEGXj9B4esh+OI7dNbiUJPoteI+AqIZRzShz0BsfOtvfZux0v/dY=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIFC1LRLHGmTZfUEs+knXPYfQFkHnOTUCDib6l7DGR1F6",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQDTuLOzAeNf8ZQj8Qu64SLTprDRnagiihI/gUAzQX5NR8mkfVecF3591Hw0bY7d4OYL2GSa22Q97lWpSRMZzEe5kd0cIFTTg/coqMIK/VOKJvQarjnjj7rnrLnG8WJprf6kxITc7AuIWXTeD/vqgs/lBcdbD77PBXAShSj1dFD6qej4G7zOpo4OeQ0EWjbDQaRCqBWcTbaGEs2TpvIacfKSlWQ/tIvmcJQ2sVHqiGJ/AkRLMn4AHoKi5t7RKWT7HHhnc7ZDu686KGiplcSsiF/T37b6WneuS96tLNTUYbpT4Ot2zrYFYbo0YwRuzM1Jwpa/f3x0hoY7Lak/o3j6lDv5y9AhwhytPAKz8da2FLi2sna2Ve7913M9GMSiP41fRHnoLsqMy89IHDLm8vkJUjZxzRo7e4i4K5mXK/My7V5nGc3J8bJrmXCEzDDJfS42MuCmINcuz2MCjuvduwCrXroDHqrHMe306r1F9TQTeWlIJNSBwAuuC+FN8zVhlkJRiqc=",
        "ansible_swapfree_mb": 2047,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 868863,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-15 14:47:49,088 p=781406 u=ansible n=ansible | localhost | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.200"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::d0eb:2348:63a1:cb77"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel/swap",
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_date_time": {
            "date": "2021-06-15",
            "day": "15",
            "epoch": "1623782868",
            "hour": "14",
            "iso8601": "2021-06-15T18:47:48Z",
            "iso8601_basic": "20210615T144748799116",
            "iso8601_basic_short": "20210615T144748",
            "iso8601_micro": "2021-06-15T18:47:48.799116Z",
            "minute": "47",
            "month": "06",
            "second": "48",
            "time": "14:47:48",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Tuesday",
            "weekday_number": "2",
            "weeknumber": "24",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.200",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:72:63:77",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel-root",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                ],
                "dm-1": [
                    "dm-name-rhel-swap",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                ],
                "sda3": [
                    "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "e582775b-f787-42fb-a7da-e66ffb7a210a"
                ],
                "dm-1": [
                    "521d3469-ac8d-490e-9c79-a6fd59024de4"
                ],
                "sda1": [
                    "6723-A89C"
                ],
                "sda2": [
                    "1e4b2b4a-ea26-430e-978c-de3884071e82"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-root",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "e582775b-f787-42fb-a7da-e66ffb7a210a"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-swap",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "521d3469-ac8d-490e-9c79-a6fd59024de4"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "6723-A89C"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "6723-A89C"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "1e4b2b4a-ea26-430e-978c-de3884071e82"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
                    },
                    "sda3": {
                        "holders": [
                            "rhel-swap",
                            "rhel-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "on",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.200",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::d0eb:2348:63a1:cb77",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:72:63:77",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HISTSIZE": "1000",
            "HOME": "/root",
            "HOSTNAME": "control.example.com",
            "LANG": "en_US.UTF-8",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/spool/mail/ansible",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-xuugzmkcasrlcppvwltroieiumzuevum ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1623782868.3965354-781413-233773827140186/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "control.example.com",
        "ansible_hostname": "control",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "ens192",
            "lo"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:9a8e963cc88",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel"
                }
            },
            "vgs": {
                "rhel": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "36e2124a40614e3796fa06fcece0515e",
        "ansible_memfree_mb": 872,
        "ansible_memory_mb": {
            "nocache": {
                "free": 1403,
                "used": 423
            },
            "real": {
                "free": 872,
                "total": 1826,
                "used": 954
            },
            "swap": {
                "cached": 0,
                "free": 2047,
                "total": 2047,
                "used": 0
            }
        },
        "ansible_memtotal_mb": 1826,
        "ansible_mounts": [
            {
                "block_available": 3728362,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 570902,
                "device": "/dev/mapper/rhel-root",
                "fstype": "xfs",
                "inode_available": 8542471,
                "inode_total": 8603648,
                "inode_used": 61177,
                "mount": "/",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 15271370752,
                "size_total": 17609785344,
                "uuid": "e582775b-f787-42fb-a7da-e66ffb7a210a"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "6723-A89C"
            },
            {
                "block_available": 0,
                "block_size": 2048,
                "block_total": 4119280,
                "block_used": 4119280,
                "device": "/dev/sr0",
                "fstype": "iso9660",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/var/ftp/repo",
                "options": "ro,relatime,nojoliet,check=s,map=n,blocksize=2048",
                "size_available": 0,
                "size_total": 8436285440,
                "uuid": "2020-04-04-08-21-15-00"
            }
        ],
        "ansible_nodename": "control.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel/root",
                "rhel/swap"
            ],
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz",
            "1",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 2,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 2,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d 94 78 3e 53 21 2f-3c a5 64 70 c9 72 63 77",
        "ansible_product_uuid": "78944d56-533e-2f21-3ca5-6470c9726377",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "status": "disabled"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNhudUrTlfCgvAC31V1YPiPwqZKT7aFesPRbEGXj9B4esh+OI7dNbiUJPoteI+AqIZRzShz0BsfOtvfZux0v/dY=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIFC1LRLHGmTZfUEs+knXPYfQFkHnOTUCDib6l7DGR1F6",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQDTuLOzAeNf8ZQj8Qu64SLTprDRnagiihI/gUAzQX5NR8mkfVecF3591Hw0bY7d4OYL2GSa22Q97lWpSRMZzEe5kd0cIFTTg/coqMIK/VOKJvQarjnjj7rnrLnG8WJprf6kxITc7AuIWXTeD/vqgs/lBcdbD77PBXAShSj1dFD6qej4G7zOpo4OeQ0EWjbDQaRCqBWcTbaGEs2TpvIacfKSlWQ/tIvmcJQ2sVHqiGJ/AkRLMn4AHoKi5t7RKWT7HHhnc7ZDu686KGiplcSsiF/T37b6WneuS96tLNTUYbpT4Ot2zrYFYbo0YwRuzM1Jwpa/f3x0hoY7Lak/o3j6lDv5y9AhwhytPAKz8da2FLi2sna2Ve7913M9GMSiP41fRHnoLsqMy89IHDLm8vkJUjZxzRo7e4i4K5mXK/My7V5nGc3J8bJrmXCEzDDJfS42MuCmINcuz2MCjuvduwCrXroDHqrHMe306r1F9TQTeWlIJNSBwAuuC+FN8zVhlkJRiqc=",
        "ansible_swapfree_mb": 2047,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 868868,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-15 14:48:47,253 p=781874 u=ansible n=ansible | localhost | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.200"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::d0eb:2348:63a1:cb77"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel/swap",
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_date_time": {
            "date": "2021-06-15",
            "day": "15",
            "epoch": "1623782927",
            "hour": "14",
            "iso8601": "2021-06-15T18:48:47Z",
            "iso8601_basic": "20210615T144847206073",
            "iso8601_basic_short": "20210615T144847",
            "iso8601_micro": "2021-06-15T18:48:47.206073Z",
            "minute": "48",
            "month": "06",
            "second": "47",
            "time": "14:48:47",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Tuesday",
            "weekday_number": "2",
            "weeknumber": "24",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.200",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:72:63:77",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel-root",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                ],
                "dm-1": [
                    "dm-name-rhel-swap",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                ],
                "sda3": [
                    "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "e582775b-f787-42fb-a7da-e66ffb7a210a"
                ],
                "dm-1": [
                    "521d3469-ac8d-490e-9c79-a6fd59024de4"
                ],
                "sda1": [
                    "6723-A89C"
                ],
                "sda2": [
                    "1e4b2b4a-ea26-430e-978c-de3884071e82"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-root",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "e582775b-f787-42fb-a7da-e66ffb7a210a"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-swap",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "521d3469-ac8d-490e-9c79-a6fd59024de4"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "6723-A89C"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "6723-A89C"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "1e4b2b4a-ea26-430e-978c-de3884071e82"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
                    },
                    "sda3": {
                        "holders": [
                            "rhel-swap",
                            "rhel-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "on",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.200",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::d0eb:2348:63a1:cb77",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:72:63:77",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HISTSIZE": "1000",
            "HOME": "/root",
            "HOSTNAME": "control.example.com",
            "LANG": "C",
            "LC_ALL": "C",
            "LC_NUMERIC": "C",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/spool/mail/ansible",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-ztojpsjbezqzrugzihntwzudxyzwmqsd ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1623782926.5220015-781881-8141058928634/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "control.example.com",
        "ansible_hostname": "control",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "ens192",
            "lo"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:9a8e963cc88",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel"
                }
            },
            "vgs": {
                "rhel": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "36e2124a40614e3796fa06fcece0515e",
        "ansible_memfree_mb": 871,
        "ansible_memory_mb": {
            "nocache": {
                "free": 1402,
                "used": 424
            },
            "real": {
                "free": 871,
                "total": 1826,
                "used": 955
            },
            "swap": {
                "cached": 0,
                "free": 2047,
                "total": 2047,
                "used": 0
            }
        },
        "ansible_memtotal_mb": 1826,
        "ansible_mounts": [
            {
                "block_available": 3728465,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 570799,
                "device": "/dev/mapper/rhel-root",
                "fstype": "xfs",
                "inode_available": 8542471,
                "inode_total": 8603648,
                "inode_used": 61177,
                "mount": "/",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 15271792640,
                "size_total": 17609785344,
                "uuid": "e582775b-f787-42fb-a7da-e66ffb7a210a"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "6723-A89C"
            },
            {
                "block_available": 0,
                "block_size": 2048,
                "block_total": 4119280,
                "block_used": 4119280,
                "device": "/dev/sr0",
                "fstype": "iso9660",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/var/ftp/repo",
                "options": "ro,relatime,nojoliet,check=s,map=n,blocksize=2048",
                "size_available": 0,
                "size_total": 8436285440,
                "uuid": "2020-04-04-08-21-15-00"
            }
        ],
        "ansible_nodename": "control.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel/root",
                "rhel/swap"
            ],
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz",
            "1",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 2,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 2,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d 94 78 3e 53 21 2f-3c a5 64 70 c9 72 63 77",
        "ansible_product_uuid": "78944d56-533e-2f21-3ca5-6470c9726377",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "status": "disabled"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNhudUrTlfCgvAC31V1YPiPwqZKT7aFesPRbEGXj9B4esh+OI7dNbiUJPoteI+AqIZRzShz0BsfOtvfZux0v/dY=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIFC1LRLHGmTZfUEs+knXPYfQFkHnOTUCDib6l7DGR1F6",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQDTuLOzAeNf8ZQj8Qu64SLTprDRnagiihI/gUAzQX5NR8mkfVecF3591Hw0bY7d4OYL2GSa22Q97lWpSRMZzEe5kd0cIFTTg/coqMIK/VOKJvQarjnjj7rnrLnG8WJprf6kxITc7AuIWXTeD/vqgs/lBcdbD77PBXAShSj1dFD6qej4G7zOpo4OeQ0EWjbDQaRCqBWcTbaGEs2TpvIacfKSlWQ/tIvmcJQ2sVHqiGJ/AkRLMn4AHoKi5t7RKWT7HHhnc7ZDu686KGiplcSsiF/T37b6WneuS96tLNTUYbpT4Ot2zrYFYbo0YwRuzM1Jwpa/f3x0hoY7Lak/o3j6lDv5y9AhwhytPAKz8da2FLi2sna2Ve7913M9GMSiP41fRHnoLsqMy89IHDLm8vkJUjZxzRo7e4i4K5mXK/My7V5nGc3J8bJrmXCEzDDJfS42MuCmINcuz2MCjuvduwCrXroDHqrHMe306r1F9TQTeWlIJNSBwAuuC+FN8zVhlkJRiqc=",
        "ansible_swapfree_mb": 2047,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 868926,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-15 14:49:16,600 p=782156 u=ansible n=ansible | PLAY [generate motd using a template] ***************************************************************************
2021-06-15 14:49:16,608 p=782156 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 14:49:18,093 p=782156 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 14:49:18,166 p=782156 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 14:49:18,190 p=782156 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 14:49:18,198 p=782156 u=ansible n=ansible | TASK [copy over the motd file] **********************************************************************************
2021-06-15 14:49:18,348 p=782156 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible_sda' is undefined"}
2021-06-15 14:49:18,348 p=782156 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible_sda' is undefined"}
2021-06-15 14:49:18,367 p=782156 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'ansible_sda' is undefined"}
2021-06-15 14:49:18,368 p=782156 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 14:49:18,369 p=782156 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 14:49:18,369 p=782156 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 14:49:18,369 p=782156 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 14:49:33,305 p=782326 u=ansible n=ansible | localhost | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.200"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::d0eb:2348:63a1:cb77"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel/swap",
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_date_time": {
            "date": "2021-06-15",
            "day": "15",
            "epoch": "1623782973",
            "hour": "14",
            "iso8601": "2021-06-15T18:49:33Z",
            "iso8601_basic": "20210615T144933005581",
            "iso8601_basic_short": "20210615T144933",
            "iso8601_micro": "2021-06-15T18:49:33.005581Z",
            "minute": "49",
            "month": "06",
            "second": "33",
            "time": "14:49:33",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Tuesday",
            "weekday_number": "2",
            "weeknumber": "24",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.200",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:72:63:77",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel-root",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                ],
                "dm-1": [
                    "dm-name-rhel-swap",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                ],
                "sda3": [
                    "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "e582775b-f787-42fb-a7da-e66ffb7a210a"
                ],
                "dm-1": [
                    "521d3469-ac8d-490e-9c79-a6fd59024de4"
                ],
                "sda1": [
                    "6723-A89C"
                ],
                "sda2": [
                    "1e4b2b4a-ea26-430e-978c-de3884071e82"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-root",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "e582775b-f787-42fb-a7da-e66ffb7a210a"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-swap",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "521d3469-ac8d-490e-9c79-a6fd59024de4"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "6723-A89C"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "6723-A89C"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "1e4b2b4a-ea26-430e-978c-de3884071e82"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
                    },
                    "sda3": {
                        "holders": [
                            "rhel-swap",
                            "rhel-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "on",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.200",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::d0eb:2348:63a1:cb77",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:72:63:77",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HISTSIZE": "1000",
            "HOME": "/root",
            "HOSTNAME": "control.example.com",
            "LANG": "en_US.UTF-8",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/spool/mail/ansible",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-wsmsifaosjrgckiacilcgcclzzwpppls ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1623782972.6038375-782339-98646901261049/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "control.example.com",
        "ansible_hostname": "control",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "lo",
            "ens192"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:9a8e963cc88",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel"
                }
            },
            "vgs": {
                "rhel": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "36e2124a40614e3796fa06fcece0515e",
        "ansible_memfree_mb": 868,
        "ansible_memory_mb": {
            "nocache": {
                "free": 1399,
                "used": 427
            },
            "real": {
                "free": 868,
                "total": 1826,
                "used": 958
            },
            "swap": {
                "cached": 0,
                "free": 2047,
                "total": 2047,
                "used": 0
            }
        },
        "ansible_memtotal_mb": 1826,
        "ansible_mounts": [
            {
                "block_available": 3728309,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 570955,
                "device": "/dev/mapper/rhel-root",
                "fstype": "xfs",
                "inode_available": 8542468,
                "inode_total": 8603648,
                "inode_used": 61180,
                "mount": "/",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 15271153664,
                "size_total": 17609785344,
                "uuid": "e582775b-f787-42fb-a7da-e66ffb7a210a"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "6723-A89C"
            },
            {
                "block_available": 0,
                "block_size": 2048,
                "block_total": 4119280,
                "block_used": 4119280,
                "device": "/dev/sr0",
                "fstype": "iso9660",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/var/ftp/repo",
                "options": "ro,relatime,nojoliet,check=s,map=n,blocksize=2048",
                "size_available": 0,
                "size_total": 8436285440,
                "uuid": "2020-04-04-08-21-15-00"
            }
        ],
        "ansible_nodename": "control.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel/root",
                "rhel/swap"
            ],
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz",
            "1",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 2,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 2,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d 94 78 3e 53 21 2f-3c a5 64 70 c9 72 63 77",
        "ansible_product_uuid": "78944d56-533e-2f21-3ca5-6470c9726377",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "status": "disabled"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNhudUrTlfCgvAC31V1YPiPwqZKT7aFesPRbEGXj9B4esh+OI7dNbiUJPoteI+AqIZRzShz0BsfOtvfZux0v/dY=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIFC1LRLHGmTZfUEs+knXPYfQFkHnOTUCDib6l7DGR1F6",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQDTuLOzAeNf8ZQj8Qu64SLTprDRnagiihI/gUAzQX5NR8mkfVecF3591Hw0bY7d4OYL2GSa22Q97lWpSRMZzEe5kd0cIFTTg/coqMIK/VOKJvQarjnjj7rnrLnG8WJprf6kxITc7AuIWXTeD/vqgs/lBcdbD77PBXAShSj1dFD6qej4G7zOpo4OeQ0EWjbDQaRCqBWcTbaGEs2TpvIacfKSlWQ/tIvmcJQ2sVHqiGJ/AkRLMn4AHoKi5t7RKWT7HHhnc7ZDu686KGiplcSsiF/T37b6WneuS96tLNTUYbpT4Ot2zrYFYbo0YwRuzM1Jwpa/f3x0hoY7Lak/o3j6lDv5y9AhwhytPAKz8da2FLi2sna2Ve7913M9GMSiP41fRHnoLsqMy89IHDLm8vkJUjZxzRo7e4i4K5mXK/My7V5nGc3J8bJrmXCEzDDJfS42MuCmINcuz2MCjuvduwCrXroDHqrHMe306r1F9TQTeWlIJNSBwAuuC+FN8zVhlkJRiqc=",
        "ansible_swapfree_mb": 2047,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 868972,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-15 14:50:11,317 p=782661 u=ansible n=ansible | PLAY [generate motd using a template] ***************************************************************************
2021-06-15 14:50:11,324 p=782661 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 14:50:12,534 p=782661 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 14:50:12,563 p=782661 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 14:50:12,566 p=782661 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 14:50:12,574 p=782661 u=ansible n=ansible | TASK [copy over the motd file] **********************************************************************************
2021-06-15 14:50:13,611 p=782661 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-15 14:50:13,655 p=782661 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-15 14:50:13,661 p=782661 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-15 14:50:13,663 p=782661 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 14:50:13,663 p=782661 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 14:50:13,663 p=782661 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 14:50:13,663 p=782661 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 14:50:22,735 p=782821 u=ansible n=ansible | ansible3.example.com | CHANGED | rc=0 >>
Welcome to ansible3.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
Secondary Disk Size: 

2021-06-15 14:50:22,764 p=782821 u=ansible n=ansible | ansible2.example.com | CHANGED | rc=0 >>
Welcome to ansible2.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
Secondary Disk Size: 

2021-06-15 14:50:22,782 p=782821 u=ansible n=ansible | ansible4.example.com | CHANGED | rc=0 >>
Welcome to ansible4.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
Secondary Disk Size: 

2021-06-15 14:55:59,972 p=785220 u=ansible n=ansible | PLAY [generate motd using a template] ***************************************************************************
2021-06-15 14:55:59,980 p=785220 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-15 14:56:01,687 p=785220 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-15 14:56:01,694 p=785220 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-15 14:56:01,729 p=785220 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-15 14:56:01,737 p=785220 u=ansible n=ansible | TASK [copy over the motd file] **********************************************************************************
2021-06-15 14:56:01,898 p=785220 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'sdb'"}
2021-06-15 14:56:01,902 p=785220 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleUndefinedVariable: 'dict object' has no attribute 'sdb'"}
2021-06-15 14:56:02,618 p=785220 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-15 14:56:02,619 p=785220 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-15 14:56:02,619 p=785220 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-15 14:56:02,619 p=785220 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-15 14:56:02,619 p=785220 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-16 11:50:22,852 p=854539 u=ansible n=ansible | PLAY [generate motd using a template] ***************************************************************************
2021-06-16 11:50:22,860 p=854539 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 11:50:24,610 p=854539 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-16 11:50:24,613 p=854539 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-16 11:50:24,639 p=854539 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-16 11:50:24,647 p=854539 u=ansible n=ansible | TASK [copy over the motd file] **********************************************************************************
2021-06-16 11:50:25,790 p=854539 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-16 11:50:25,803 p=854539 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-16 11:50:25,834 p=854539 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-16 11:50:25,836 p=854539 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 11:50:25,836 p=854539 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:50:25,836 p=854539 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:50:25,836 p=854539 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:50:32,480 p=854696 u=ansible n=ansible | ansible4.example.com | CHANGED | rc=0 >>
Welcome to ansible4.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
  Secondary Disk Size: NOT AVAILABLE

2021-06-16 11:50:32,501 p=854696 u=ansible n=ansible | ansible2.example.com | CHANGED | rc=0 >>
Welcome to ansible2.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
  Secondary Disk Size: NOT AVAILABLE

2021-06-16 11:50:32,513 p=854696 u=ansible n=ansible | ansible3.example.com | CHANGED | rc=0 >>
Welcome to ansible3.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
  Secondary Disk Size: NOT AVAILABLE

2021-06-16 11:51:02,723 p=854957 u=ansible n=ansible | PLAY [generate motd using a template] ***************************************************************************
2021-06-16 11:51:02,731 p=854957 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 11:51:03,924 p=854957 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-16 11:51:03,970 p=854957 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-16 11:51:03,984 p=854957 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-16 11:51:03,992 p=854957 u=ansible n=ansible | TASK [copy over the motd file] **********************************************************************************
2021-06-16 11:51:05,009 p=854957 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-16 11:51:05,063 p=854957 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-16 11:51:05,083 p=854957 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-16 11:51:05,085 p=854957 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 11:51:05,085 p=854957 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:51:05,085 p=854957 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:51:05,085 p=854957 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:51:07,603 p=855074 u=ansible n=ansible | ansible3.example.com | FAILED | rc=1 >>
cat: '/etc/motd'$'\033''[2~': No such file or directorynon-zero return code

2021-06-16 11:51:07,618 p=855074 u=ansible n=ansible | ansible2.example.com | FAILED | rc=1 >>
cat: '/etc/motd'$'\033''[2~': No such file or directorynon-zero return code

2021-06-16 11:51:07,620 p=855074 u=ansible n=ansible | ansible4.example.com | FAILED | rc=1 >>
cat: '/etc/motd'$'\033''[2~': No such file or directorynon-zero return code

2021-06-16 11:51:16,627 p=855180 u=ansible n=ansible | ansible3.example.com | CHANGED | rc=0 >>
Welcome to ansible3.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
Secondary Disk Size: NOT AVAILABLE

2021-06-16 11:51:16,694 p=855180 u=ansible n=ansible | ansible2.example.com | CHANGED | rc=0 >>
Welcome to ansible2.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
Secondary Disk Size: NOT AVAILABLE

2021-06-16 11:51:16,708 p=855180 u=ansible n=ansible | ansible4.example.com | CHANGED | rc=0 >>
Welcome to ansible4.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
Secondary Disk Size: NOT AVAILABLE

2021-06-16 11:51:40,756 p=855423 u=ansible n=ansible | PLAY [generate motd using a template] ***************************************************************************
2021-06-16 11:51:40,764 p=855423 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 11:51:42,447 p=855423 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-16 11:51:42,462 p=855423 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-16 11:51:42,491 p=855423 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-16 11:51:42,780 p=855423 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 11:51:42,849 p=855423 u=ansible n=ansible | ok: [control.example.com]
2021-06-16 11:51:42,857 p=855423 u=ansible n=ansible | TASK [copy over the motd file] **********************************************************************************
2021-06-16 11:51:44,200 p=855423 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-16 11:51:44,201 p=855423 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-16 11:51:44,220 p=855423 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-16 11:51:44,406 p=855423 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-16 11:51:44,515 p=855423 u=ansible n=ansible | changed: [control.example.com]
2021-06-16 11:51:44,517 p=855423 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 11:51:44,517 p=855423 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:51:44,517 p=855423 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:51:44,517 p=855423 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:51:44,517 p=855423 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:51:44,517 p=855423 u=ansible n=ansible | control.example.com        : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:51:55,018 p=856032 u=ansible n=ansible | ansible2.example.com | CHANGED | rc=0 >>
Welcome to ansible2.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
Secondary Disk Size: NOT AVAILABLE

2021-06-16 11:51:55,020 p=856032 u=ansible n=ansible | ansible3.example.com | CHANGED | rc=0 >>
Welcome to ansible3.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
Secondary Disk Size: NOT AVAILABLE

2021-06-16 11:51:55,028 p=856032 u=ansible n=ansible | ansible1.example.com | CHANGED | rc=0 >>
Welcome to ansible1.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
Secondary Disk Size: NOT AVAILABLE

2021-06-16 11:51:55,051 p=856032 u=ansible n=ansible | ansible4.example.com | CHANGED | rc=0 >>
Welcome to ansible4.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
Secondary Disk Size: NOT AVAILABLE

2021-06-16 11:51:55,219 p=856032 u=ansible n=ansible | control.example.com | CHANGED | rc=0 >>
Welcome to control.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 1826MB
Processor Count: 2
Primary Disk Size: 20.00 GB
Secondary Disk Size: NOT AVAILABLE

2021-06-16 11:53:41,068 p=856989 u=ansible n=ansible | PLAY [generate motd using a template] ***************************************************************************
2021-06-16 11:53:41,076 p=856989 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 11:53:42,888 p=856989 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-16 11:53:42,924 p=856989 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-16 11:53:42,991 p=856989 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 11:53:43,000 p=856989 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-16 11:53:43,387 p=856989 u=ansible n=ansible | ok: [control.example.com]
2021-06-16 11:53:43,395 p=856989 u=ansible n=ansible | TASK [copy over the motd file] **********************************************************************************
2021-06-16 11:53:44,856 p=856989 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-16 11:53:44,857 p=856989 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-16 11:53:44,864 p=856989 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-16 11:53:44,889 p=856989 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-16 11:53:45,084 p=856989 u=ansible n=ansible | ok: [control.example.com]
2021-06-16 11:53:45,086 p=856989 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 11:53:45,086 p=856989 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:53:45,086 p=856989 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:53:45,086 p=856989 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:53:45,086 p=856989 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:53:45,086 p=856989 u=ansible n=ansible | control.example.com        : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:53:49,099 p=857532 u=ansible n=ansible | ansible1.example.com | CHANGED | rc=0 >>
Welcome to ansible1.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
Secondary Disk Size: 5.00 GB

2021-06-16 11:53:49,102 p=857532 u=ansible n=ansible | ansible2.example.com | CHANGED | rc=0 >>
Welcome to ansible2.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
Secondary Disk Size: NOT AVAILABLE

2021-06-16 11:53:49,110 p=857532 u=ansible n=ansible | ansible4.example.com | CHANGED | rc=0 >>
Welcome to ansible4.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
Secondary Disk Size: NOT AVAILABLE

2021-06-16 11:53:49,117 p=857532 u=ansible n=ansible | ansible3.example.com | CHANGED | rc=0 >>
Welcome to ansible3.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
Secondary Disk Size: 5.00 GB

2021-06-16 11:53:49,373 p=857532 u=ansible n=ansible | control.example.com | CHANGED | rc=0 >>
Welcome to control.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 1826MB
Processor Count: 2
Primary Disk Size: 20.00 GB
Secondary Disk Size: NOT AVAILABLE

2021-06-16 11:54:25,126 p=858001 u=ansible n=ansible | PLAY [generate motd using a template] ***************************************************************************
2021-06-16 11:54:25,134 p=858001 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 11:54:26,648 p=858001 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-16 11:54:26,679 p=858001 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 11:54:26,681 p=858001 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-16 11:54:26,705 p=858001 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-16 11:54:28,160 p=858001 u=ansible n=ansible | ok: [control.example.com]
2021-06-16 11:54:28,168 p=858001 u=ansible n=ansible | TASK [copy over the motd file] **********************************************************************************
2021-06-16 11:54:28,395 p=858001 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleError: template error while templating string: Unexpected end of template. Jinja was looking for the following tags: 'elif' or 'else' or 'endif'. The innermost block that needs to be closed is 'if'.. String: Welcome to {{ansible_fqdn}}, another high quality system from RedPen Security.\n\nSystem Statistics:\nSystem Memory: {{ansible_memtotal_mb}}MB\nProcessor Count: {{ansible_processor_count}}\nPrimary Disk Size: {{ansible_devices.sda.size}}\n#{%if ansible_facts['devices']['sdb'] is defined %}\n{%if ansible_devices.sdb is defined %}\nSecondary Disk Size: {{ansible_devices.sdb.size}}\n{% else %}\nSecondary Disk Size: NOT AVAILABLE\n{% endif %}\n\n"}
2021-06-16 11:54:28,401 p=858001 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleError: template error while templating string: Unexpected end of template. Jinja was looking for the following tags: 'elif' or 'else' or 'endif'. The innermost block that needs to be closed is 'if'.. String: Welcome to {{ansible_fqdn}}, another high quality system from RedPen Security.\n\nSystem Statistics:\nSystem Memory: {{ansible_memtotal_mb}}MB\nProcessor Count: {{ansible_processor_count}}\nPrimary Disk Size: {{ansible_devices.sda.size}}\n#{%if ansible_facts['devices']['sdb'] is defined %}\n{%if ansible_devices.sdb is defined %}\nSecondary Disk Size: {{ansible_devices.sdb.size}}\n{% else %}\nSecondary Disk Size: NOT AVAILABLE\n{% endif %}\n\n"}
2021-06-16 11:54:28,406 p=858001 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleError: template error while templating string: Unexpected end of template. Jinja was looking for the following tags: 'elif' or 'else' or 'endif'. The innermost block that needs to be closed is 'if'.. String: Welcome to {{ansible_fqdn}}, another high quality system from RedPen Security.\n\nSystem Statistics:\nSystem Memory: {{ansible_memtotal_mb}}MB\nProcessor Count: {{ansible_processor_count}}\nPrimary Disk Size: {{ansible_devices.sda.size}}\n#{%if ansible_facts['devices']['sdb'] is defined %}\n{%if ansible_devices.sdb is defined %}\nSecondary Disk Size: {{ansible_devices.sdb.size}}\n{% else %}\nSecondary Disk Size: NOT AVAILABLE\n{% endif %}\n\n"}
2021-06-16 11:54:28,426 p=858001 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleError: template error while templating string: Unexpected end of template. Jinja was looking for the following tags: 'elif' or 'else' or 'endif'. The innermost block that needs to be closed is 'if'.. String: Welcome to {{ansible_fqdn}}, another high quality system from RedPen Security.\n\nSystem Statistics:\nSystem Memory: {{ansible_memtotal_mb}}MB\nProcessor Count: {{ansible_processor_count}}\nPrimary Disk Size: {{ansible_devices.sda.size}}\n#{%if ansible_facts['devices']['sdb'] is defined %}\n{%if ansible_devices.sdb is defined %}\nSecondary Disk Size: {{ansible_devices.sdb.size}}\n{% else %}\nSecondary Disk Size: NOT AVAILABLE\n{% endif %}\n\n"}
2021-06-16 11:54:28,433 p=858001 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "AnsibleError: template error while templating string: Unexpected end of template. Jinja was looking for the following tags: 'elif' or 'else' or 'endif'. The innermost block that needs to be closed is 'if'.. String: Welcome to {{ansible_fqdn}}, another high quality system from RedPen Security.\n\nSystem Statistics:\nSystem Memory: {{ansible_memtotal_mb}}MB\nProcessor Count: {{ansible_processor_count}}\nPrimary Disk Size: {{ansible_devices.sda.size}}\n#{%if ansible_facts['devices']['sdb'] is defined %}\n{%if ansible_devices.sdb is defined %}\nSecondary Disk Size: {{ansible_devices.sdb.size}}\n{% else %}\nSecondary Disk Size: NOT AVAILABLE\n{% endif %}\n\n"}
2021-06-16 11:54:28,434 p=858001 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 11:54:28,434 p=858001 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-16 11:54:28,434 p=858001 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-16 11:54:28,434 p=858001 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-16 11:54:28,434 p=858001 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-16 11:54:28,434 p=858001 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-16 11:54:46,089 p=858458 u=ansible n=ansible | PLAY [generate motd using a template] ***************************************************************************
2021-06-16 11:54:46,097 p=858458 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 11:54:47,612 p=858458 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-16 11:54:47,623 p=858458 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 11:54:47,627 p=858458 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-16 11:54:47,741 p=858458 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-16 11:54:48,094 p=858458 u=ansible n=ansible | ok: [control.example.com]
2021-06-16 11:54:48,102 p=858458 u=ansible n=ansible | TASK [copy over the motd file] **********************************************************************************
2021-06-16 11:54:48,300 p=858458 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "AnsibleError: template error while templating string: Unexpected end of template. Jinja was looking for the following tags: 'elif' or 'else' or 'endif'. The innermost block that needs to be closed is 'if'.. String: Welcome to {{ansible_fqdn}}, another high quality system from RedPen Security.\n\nSystem Statistics:\nSystem Memory: {{ansible_memtotal_mb}}MB\nProcessor Count: {{ansible_processor_count}}\nPrimary Disk Size: {{ansible_devices.sda.size}}\n#{%if ansible_facts['devices']['sdb'] is defined %}\n{%if [ansible_devices.sdb] is defined %}\nSecondary Disk Size: {{ansible_devices.sdb.size}}\n{% else %}\nSecondary Disk Size: NOT AVAILABLE\n{% endif %}\n\n"}
2021-06-16 11:54:48,306 p=858458 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "AnsibleError: template error while templating string: Unexpected end of template. Jinja was looking for the following tags: 'elif' or 'else' or 'endif'. The innermost block that needs to be closed is 'if'.. String: Welcome to {{ansible_fqdn}}, another high quality system from RedPen Security.\n\nSystem Statistics:\nSystem Memory: {{ansible_memtotal_mb}}MB\nProcessor Count: {{ansible_processor_count}}\nPrimary Disk Size: {{ansible_devices.sda.size}}\n#{%if ansible_facts['devices']['sdb'] is defined %}\n{%if [ansible_devices.sdb] is defined %}\nSecondary Disk Size: {{ansible_devices.sdb.size}}\n{% else %}\nSecondary Disk Size: NOT AVAILABLE\n{% endif %}\n\n"}
2021-06-16 11:54:48,318 p=858458 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "AnsibleError: template error while templating string: Unexpected end of template. Jinja was looking for the following tags: 'elif' or 'else' or 'endif'. The innermost block that needs to be closed is 'if'.. String: Welcome to {{ansible_fqdn}}, another high quality system from RedPen Security.\n\nSystem Statistics:\nSystem Memory: {{ansible_memtotal_mb}}MB\nProcessor Count: {{ansible_processor_count}}\nPrimary Disk Size: {{ansible_devices.sda.size}}\n#{%if ansible_facts['devices']['sdb'] is defined %}\n{%if [ansible_devices.sdb] is defined %}\nSecondary Disk Size: {{ansible_devices.sdb.size}}\n{% else %}\nSecondary Disk Size: NOT AVAILABLE\n{% endif %}\n\n"}
2021-06-16 11:54:48,348 p=858458 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "AnsibleError: template error while templating string: Unexpected end of template. Jinja was looking for the following tags: 'elif' or 'else' or 'endif'. The innermost block that needs to be closed is 'if'.. String: Welcome to {{ansible_fqdn}}, another high quality system from RedPen Security.\n\nSystem Statistics:\nSystem Memory: {{ansible_memtotal_mb}}MB\nProcessor Count: {{ansible_processor_count}}\nPrimary Disk Size: {{ansible_devices.sda.size}}\n#{%if ansible_facts['devices']['sdb'] is defined %}\n{%if [ansible_devices.sdb] is defined %}\nSecondary Disk Size: {{ansible_devices.sdb.size}}\n{% else %}\nSecondary Disk Size: NOT AVAILABLE\n{% endif %}\n\n"}
2021-06-16 11:54:48,367 p=858458 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "AnsibleError: template error while templating string: Unexpected end of template. Jinja was looking for the following tags: 'elif' or 'else' or 'endif'. The innermost block that needs to be closed is 'if'.. String: Welcome to {{ansible_fqdn}}, another high quality system from RedPen Security.\n\nSystem Statistics:\nSystem Memory: {{ansible_memtotal_mb}}MB\nProcessor Count: {{ansible_processor_count}}\nPrimary Disk Size: {{ansible_devices.sda.size}}\n#{%if ansible_facts['devices']['sdb'] is defined %}\n{%if [ansible_devices.sdb] is defined %}\nSecondary Disk Size: {{ansible_devices.sdb.size}}\n{% else %}\nSecondary Disk Size: NOT AVAILABLE\n{% endif %}\n\n"}
2021-06-16 11:54:48,368 p=858458 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 11:54:48,368 p=858458 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-16 11:54:48,368 p=858458 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-16 11:54:48,368 p=858458 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-16 11:54:48,368 p=858458 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-16 11:54:48,368 p=858458 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-16 11:55:50,424 p=859224 u=ansible n=ansible | PLAY [generate motd using a template] ***************************************************************************
2021-06-16 11:55:50,432 p=859224 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 11:55:52,419 p=859224 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-16 11:55:52,444 p=859224 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-16 11:55:52,451 p=859224 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 11:55:52,470 p=859224 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-16 11:55:52,842 p=859224 u=ansible n=ansible | ok: [control.example.com]
2021-06-16 11:55:52,851 p=859224 u=ansible n=ansible | TASK [copy over the motd file] **********************************************************************************
2021-06-16 11:55:54,352 p=859224 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-16 11:55:54,370 p=859224 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-16 11:55:54,422 p=859224 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-16 11:55:54,440 p=859224 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-16 11:55:54,627 p=859224 u=ansible n=ansible | ok: [control.example.com]
2021-06-16 11:55:54,629 p=859224 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 11:55:54,629 p=859224 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:55:54,629 p=859224 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:55:54,629 p=859224 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:55:54,629 p=859224 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:55:54,630 p=859224 u=ansible n=ansible | control.example.com        : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:55:59,671 p=859774 u=ansible n=ansible | ansible4.example.com | CHANGED | rc=0 >>
Welcome to ansible4.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
Secondary Disk Size: NOT AVAILABLE

2021-06-16 11:55:59,672 p=859774 u=ansible n=ansible | ansible3.example.com | CHANGED | rc=0 >>
Welcome to ansible3.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
#Secondary Disk Size: 5.00 GB
Secondary Disk Size: 5.00 GB

2021-06-16 11:55:59,681 p=859774 u=ansible n=ansible | ansible2.example.com | CHANGED | rc=0 >>
Welcome to ansible2.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
Secondary Disk Size: NOT AVAILABLE

2021-06-16 11:55:59,681 p=859774 u=ansible n=ansible | ansible1.example.com | CHANGED | rc=0 >>
Welcome to ansible1.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
#Secondary Disk Size: 5.00 GB
Secondary Disk Size: 5.00 GB

2021-06-16 11:55:59,907 p=859774 u=ansible n=ansible | control.example.com | CHANGED | rc=0 >>
Welcome to control.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 1826MB
Processor Count: 2
Primary Disk Size: 20.00 GB
Secondary Disk Size: NOT AVAILABLE

2021-06-16 11:56:04,406 p=860018 u=ansible n=ansible | PLAY [generate motd using a template] ***************************************************************************
2021-06-16 11:56:04,414 p=860018 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 11:56:05,986 p=860018 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-16 11:56:05,998 p=860018 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 11:56:06,008 p=860018 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-16 11:56:06,031 p=860018 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-16 11:56:06,424 p=860018 u=ansible n=ansible | ok: [control.example.com]
2021-06-16 11:56:06,432 p=860018 u=ansible n=ansible | TASK [copy over the motd file] **********************************************************************************
2021-06-16 11:56:07,838 p=860018 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-16 11:56:07,842 p=860018 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-16 11:56:07,846 p=860018 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 11:56:07,865 p=860018 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-16 11:56:08,117 p=860018 u=ansible n=ansible | ok: [control.example.com]
2021-06-16 11:56:08,119 p=860018 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 11:56:08,119 p=860018 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:56:08,119 p=860018 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:56:08,119 p=860018 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:56:08,119 p=860018 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:56:08,119 p=860018 u=ansible n=ansible | control.example.com        : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:56:58,449 p=860860 u=ansible n=ansible | PLAY [generate motd using a template] ***************************************************************************
2021-06-16 11:56:58,457 p=860860 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 11:57:00,014 p=860860 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-16 11:57:00,042 p=860860 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-16 11:57:00,086 p=860860 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-16 11:57:00,105 p=860860 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 11:57:00,470 p=860860 u=ansible n=ansible | ok: [control.example.com]
2021-06-16 11:57:00,478 p=860860 u=ansible n=ansible | TASK [copy over the motd file] **********************************************************************************
2021-06-16 11:57:01,923 p=860860 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-16 11:57:01,937 p=860860 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-16 11:57:01,944 p=860860 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-16 11:57:01,968 p=860860 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-16 11:57:02,375 p=860860 u=ansible n=ansible | changed: [control.example.com]
2021-06-16 11:57:02,379 p=860860 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 11:57:02,379 p=860860 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:57:02,380 p=860860 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:57:02,380 p=860860 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:57:02,380 p=860860 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:57:02,380 p=860860 u=ansible n=ansible | control.example.com        : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:57:06,543 p=861427 u=ansible n=ansible | ansible2.example.com | CHANGED | rc=0 >>
Welcome to ansible2.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: <built-in method count of list object at 0x7fd410ab3948>
Primary Disk Size: 20.00 GB
Secondary Disk Size: NOT AVAILABLE

2021-06-16 11:57:06,544 p=861427 u=ansible n=ansible | ansible4.example.com | CHANGED | rc=0 >>
Welcome to ansible4.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: <built-in method count of list object at 0x7fd410acf788>
Primary Disk Size: 20.00 GB
Secondary Disk Size: NOT AVAILABLE

2021-06-16 11:57:06,559 p=861427 u=ansible n=ansible | ansible1.example.com | CHANGED | rc=0 >>
Welcome to ansible1.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: <built-in method count of list object at 0x7fd410aa8c88>
Primary Disk Size: 20.00 GB
Secondary Disk Size: 5.00 GB

2021-06-16 11:57:06,675 p=861427 u=ansible n=ansible | ansible3.example.com | CHANGED | rc=0 >>
Welcome to ansible3.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: <built-in method count of list object at 0x7fd410ac1608>
Primary Disk Size: 20.00 GB
Secondary Disk Size: 5.00 GB

2021-06-16 11:57:06,813 p=861427 u=ansible n=ansible | control.example.com | CHANGED | rc=0 >>
Welcome to control.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 1826MB
Processor Count: <built-in method count of list object at 0x7fd410b1ee08>
Primary Disk Size: 20.00 GB
Secondary Disk Size: NOT AVAILABLE

2021-06-16 11:57:38,020 p=861854 u=ansible n=ansible | localhost | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.200"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::d0eb:2348:63a1:cb77"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel/swap",
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_date_time": {
            "date": "2021-06-16",
            "day": "16",
            "epoch": "1623859057",
            "hour": "11",
            "iso8601": "2021-06-16T15:57:37Z",
            "iso8601_basic": "20210616T115737939097",
            "iso8601_basic_short": "20210616T115737",
            "iso8601_micro": "2021-06-16T15:57:37.939097Z",
            "minute": "57",
            "month": "06",
            "second": "37",
            "time": "11:57:37",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Wednesday",
            "weekday_number": "3",
            "weeknumber": "24",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.200",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:72:63:77",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel-root",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                ],
                "dm-1": [
                    "dm-name-rhel-swap",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                ],
                "sda3": [
                    "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "e582775b-f787-42fb-a7da-e66ffb7a210a"
                ],
                "dm-1": [
                    "521d3469-ac8d-490e-9c79-a6fd59024de4"
                ],
                "sda1": [
                    "6723-A89C"
                ],
                "sda2": [
                    "1e4b2b4a-ea26-430e-978c-de3884071e82"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-root",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "e582775b-f787-42fb-a7da-e66ffb7a210a"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-swap",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "521d3469-ac8d-490e-9c79-a6fd59024de4"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "6723-A89C"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "6723-A89C"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "1e4b2b4a-ea26-430e-978c-de3884071e82"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
                    },
                    "sda3": {
                        "holders": [
                            "rhel-swap",
                            "rhel-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "on",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.200",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::d0eb:2348:63a1:cb77",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:72:63:77",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HISTSIZE": "1000",
            "HOME": "/root",
            "HOSTNAME": "control.example.com",
            "LANG": "en_US.UTF-8",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/spool/mail/ansible",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-adejlojmzhvsimrcqsugwjvrbyfenmtc ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1623859057.2540944-861867-190461094856676/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "control.example.com",
        "ansible_hostname": "control",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "lo",
            "ens192"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:9a8e963cc88",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel"
                }
            },
            "vgs": {
                "rhel": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "36e2124a40614e3796fa06fcece0515e",
        "ansible_memfree_mb": 879,
        "ansible_memory_mb": {
            "nocache": {
                "free": 1401,
                "used": 425
            },
            "real": {
                "free": 879,
                "total": 1826,
                "used": 947
            },
            "swap": {
                "cached": 0,
                "free": 2047,
                "total": 2047,
                "used": 0
            }
        },
        "ansible_memtotal_mb": 1826,
        "ansible_mounts": [
            {
                "block_available": 3730688,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 568576,
                "device": "/dev/mapper/rhel-root",
                "fstype": "xfs",
                "inode_available": 8542467,
                "inode_total": 8603648,
                "inode_used": 61181,
                "mount": "/",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 15280898048,
                "size_total": 17609785344,
                "uuid": "e582775b-f787-42fb-a7da-e66ffb7a210a"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "6723-A89C"
            },
            {
                "block_available": 0,
                "block_size": 2048,
                "block_total": 4119280,
                "block_used": 4119280,
                "device": "/dev/sr0",
                "fstype": "iso9660",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/var/ftp/repo",
                "options": "ro,relatime,nojoliet,check=s,map=n,blocksize=2048",
                "size_available": 0,
                "size_total": 8436285440,
                "uuid": "2020-04-04-08-21-15-00"
            }
        ],
        "ansible_nodename": "control.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel/root",
                "rhel/swap"
            ],
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz",
            "1",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 2,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 2,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d 94 78 3e 53 21 2f-3c a5 64 70 c9 72 63 77",
        "ansible_product_uuid": "78944d56-533e-2f21-3ca5-6470c9726377",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "status": "disabled"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNhudUrTlfCgvAC31V1YPiPwqZKT7aFesPRbEGXj9B4esh+OI7dNbiUJPoteI+AqIZRzShz0BsfOtvfZux0v/dY=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIFC1LRLHGmTZfUEs+knXPYfQFkHnOTUCDib6l7DGR1F6",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQDTuLOzAeNf8ZQj8Qu64SLTprDRnagiihI/gUAzQX5NR8mkfVecF3591Hw0bY7d4OYL2GSa22Q97lWpSRMZzEe5kd0cIFTTg/coqMIK/VOKJvQarjnjj7rnrLnG8WJprf6kxITc7AuIWXTeD/vqgs/lBcdbD77PBXAShSj1dFD6qej4G7zOpo4OeQ0EWjbDQaRCqBWcTbaGEs2TpvIacfKSlWQ/tIvmcJQ2sVHqiGJ/AkRLMn4AHoKi5t7RKWT7HHhnc7ZDu686KGiplcSsiF/T37b6WneuS96tLNTUYbpT4Ot2zrYFYbo0YwRuzM1Jwpa/f3x0hoY7Lak/o3j6lDv5y9AhwhytPAKz8da2FLi2sna2Ve7913M9GMSiP41fRHnoLsqMy89IHDLm8vkJUjZxzRo7e4i4K5mXK/My7V5nGc3J8bJrmXCEzDDJfS42MuCmINcuz2MCjuvduwCrXroDHqrHMe306r1F9TQTeWlIJNSBwAuuC+FN8zVhlkJRiqc=",
        "ansible_swapfree_mb": 2047,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 945057,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-16 11:58:52,094 p=862438 u=ansible n=ansible | PLAY [generate motd using a template] ***************************************************************************
2021-06-16 11:58:52,101 p=862438 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 11:58:53,956 p=862438 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 11:58:53,988 p=862438 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-16 11:58:53,990 p=862438 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-16 11:58:53,992 p=862438 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-16 11:58:54,354 p=862438 u=ansible n=ansible | ok: [control.example.com]
2021-06-16 11:58:54,362 p=862438 u=ansible n=ansible | TASK [copy over the motd file] **********************************************************************************
2021-06-16 11:58:55,846 p=862438 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-16 11:58:55,850 p=862438 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-16 11:58:55,855 p=862438 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-16 11:58:55,922 p=862438 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-16 11:58:56,187 p=862438 u=ansible n=ansible | changed: [control.example.com]
2021-06-16 11:58:56,188 p=862438 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 11:58:56,189 p=862438 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:58:56,189 p=862438 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:58:56,189 p=862438 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:58:56,189 p=862438 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:58:56,189 p=862438 u=ansible n=ansible | control.example.com        : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 11:58:58,686 p=863016 u=ansible n=ansible | localhost | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.200"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::d0eb:2348:63a1:cb77"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel/swap",
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_date_time": {
            "date": "2021-06-16",
            "day": "16",
            "epoch": "1623859138",
            "hour": "11",
            "iso8601": "2021-06-16T15:58:58Z",
            "iso8601_basic": "20210616T115858634660",
            "iso8601_basic_short": "20210616T115858",
            "iso8601_micro": "2021-06-16T15:58:58.634660Z",
            "minute": "58",
            "month": "06",
            "second": "58",
            "time": "11:58:58",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Wednesday",
            "weekday_number": "3",
            "weeknumber": "24",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.200",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:72:63:77",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel-root",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                ],
                "dm-1": [
                    "dm-name-rhel-swap",
                    "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                ],
                "sda3": [
                    "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "e582775b-f787-42fb-a7da-e66ffb7a210a"
                ],
                "dm-1": [
                    "521d3469-ac8d-490e-9c79-a6fd59024de4"
                ],
                "sda1": [
                    "6723-A89C"
                ],
                "sda2": [
                    "1e4b2b4a-ea26-430e-978c-de3884071e82"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-root",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "e582775b-f787-42fb-a7da-e66ffb7a210a"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-swap",
                        "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "521d3469-ac8d-490e-9c79-a6fd59024de4"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "6723-A89C"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "6723-A89C"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "1e4b2b4a-ea26-430e-978c-de3884071e82"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
                    },
                    "sda3": {
                        "holders": [
                            "rhel-swap",
                            "rhel-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "0",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "on",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.200",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::d0eb:2348:63a1:cb77",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:72:63:77",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HISTSIZE": "1000",
            "HOME": "/root",
            "HOSTNAME": "control.example.com",
            "LANG": "en_US.UTF-8",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/spool/mail/ansible",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-owvdqptzzbhktsypiytonhxgzadixafn ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1623859137.993689-863022-204483464181971/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "control.example.com",
        "ansible_hostname": "control",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "lo",
            "ens192"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:9a8e963cc88",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel"
                }
            },
            "vgs": {
                "rhel": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "36e2124a40614e3796fa06fcece0515e",
        "ansible_memfree_mb": 877,
        "ansible_memory_mb": {
            "nocache": {
                "free": 1399,
                "used": 427
            },
            "real": {
                "free": 877,
                "total": 1826,
                "used": 949
            },
            "swap": {
                "cached": 0,
                "free": 2047,
                "total": 2047,
                "used": 0
            }
        },
        "ansible_memtotal_mb": 1826,
        "ansible_mounts": [
            {
                "block_available": 3730688,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 568576,
                "device": "/dev/mapper/rhel-root",
                "fstype": "xfs",
                "inode_available": 8542467,
                "inode_total": 8603648,
                "inode_used": 61181,
                "mount": "/",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 15280898048,
                "size_total": 17609785344,
                "uuid": "e582775b-f787-42fb-a7da-e66ffb7a210a"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "6723-A89C"
            },
            {
                "block_available": 0,
                "block_size": 2048,
                "block_total": 4119280,
                "block_used": 4119280,
                "device": "/dev/sr0",
                "fstype": "iso9660",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/var/ftp/repo",
                "options": "ro,relatime,nojoliet,check=s,map=n,blocksize=2048",
                "size_available": 0,
                "size_total": 8436285440,
                "uuid": "2020-04-04-08-21-15-00"
            }
        ],
        "ansible_nodename": "control.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel/root",
                "rhel/swap"
            ],
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz",
            "1",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 2,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 2,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d 94 78 3e 53 21 2f-3c a5 64 70 c9 72 63 77",
        "ansible_product_uuid": "78944d56-533e-2f21-3ca5-6470c9726377",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "status": "disabled"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNhudUrTlfCgvAC31V1YPiPwqZKT7aFesPRbEGXj9B4esh+OI7dNbiUJPoteI+AqIZRzShz0BsfOtvfZux0v/dY=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIFC1LRLHGmTZfUEs+knXPYfQFkHnOTUCDib6l7DGR1F6",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQDTuLOzAeNf8ZQj8Qu64SLTprDRnagiihI/gUAzQX5NR8mkfVecF3591Hw0bY7d4OYL2GSa22Q97lWpSRMZzEe5kd0cIFTTg/coqMIK/VOKJvQarjnjj7rnrLnG8WJprf6kxITc7AuIWXTeD/vqgs/lBcdbD77PBXAShSj1dFD6qej4G7zOpo4OeQ0EWjbDQaRCqBWcTbaGEs2TpvIacfKSlWQ/tIvmcJQ2sVHqiGJ/AkRLMn4AHoKi5t7RKWT7HHhnc7ZDu686KGiplcSsiF/T37b6WneuS96tLNTUYbpT4Ot2zrYFYbo0YwRuzM1Jwpa/f3x0hoY7Lak/o3j6lDv5y9AhwhytPAKz8da2FLi2sna2Ve7913M9GMSiP41fRHnoLsqMy89IHDLm8vkJUjZxzRo7e4i4K5mXK/My7V5nGc3J8bJrmXCEzDDJfS42MuCmINcuz2MCjuvduwCrXroDHqrHMe306r1F9TQTeWlIJNSBwAuuC+FN8zVhlkJRiqc=",
        "ansible_swapfree_mb": 2047,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 945137,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-16 11:59:03,724 p=863112 u=ansible n=ansible | ansible4.example.com | CHANGED | rc=0 >>
Welcome to ansible4.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
Secondary Disk Size: NOT AVAILABLE

2021-06-16 11:59:03,727 p=863112 u=ansible n=ansible | ansible3.example.com | CHANGED | rc=0 >>
Welcome to ansible3.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
Secondary Disk Size: 5.00 GB

2021-06-16 11:59:03,733 p=863112 u=ansible n=ansible | ansible2.example.com | CHANGED | rc=0 >>
Welcome to ansible2.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
Secondary Disk Size: NOT AVAILABLE

2021-06-16 11:59:03,754 p=863112 u=ansible n=ansible | ansible1.example.com | CHANGED | rc=0 >>
Welcome to ansible1.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 818MB
Processor Count: 1
Primary Disk Size: 20.00 GB
Secondary Disk Size: 5.00 GB

2021-06-16 11:59:03,999 p=863112 u=ansible n=ansible | control.example.com | CHANGED | rc=0 >>
Welcome to control.example.com, another high quality system from RedPen Security.

System Statistics:
System Memory: 1826MB
Processor Count: 2
Primary Disk Size: 20.00 GB
Secondary Disk Size: NOT AVAILABLE

2021-06-16 12:11:55,213 p=868735 u=ansible n=ansible | localhost | SUCCESS => {
    "msg": "$6$supersalty$Uxxo4h8ZjGVYEI99AXeVn5OuZGGx/Mbl/43ZzckSY49dAa.XGt1rOd.9PrqG3BrqtK3Sc6KluMlRoyN1cheNf0"
}
2021-06-16 12:13:12,964 p=869297 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 12:13:12,972 p=869297 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 12:13:14,287 p=869297 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 12:13:14,294 p=869297 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 12:13:15,929 p=869297 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-16 12:13:15,930 p=869297 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 12:13:15,931 p=869297 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 12:53:08,955 p=886008 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 12:53:08,963 p=886008 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 12:53:10,224 p=886008 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 12:53:10,231 p=886008 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 12:53:10,769 p=886008 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 12:53:10,771 p=886008 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 12:53:10,771 p=886008 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 13:01:04,738 p=889376 u=ansible n=ansible | localhost | SUCCESS => {
    "msg": "$6$supersalty$Uxxo4h8ZjGVYEI99AXeVn5OuZGGx/Mbl/43ZzckSY49dAa.XGt1rOd.9PrqG3BrqtK3Sc6KluMlRoyN1cheNf0"
}
2021-06-16 13:02:18,634 p=889938 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 13:02:18,642 p=889938 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 13:02:20,007 p=889938 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:02:20,013 p=889938 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 13:02:20,799 p=889938 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for
this module to work properly.

2021-06-16 13:02:20,799 p=889938 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-16 13:02:20,801 p=889938 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 13:02:20,801 p=889938 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 13:03:23,495 p=890423 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 13:03:23,502 p=890423 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 13:03:24,729 p=890423 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:03:24,735 p=890423 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 13:03:25,179 p=890423 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for
this module to work properly.

2021-06-16 13:03:25,179 p=890423 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:03:25,182 p=890423 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 13:03:25,182 p=890423 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 13:04:02,815 p=890727 u=ansible n=ansible | localhost | FAILED! => {
    "msg": "The module encrypt_string was not found in configured module paths"
}
2021-06-16 13:04:32,938 p=890925 u=ansible n=ansible | Reading plaintext input from stdin. (ctrl-d to end input)
2021-06-16 13:04:47,621 p=890925 u=ansible n=ansible | Encryption successful
2021-06-16 13:05:28,026 p=891374 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 13:05:28,034 p=891374 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 13:05:29,258 p=891374 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:05:29,265 p=891374 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 13:05:29,706 p=891374 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for
this module to work properly.

2021-06-16 13:05:29,706 p=891374 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:05:29,708 p=891374 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 13:05:29,708 p=891374 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 13:07:15,089 p=892149 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 13:07:15,097 p=892149 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 13:07:16,333 p=892149 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:07:16,340 p=892149 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 13:07:16,351 p=892149 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"msg": "Attempting to decrypt but no vault secrets found"}
2021-06-16 13:07:16,352 p=892149 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 13:07:16,352 p=892149 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-16 13:07:59,134 p=892463 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 13:07:59,141 p=892463 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 13:08:00,053 p=892463 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:08:00,060 p=892463 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 13:08:00,529 p=892463 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for
this module to work properly.

2021-06-16 13:08:00,530 p=892463 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-16 13:08:00,532 p=892463 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 13:08:00,532 p=892463 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 13:08:45,803 p=892813 u=ansible n=ansible | Reading plaintext input from stdin. (ctrl-d to end input)
2021-06-16 13:08:49,528 p=892813 u=ansible n=ansible | Encryption successful
2021-06-16 13:09:18,908 p=893055 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 13:09:18,915 p=893055 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 13:09:20,125 p=893055 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:09:20,132 p=893055 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 13:09:20,604 p=893055 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for
this module to work properly.

2021-06-16 13:09:20,605 p=893055 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-16 13:09:20,606 p=893055 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 13:09:20,606 p=893055 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 13:11:37,890 p=893839 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 13:11:37,897 p=893839 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 13:11:39,109 p=893839 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:11:39,116 p=893839 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 13:11:39,584 p=893839 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for
this module to work properly.

2021-06-16 13:11:39,584 p=893839 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-16 13:11:39,586 p=893839 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 13:11:39,586 p=893839 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 13:21:20,137 p=898138 u=ansible n=ansible | Encryption successful
2021-06-16 13:22:03,982 p=898483 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 13:22:03,990 p=898483 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 13:22:05,346 p=898483 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:22:05,353 p=898483 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 13:22:05,819 p=898483 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for
this module to work properly.

2021-06-16 13:22:05,819 p=898483 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:22:05,821 p=898483 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 13:22:05,821 p=898483 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 13:23:22,733 p=899096 u=ansible n=ansible | localhost | SUCCESS => {
    "msg": "$6$supersalty$Uxxo4h8ZjGVYEI99AXeVn5OuZGGx/Mbl/43ZzckSY49dAa.XGt1rOd.9PrqG3BrqtK3Sc6KluMlRoyN1cheNf0"
}
2021-06-16 13:24:03,271 p=899381 u=ansible n=ansible | Encryption successful
2021-06-16 13:24:17,334 p=899498 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 13:24:17,342 p=899498 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 13:24:18,600 p=899498 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:24:18,608 p=899498 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 13:24:19,076 p=899498 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for
this module to work properly.

2021-06-16 13:24:19,076 p=899498 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:24:19,078 p=899498 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 13:24:19,078 p=899498 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 13:24:23,835 p=899578 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 13:24:23,842 p=899578 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 13:24:24,772 p=899578 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:24:24,780 p=899578 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 13:24:25,246 p=899578 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for
this module to work properly.

2021-06-16 13:24:25,247 p=899578 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:24:25,248 p=899578 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 13:24:25,248 p=899578 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 13:27:26,731 p=900889 u=ansible n=ansible | Encryption successful
2021-06-16 13:28:51,063 p=901508 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 13:28:51,070 p=901508 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 13:28:52,318 p=901508 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:28:52,324 p=901508 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 13:28:52,781 p=901508 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-16 13:28:52,782 p=901508 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 13:28:52,782 p=901508 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 13:29:01,105 p=901614 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 13:29:01,113 p=901614 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 13:29:02,095 p=901614 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:29:02,102 p=901614 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 13:29:02,845 p=901614 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-16 13:29:02,847 p=901614 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 13:29:02,847 p=901614 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 13:32:34,938 p=903129 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 13:32:34,945 p=903129 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 13:32:36,198 p=903129 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:32:36,205 p=903129 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 13:32:36,685 p=903129 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:32:36,692 p=903129 u=ansible n=ansible | TASK [echo password] ********************************************************************************************
2021-06-16 13:32:36,719 p=903129 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "files/new_user_password"
}
2021-06-16 13:32:36,720 p=903129 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 13:32:36,721 p=903129 u=ansible n=ansible | ansible1.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 13:33:09,224 p=903401 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 13:33:09,232 p=903401 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 13:33:10,224 p=903401 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:33:10,233 p=903401 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 13:33:10,678 p=903401 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:33:10,685 p=903401 u=ansible n=ansible | TASK [echo password] ********************************************************************************************
2021-06-16 13:33:10,709 p=903401 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'files' is undefined\n\nThe error appears to be in '/home/ansible/task10.yml': line 14, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n        password: \"{{ new_user_pass | password_hash('sha512','supersalty') }}\"\n    - name: echo password\n      ^ here\n"}
2021-06-16 13:33:10,710 p=903401 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 13:33:10,710 p=903401 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-16 13:50:03,894 p=908394 u=ansible n=ansible | [WARNING]: Unable to parse /home/ansible/localhost as an inventory source

2021-06-16 13:50:03,894 p=908394 u=ansible n=ansible | [WARNING]: No inventory was parsed, only implicit localhost is available

2021-06-16 13:50:03,895 p=908394 u=ansible n=ansible | [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not
match 'all'

2021-06-16 13:50:04,097 p=908394 u=ansible n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: ansible1.example.com

2021-06-16 13:50:04,098 p=908394 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 13:50:04,098 p=908394 u=ansible n=ansible | skipping: no hosts matched
2021-06-16 13:50:04,098 p=908394 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 13:50:31,215 p=908596 u=ansible n=ansible | [WARNING]: Unable to parse /home/ansible/control.example.com as an inventory source

2021-06-16 13:50:31,215 p=908596 u=ansible n=ansible | [WARNING]: No inventory was parsed, only implicit localhost is available

2021-06-16 13:50:31,216 p=908596 u=ansible n=ansible | [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not
match 'all'

2021-06-16 13:50:31,416 p=908596 u=ansible n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: ansible1.example.com

2021-06-16 13:50:31,416 p=908596 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 13:50:31,416 p=908596 u=ansible n=ansible | skipping: no hosts matched
2021-06-16 13:50:31,416 p=908596 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 13:50:44,079 p=908707 u=ansible n=ansible | ERROR! the playbook: localhost could not be found
2021-06-16 13:50:53,468 p=908759 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 13:50:53,476 p=908759 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 13:50:54,816 p=908759 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:50:54,823 p=908759 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 13:50:55,294 p=908759 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:50:55,301 p=908759 u=ansible n=ansible | TASK [echo password] ********************************************************************************************
2021-06-16 13:50:55,324 p=908759 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'files' is undefined\n\nThe error appears to be in '/home/ansible/task10.yml': line 14, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n        password: \"{{ new_user_pass | password_hash('sha512','supersalty') }}\"\n    - name: echo password\n      ^ here\n"}
2021-06-16 13:50:55,325 p=908759 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 13:50:55,326 p=908759 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-16 13:51:23,696 p=909015 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 13:51:23,704 p=909015 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 13:51:24,628 p=909015 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:51:24,635 p=909015 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 13:51:25,075 p=909015 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:51:25,076 p=909015 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 13:51:25,076 p=909015 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 13:54:44,240 p=910463 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 13:54:44,247 p=910463 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 13:54:45,444 p=910463 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 13:54:45,452 p=910463 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 13:54:46,201 p=910463 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-16 13:54:46,203 p=910463 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 13:54:46,203 p=910463 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 13:57:18,239 p=911574 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 13:57:18,247 p=911574 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 13:57:19,481 p=911574 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-16 13:57:19,488 p=911574 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 13:57:21,425 p=911574 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-16 13:57:21,426 p=911574 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 13:57:21,426 p=911574 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 14:01:38,846 p=913498 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 14:01:38,853 p=913498 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 14:01:40,514 p=913498 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-16 14:01:40,521 p=913498 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 14:01:42,361 p=913498 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-16 14:01:42,363 p=913498 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 14:01:42,363 p=913498 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 14:04:09,570 p=914587 u=ansible n=ansible | PLAY [create user lisa with aes256 encoded password from ansible vault] *****************************************
2021-06-16 14:04:09,577 p=914587 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 14:04:11,000 p=914587 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-16 14:04:11,006 p=914587 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 14:04:11,485 p=914587 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-16 14:04:11,486 p=914587 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 14:04:11,486 p=914587 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 14:05:11,765 p=915068 u=ansible n=ansible | PLAY [create user linda with aes256 encoded password from ansible vault] ****************************************
2021-06-16 14:05:11,773 p=915068 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 14:05:13,020 p=915068 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 14:05:13,027 p=915068 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 14:05:14,512 p=915068 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-16 14:05:14,513 p=915068 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 14:05:14,514 p=915068 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 14:05:28,209 p=915219 u=ansible n=ansible | PLAY [create user linda with aes256 encoded password from ansible vault] ****************************************
2021-06-16 14:05:28,216 p=915219 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 14:05:29,245 p=915219 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 14:05:29,252 p=915219 u=ansible n=ansible | TASK [create user lisa] *****************************************************************************************
2021-06-16 14:05:29,703 p=915219 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 14:05:29,705 p=915219 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 14:05:29,705 p=915219 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 14:05:55,894 p=915437 u=ansible n=ansible | PLAY [create user linda with aes256 encoded password from ansible vault] ****************************************
2021-06-16 14:05:55,902 p=915437 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 14:05:56,867 p=915437 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 14:05:56,874 p=915437 u=ansible n=ansible | TASK [create user eric] *****************************************************************************************
2021-06-16 14:05:57,321 p=915437 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 14:05:57,323 p=915437 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 14:05:57,323 p=915437 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 14:06:12,809 p=915586 u=ansible n=ansible | PLAY [create user eric with aes256 encoded password from ansible vault] *****************************************
2021-06-16 14:06:12,816 p=915586 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 14:06:13,721 p=915586 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 14:06:13,727 p=915586 u=ansible n=ansible | TASK [create user eric] *****************************************************************************************
2021-06-16 14:06:15,215 p=915586 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-16 14:06:15,216 p=915586 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 14:06:15,217 p=915586 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 14:07:12,202 p=916035 u=ansible n=ansible | PLAY [create user carl with aes256 encoded password from ansible vault] *****************************************
2021-06-16 14:07:12,210 p=916035 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 14:07:13,181 p=916035 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 14:07:13,188 p=916035 u=ansible n=ansible | TASK [create user carl] *****************************************************************************************
2021-06-16 14:07:15,925 p=916035 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-16 14:07:15,926 p=916035 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 14:07:15,926 p=916035 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 14:08:36,758 p=916666 u=ansible n=ansible | PLAY [create user carl with aes256 encoded password from ansible vault] *****************************************
2021-06-16 14:08:36,765 p=916666 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 14:08:38,032 p=916666 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 14:08:38,038 p=916666 u=ansible n=ansible | TASK [create user carl] *****************************************************************************************
2021-06-16 14:08:38,531 p=916666 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 14:08:38,533 p=916666 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 14:08:38,533 p=916666 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 14:09:42,068 p=917126 u=ansible n=ansible | Reading plaintext input from stdin. (ctrl-d to end input)
2021-06-16 14:09:47,644 p=917126 u=ansible n=ansible | Encryption successful
2021-06-16 14:10:23,370 p=917447 u=ansible n=ansible | PLAY [create user mark with aes256 encoded password from ansible vault] *****************************************
2021-06-16 14:10:23,378 p=917447 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 14:10:24,621 p=917447 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 14:10:24,627 p=917447 u=ansible n=ansible | TASK [create user mark] *****************************************************************************************
2021-06-16 14:10:24,651 p=917447 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"msg": "Unexpected templating type error occurred on ({{ new_user_pass | password_hash('sha512','supersalty') }}): crypt() argument 1 must be str, not AnsibleVaultEncryptedUnicode"}
2021-06-16 14:10:24,653 p=917447 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 14:10:24,653 p=917447 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-16 14:11:41,147 p=917997 u=ansible n=ansible | Reading plaintext input from stdin. (ctrl-d to end input)
2021-06-16 14:11:49,661 p=917997 u=ansible n=ansible | Encryption successful
2021-06-16 14:12:25,383 p=918333 u=ansible n=ansible | PLAY [create user mark with aes256 encoded password from ansible vault] *****************************************
2021-06-16 14:12:25,391 p=918333 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 14:12:26,591 p=918333 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 14:12:26,597 p=918333 u=ansible n=ansible | TASK [create user mark] *****************************************************************************************
2021-06-16 14:12:26,622 p=918333 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"msg": "Unexpected templating type error occurred on ({{ new_user_pass | password_hash('sha512','supersalty') }}): crypt() argument 1 must be str, not AnsibleVaultEncryptedUnicode"}
2021-06-16 14:12:26,623 p=918333 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 14:12:26,624 p=918333 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-16 14:14:11,388 p=919118 u=ansible n=ansible | PLAY [create user mark with aes256 encoded password from ansible vault] *****************************************
2021-06-16 14:14:11,395 p=919118 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 14:14:12,650 p=919118 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 14:14:12,665 p=919118 u=ansible n=ansible | TASK [create user mark] *****************************************************************************************
2021-06-16 14:14:14,144 p=919118 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-16 14:14:14,147 p=919118 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 14:14:14,147 p=919118 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 14:16:19,485 p=920071 u=ansible n=ansible | PLAY [create user mark with aes256 encoded password from ansible vault] *****************************************
2021-06-16 14:16:19,493 p=920071 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 14:16:20,751 p=920071 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 14:16:20,758 p=920071 u=ansible n=ansible | TASK [create user mark] *****************************************************************************************
2021-06-16 14:16:21,555 p=920071 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-16 14:16:21,556 p=920071 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 14:16:21,556 p=920071 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 14:17:58,425 p=920762 u=ansible n=ansible | Reading plaintext input from stdin. (ctrl-d to end input)
2021-06-16 14:18:06,554 p=920762 u=ansible n=ansible | Encryption successful
2021-06-16 14:19:53,412 p=921597 u=ansible n=ansible | PLAY [create user mark with aes256 encoded password from ansible vault] *****************************************
2021-06-16 14:19:53,419 p=921597 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 14:19:54,647 p=921597 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 14:19:54,654 p=921597 u=ansible n=ansible | TASK [create user mark] *****************************************************************************************
2021-06-16 14:19:54,688 p=921597 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"msg": "Unexpected templating type error occurred on ({{ new_user_pass | password_hash('sha512','supersalty') }}): crypt() argument 1 must be str, not AnsibleVaultEncryptedUnicode"}
2021-06-16 14:19:54,689 p=921597 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 14:19:54,689 p=921597 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-16 14:22:28,773 p=922712 u=ansible n=ansible | ERROR! input is not vault encrypted datafiles/new_user_password is not a vault encrypted file for files/new_user_password
2021-06-16 14:28:59,861 p=925533 u=ansible n=ansible | Encryption successful
2021-06-16 14:30:24,459 p=926158 u=ansible n=ansible | PLAY [create user mark with aes256 encoded password from ansible vault] *****************************************
2021-06-16 14:30:24,467 p=926158 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 14:30:25,741 p=926158 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 14:30:25,747 p=926158 u=ansible n=ansible | TASK [create user mark] *****************************************************************************************
2021-06-16 14:30:26,508 p=926158 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-16 14:30:26,510 p=926158 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 14:30:26,510 p=926158 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-16 14:34:32,362 p=927918 u=ansible n=ansible | PLAY [create user mark with aes256 encoded password from ansible vault] *****************************************
2021-06-16 14:34:32,370 p=927918 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-16 14:34:33,656 p=927918 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 14:34:33,662 p=927918 u=ansible n=ansible | TASK [create user mark] *****************************************************************************************
2021-06-16 14:34:34,138 p=927918 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-16 14:34:34,139 p=927918 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-16 14:34:34,139 p=927918 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 10:35:59,824 p=942265 u=ansible n=ansible | PLAY [create user mark with aes256 encoded password from ansible vault] *****************************************
2021-06-18 10:35:59,832 p=942265 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 10:36:01,330 p=942265 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 10:36:01,342 p=942265 u=ansible n=ansible | TASK [create user mark] *****************************************************************************************
2021-06-18 10:36:01,827 p=942265 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 10:36:01,828 p=942265 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 10:36:01,828 p=942265 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 10:36:08,333 p=942348 u=ansible n=ansible | PLAY [create user mark with aes256 encoded password from ansible vault] *****************************************
2021-06-18 10:36:08,342 p=942348 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 10:36:09,380 p=942348 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 10:36:09,387 p=942348 u=ansible n=ansible | TASK [create user mark] *****************************************************************************************
2021-06-18 10:36:09,882 p=942348 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 10:36:09,883 p=942348 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 10:36:09,884 p=942348 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 10:38:02,616 p=943219 u=ansible n=ansible | PLAY [create user mark with aes256 encoded password from ansible vault] *****************************************
2021-06-18 10:38:02,624 p=943219 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 10:38:03,905 p=943219 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 10:38:03,911 p=943219 u=ansible n=ansible | TASK [create user mark] *****************************************************************************************
2021-06-18 10:38:04,371 p=943219 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 10:38:04,372 p=943219 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 10:38:04,373 p=943219 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 10:38:11,157 p=943313 u=ansible n=ansible | PLAY [create user mark with aes256 encoded password from ansible vault] *****************************************
2021-06-18 10:38:11,165 p=943313 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 10:38:12,129 p=943313 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 10:38:12,136 p=943313 u=ansible n=ansible | TASK [create user mark] *****************************************************************************************
2021-06-18 10:38:12,609 p=943313 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 10:38:12,611 p=943313 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 10:38:12,611 p=943313 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 10:43:02,509 p=945375 u=ansible n=ansible | Encryption successful
2021-06-18 10:44:08,482 p=945885 u=ansible n=ansible | PLAY [create user mark with aes256 encoded password from ansible vault] *****************************************
2021-06-18 10:44:08,491 p=945885 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 10:44:09,848 p=945885 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 10:44:09,855 p=945885 u=ansible n=ansible | TASK [create user mark] *****************************************************************************************
2021-06-18 10:44:10,385 p=945885 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 10:44:10,387 p=945885 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 10:44:10,387 p=945885 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 10:44:34,836 p=946102 u=ansible n=ansible | PLAY [create user john with aes256 encoded password from ansible vault] *****************************************
2021-06-18 10:44:34,845 p=946102 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 10:44:35,856 p=946102 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 10:44:35,863 p=946102 u=ansible n=ansible | TASK [create user john] *****************************************************************************************
2021-06-18 10:44:36,342 p=946102 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-18 10:44:36,344 p=946102 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 10:44:36,344 p=946102 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 10:44:55,722 p=946200 u=ansible n=ansible | PLAY [create user john with aes256 encoded password from ansible vault] *****************************************
2021-06-18 10:44:55,734 p=946200 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 10:44:56,767 p=946200 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 10:44:56,775 p=946200 u=ansible n=ansible | TASK [create user john] *****************************************************************************************
2021-06-18 10:44:58,355 p=946200 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-18 10:44:58,357 p=946200 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 10:44:58,357 p=946200 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 10:48:22,622 p=947754 u=ansible n=ansible | PLAY [create user john with aes256 encoded password from ansible vault] *****************************************
2021-06-18 10:48:22,631 p=947754 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 10:48:23,975 p=947754 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 10:48:23,982 p=947754 u=ansible n=ansible | TASK [create user john] *****************************************************************************************
2021-06-18 10:48:24,493 p=947754 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 10:48:24,494 p=947754 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 10:48:24,495 p=947754 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 10:50:32,733 p=948701 u=ansible n=ansible | Encryption successful
2021-06-18 10:51:58,482 p=949340 u=ansible n=ansible | PLAY [create user john with aes256 encoded password from ansible vault] *****************************************
2021-06-18 10:51:58,491 p=949340 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 10:51:59,907 p=949340 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 10:51:59,916 p=949340 u=ansible n=ansible | TASK [create user john] *****************************************************************************************
2021-06-18 10:52:00,431 p=949340 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 10:52:00,433 p=949340 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 10:52:00,433 p=949340 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 10:53:58,515 p=950206 u=ansible n=ansible | PLAY [create user marc with aes256 encoded password from ansible vault] *****************************************
2021-06-18 10:53:58,529 p=950206 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 10:53:59,936 p=950206 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-18 10:53:59,943 p=950206 u=ansible n=ansible | TASK [create user marc] *****************************************************************************************
2021-06-18 10:53:59,969 p=950206 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: Unable to look up a name or access an attribute in template string ({{ new_user_pass | password_hash('sha512', 'supersalty') }}).\nMake sure your variable name does not contain invalid characters like '-': crypt() argument 1 must be str, not AnsibleUndefined\n\nThe error appears to be in '/home/ansible/task10.yml': line 5, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  tasks:\n    - name: create user marc\n      ^ here\n"}
2021-06-18 10:53:59,970 p=950206 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 10:53:59,970 p=950206 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-18 10:56:06,297 p=951128 u=ansible n=ansible | PLAY [create user marc with aes256 encoded password from ansible vault] *****************************************
2021-06-18 10:56:06,305 p=951128 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 10:56:07,659 p=951128 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-18 10:56:07,666 p=951128 u=ansible n=ansible | TASK [create user marc] *****************************************************************************************
2021-06-18 10:56:07,692 p=951128 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: Unable to look up a name or access an attribute in template string ({{ new_user_pass | password_hash('sha512', 'supersalty') }}).\nMake sure your variable name does not contain invalid characters like '-': crypt() argument 1 must be str, not AnsibleUndefined\n\nThe error appears to be in '/home/ansible/task10.yml': line 5, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  tasks:\n    - name: create user marc\n      ^ here\n"}
2021-06-18 10:56:07,693 p=951128 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 10:56:07,694 p=951128 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-18 10:56:49,305 p=951460 u=ansible n=ansible | PLAY [create user marc with aes256 encoded password from ansible vault] *****************************************
2021-06-18 10:56:49,328 p=951460 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 10:56:50,422 p=951460 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-18 10:56:50,429 p=951460 u=ansible n=ansible | TASK [create user marc] *****************************************************************************************
2021-06-18 10:56:51,066 p=951460 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-18 10:56:51,068 p=951460 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 10:56:51,068 p=951460 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 10:56:56,632 p=951537 u=ansible n=ansible | PLAY [create user marc with aes256 encoded password from ansible vault] *****************************************
2021-06-18 10:56:56,654 p=951537 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 10:56:57,706 p=951537 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-18 10:56:57,713 p=951537 u=ansible n=ansible | TASK [create user marc] *****************************************************************************************
2021-06-18 10:56:59,567 p=951537 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-18 10:56:59,569 p=951537 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 10:56:59,569 p=951537 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 10:58:09,684 p=952079 u=ansible n=ansible | PLAY [create user marc with aes256 encoded password from ansible vault] *****************************************
2021-06-18 10:58:09,705 p=952079 u=ansible n=ansible | ERROR! Decryption failed (no vault secrets were found that could decrypt) on /home/ansible/group_vars/prod
2021-06-18 10:58:13,493 p=952128 u=ansible n=ansible | PLAY [create user marc with aes256 encoded password from ansible vault] *****************************************
2021-06-18 10:58:13,499 p=952128 u=ansible n=ansible | ERROR! Attempting to decrypt but no vault secrets found
2021-06-18 10:58:20,504 p=952184 u=ansible n=ansible | PLAY [create user marc with aes256 encoded password from ansible vault] *****************************************
2021-06-18 10:58:20,511 p=952184 u=ansible n=ansible | ERROR! Attempting to decrypt but no vault secrets found
2021-06-18 10:58:29,144 p=952259 u=ansible n=ansible | PLAY [create user marc with aes256 encoded password from ansible vault] *****************************************
2021-06-18 10:58:29,154 p=952259 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 10:58:30,508 p=952259 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-18 10:58:30,515 p=952259 u=ansible n=ansible | TASK [create user marc] *****************************************************************************************
2021-06-18 10:58:31,095 p=952259 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-18 10:58:31,097 p=952259 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 10:58:31,097 p=952259 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 10:59:04,651 p=952537 u=ansible n=ansible | PLAY [create user marc with aes256 encoded password from ansible vault] *****************************************
2021-06-18 10:59:04,658 p=952537 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 10:59:05,996 p=952537 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-18 10:59:06,003 p=952537 u=ansible n=ansible | TASK [create user marc] *****************************************************************************************
2021-06-18 10:59:08,317 p=952537 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-18 10:59:08,319 p=952537 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 10:59:08,319 p=952537 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 10:59:54,363 p=952913 u=ansible n=ansible | PLAY [create user marc with aes256 encoded password from ansible vault] *****************************************
2021-06-18 10:59:54,373 p=952913 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 10:59:55,491 p=952913 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-18 10:59:55,499 p=952913 u=ansible n=ansible | TASK [create user marc] *****************************************************************************************
2021-06-18 10:59:56,046 p=952913 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-18 10:59:56,047 p=952913 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 10:59:56,047 p=952913 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 11:00:59,969 p=953400 u=ansible n=ansible | PLAY [create user marc with aes256 encoded password from ansible vault] *****************************************
2021-06-18 11:00:59,977 p=953400 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 11:01:01,294 p=953400 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-18 11:01:01,302 p=953400 u=ansible n=ansible | TASK [create user marc] *****************************************************************************************
2021-06-18 11:01:01,789 p=953400 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-18 11:01:01,791 p=953400 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 11:01:01,791 p=953400 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 11:02:08,468 p=953921 u=ansible n=ansible | PLAY [create user marc with aes256 encoded password from ansible vault] *****************************************
2021-06-18 11:02:08,476 p=953921 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 11:02:09,788 p=953921 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-18 11:02:09,794 p=953921 u=ansible n=ansible | TASK [create user marc] *****************************************************************************************
2021-06-18 11:02:10,275 p=953921 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-18 11:02:10,276 p=953921 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 11:02:10,276 p=953921 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 11:02:31,543 p=954115 u=ansible n=ansible | PLAY [create user marc with aes256 encoded password from ansible vault] *****************************************
2021-06-18 11:02:31,552 p=954115 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 11:02:32,907 p=954115 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 11:02:32,914 p=954115 u=ansible n=ansible | TASK [create user marc] *****************************************************************************************
2021-06-18 11:02:34,569 p=954115 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-18 11:02:34,571 p=954115 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 11:02:34,571 p=954115 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 11:14:46,694 p=959313 u=ansible n=ansible | PLAY [create user david with aes256 encoded password from ansible vault] ****************************************
2021-06-18 11:14:46,703 p=959313 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 11:14:48,101 p=959313 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-18 11:14:48,108 p=959313 u=ansible n=ansible | TASK [create user david] ****************************************************************************************
2021-06-18 11:14:48,619 p=959313 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-18 11:14:48,621 p=959313 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 11:14:48,621 p=959313 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 11:23:25,384 p=962972 u=ansible n=ansible | PLAY [create user david with aes256 encoded password from ansible vault] ****************************************
2021-06-18 11:23:25,393 p=962972 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 11:23:26,681 p=962972 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-18 11:23:26,687 p=962972 u=ansible n=ansible | TASK [create user david] ****************************************************************************************
2021-06-18 11:23:27,184 p=962972 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-18 11:23:27,195 p=962972 u=ansible n=ansible | TASK [debug variable output] ************************************************************************************
2021-06-18 11:23:27,227 p=962972 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "lolpassword"
}
2021-06-18 11:23:27,229 p=962972 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 11:23:27,229 p=962972 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 11:23:34,570 p=963068 u=ansible n=ansible | PLAY [create user david with aes256 encoded password from ansible vault] ****************************************
2021-06-18 11:23:34,579 p=963068 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 11:23:35,615 p=963068 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-18 11:23:35,622 p=963068 u=ansible n=ansible | TASK [create user david] ****************************************************************************************
2021-06-18 11:23:37,049 p=963068 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-18 11:23:37,057 p=963068 u=ansible n=ansible | TASK [debug variable output] ************************************************************************************
2021-06-18 11:23:37,087 p=963068 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "lolpassword"
}
2021-06-18 11:23:37,089 p=963068 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 11:23:37,089 p=963068 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 11:27:29,518 p=964734 u=ansible n=ansible | PLAY [create user david with aes256 encoded password from ansible vault] ****************************************
2021-06-18 11:27:29,526 p=964734 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 11:27:30,931 p=964734 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-18 11:27:30,938 p=964734 u=ansible n=ansible | TASK [create user david] ****************************************************************************************
2021-06-18 11:27:31,447 p=964734 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-18 11:27:31,454 p=964734 u=ansible n=ansible | TASK [debug variable output] ************************************************************************************
2021-06-18 11:27:31,484 p=964734 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "lolpassword"
}
2021-06-18 11:27:31,485 p=964734 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 11:27:31,485 p=964734 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 11:27:37,948 p=964823 u=ansible n=ansible | PLAY [create user david with aes256 encoded password from ansible vault] ****************************************
2021-06-18 11:27:37,958 p=964823 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 11:27:38,992 p=964823 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-18 11:27:39,000 p=964823 u=ansible n=ansible | TASK [create user david] ****************************************************************************************
2021-06-18 11:27:40,096 p=964823 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-18 11:27:40,103 p=964823 u=ansible n=ansible | TASK [debug variable output] ************************************************************************************
2021-06-18 11:27:40,137 p=964823 u=ansible n=ansible | ok: [ansible3.example.com] => {
    "msg": "lolpassword"
}
2021-06-18 11:27:40,139 p=964823 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 11:27:40,139 p=964823 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 13:00:05,312 p=1002712 u=ansible n=ansible | PLAY [create user david with aes256 encoded password from ansible vault] ****************************************
2021-06-18 13:00:05,320 p=1002712 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 13:00:06,777 p=1002712 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 13:00:06,785 p=1002712 u=ansible n=ansible | TASK [create user david] ****************************************************************************************
2021-06-18 13:00:07,266 p=1002712 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-18 13:00:07,273 p=1002712 u=ansible n=ansible | TASK [debug variable output] ************************************************************************************
2021-06-18 13:00:07,299 p=1002712 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "lolpassword"
}
2021-06-18 13:00:07,300 p=1002712 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 13:00:07,300 p=1002712 u=ansible n=ansible | ansible1.example.com       : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 13:00:41,969 p=1003000 u=ansible n=ansible | PLAY [create user david with aes256 encoded password from ansible vault] ****************************************
2021-06-18 13:00:41,978 p=1003000 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 13:00:42,944 p=1003000 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 13:00:42,951 p=1003000 u=ansible n=ansible | TASK [create user david] ****************************************************************************************
2021-06-18 13:00:43,862 p=1003000 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-18 13:00:43,869 p=1003000 u=ansible n=ansible | TASK [debug variable output] ************************************************************************************
2021-06-18 13:00:43,897 p=1003000 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "lolpassword"
}
2021-06-18 13:00:43,899 p=1003000 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 13:00:43,899 p=1003000 u=ansible n=ansible | ansible1.example.com       : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 13:01:11,171 p=1003224 u=ansible n=ansible | Encryption successful
2021-06-18 13:01:22,948 p=1003319 u=ansible n=ansible | PLAY [create user david with aes256 encoded password from ansible vault] ****************************************
2021-06-18 13:01:22,971 p=1003319 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 13:01:23,946 p=1003319 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 13:01:23,953 p=1003319 u=ansible n=ansible | TASK [create user david] ****************************************************************************************
2021-06-18 13:01:24,435 p=1003319 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 13:01:24,442 p=1003319 u=ansible n=ansible | TASK [debug variable output] ************************************************************************************
2021-06-18 13:01:24,468 p=1003319 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "lolpassword"
}
2021-06-18 13:01:24,469 p=1003319 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 13:01:24,469 p=1003319 u=ansible n=ansible | ansible1.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 13:01:49,339 p=1003548 u=ansible n=ansible | PLAY [create user david with aes256 encoded password from ansible vault] ****************************************
2021-06-18 13:01:49,363 p=1003548 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 13:01:50,787 p=1003548 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-18 13:01:50,793 p=1003548 u=ansible n=ansible | TASK [create user david] ****************************************************************************************
2021-06-18 13:01:51,808 p=1003548 u=ansible n=ansible | changed: [ansible2.example.com]
2021-06-18 13:01:51,815 p=1003548 u=ansible n=ansible | TASK [debug variable output] ************************************************************************************
2021-06-18 13:01:51,843 p=1003548 u=ansible n=ansible | ok: [ansible2.example.com] => {
    "msg": "lolpassword"
}
2021-06-18 13:01:51,844 p=1003548 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 13:01:51,845 p=1003548 u=ansible n=ansible | ansible2.example.com       : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 13:02:25,650 p=1003835 u=ansible n=ansible | PLAY [create user david with aes256 encoded password from ansible vault] ****************************************
2021-06-18 13:02:25,670 p=1003835 u=ansible n=ansible | ERROR! Decryption failed (no vault secrets were found that could decrypt) on /home/ansible/group_vars/all
2021-06-18 13:02:30,422 p=1003877 u=ansible n=ansible | PLAY [create user david with aes256 encoded password from ansible vault] ****************************************
2021-06-18 13:02:30,444 p=1003877 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 13:02:31,791 p=1003877 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-18 13:02:31,797 p=1003877 u=ansible n=ansible | TASK [create user david] ****************************************************************************************
2021-06-18 13:02:32,766 p=1003877 u=ansible n=ansible | changed: [ansible4.example.com]
2021-06-18 13:02:32,774 p=1003877 u=ansible n=ansible | TASK [debug variable output] ************************************************************************************
2021-06-18 13:02:32,804 p=1003877 u=ansible n=ansible | ok: [ansible4.example.com] => {
    "msg": "lolpassword"
}
2021-06-18 13:02:32,805 p=1003877 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 13:02:32,805 p=1003877 u=ansible n=ansible | ansible4.example.com       : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 13:03:16,469 p=1004229 u=ansible n=ansible | PLAY [create user david with aes256 encoded password from ansible vault] ****************************************
2021-06-18 13:03:16,492 p=1004229 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 13:03:18,603 p=1004229 u=ansible n=ansible | ok: [control.example.com]
2021-06-18 13:03:18,611 p=1004229 u=ansible n=ansible | TASK [create user david] ****************************************************************************************
2021-06-18 13:03:19,507 p=1004229 u=ansible n=ansible | changed: [control.example.com]
2021-06-18 13:03:19,515 p=1004229 u=ansible n=ansible | TASK [debug variable output] ************************************************************************************
2021-06-18 13:03:19,545 p=1004229 u=ansible n=ansible | ok: [control.example.com] => {
    "msg": "lolpassword"
}
2021-06-18 13:03:19,547 p=1004229 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 13:03:19,547 p=1004229 u=ansible n=ansible | control.example.com        : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 13:14:00,875 p=1008549 u=ansible n=ansible | PLAY [managing storage exam preparation] ************************************************************************
2021-06-18 13:14:00,881 p=1008549 u=ansible n=ansible | ERROR! Attempting to decrypt but no vault secrets found
2021-06-18 13:14:35,498 p=1008810 u=ansible n=ansible | PLAY [managing storage exam preparation] ************************************************************************
2021-06-18 13:14:35,506 p=1008810 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 13:14:37,545 p=1008810 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-18 13:14:37,549 p=1008810 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-18 13:14:37,563 p=1008810 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-18 13:14:37,566 p=1008810 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 13:14:38,009 p=1008810 u=ansible n=ansible | ok: [control.example.com]
2021-06-18 13:14:38,020 p=1008810 u=ansible n=ansible | TASK [create 1GiB partition on /dev/sdb1 on ansible1] ***********************************************************
2021-06-18 13:14:38,096 p=1008810 u=ansible n=ansible | skipping: [control.example.com]
2021-06-18 13:14:38,107 p=1008810 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-18 13:14:38,111 p=1008810 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-18 13:14:38,112 p=1008810 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-18 13:14:38,616 p=1008810 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-18 13:14:38,618 p=1008810 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 13:14:38,618 p=1008810 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-18 13:14:38,619 p=1008810 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-18 13:14:38,619 p=1008810 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-18 13:14:38,619 p=1008810 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-18 13:14:38,619 p=1008810 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-18 13:19:58,191 p=1011324 u=ansible n=ansible | PLAY [managing storage exam preparation] ************************************************************************
2021-06-18 13:19:58,199 p=1011324 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 13:20:00,125 p=1011324 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-18 13:20:00,157 p=1011324 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 13:20:00,180 p=1011324 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-18 13:20:00,184 p=1011324 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-18 13:20:00,537 p=1011324 u=ansible n=ansible | ok: [control.example.com]
2021-06-18 13:20:00,544 p=1011324 u=ansible n=ansible | TASK [create 1GiB partition on /dev/sdb1 on ansible1] ***********************************************************
2021-06-18 13:20:00,594 p=1011324 u=ansible n=ansible | skipping: [control.example.com]
2021-06-18 13:20:00,622 p=1011324 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-18 13:20:00,624 p=1011324 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-18 13:20:00,645 p=1011324 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-18 13:20:01,058 p=1011324 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-18 13:20:01,065 p=1011324 u=ansible n=ansible | TASK [create 3GiB partition on /dev/sdb1 on ansible3] ***********************************************************
2021-06-18 13:20:01,134 p=1011324 u=ansible n=ansible | skipping: [control.example.com]
2021-06-18 13:20:01,134 p=1011324 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-18 13:20:01,142 p=1011324 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-18 13:20:01,166 p=1011324 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-18 13:20:01,536 p=1011324 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-18 13:20:01,543 p=1011324 u=ansible n=ansible | TASK [setup a volume group on all hosts on which the disk /dev/sdb is defined] **********************************
2021-06-18 13:20:02,233 p=1011324 u=ansible n=ansible | [WARNING]: The value 32 (type int) in a string field was converted to '32' (type string). If this does not look
like what you expect, quote the entire value to ensure it does not change.

2021-06-18 13:20:02,233 p=1011324 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "Device /dev/sdb not found."}
2021-06-18 13:20:02,236 p=1011324 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "Device /dev/sdb not found."}
2021-06-18 13:20:02,294 p=1011324 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-18 13:20:02,323 p=1011324 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-18 13:20:02,429 p=1011324 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "Device /dev/sdb not found."}
2021-06-18 13:20:02,432 p=1011324 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 13:20:02,432 p=1011324 u=ansible n=ansible | ansible1.example.com       : ok=3    changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-18 13:20:02,432 p=1011324 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
2021-06-18 13:20:02,433 p=1011324 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-18 13:20:02,433 p=1011324 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
2021-06-18 13:20:02,433 p=1011324 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
2021-06-18 13:20:45,439 p=1012098 u=ansible n=ansible | PLAY [managing storage exam preparation] ************************************************************************
2021-06-18 13:20:45,449 p=1012098 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 13:20:46,910 p=1012098 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-18 13:20:46,935 p=1012098 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-18 13:20:46,999 p=1012098 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 13:20:47,034 p=1012098 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-18 13:20:47,356 p=1012098 u=ansible n=ansible | ok: [control.example.com]
2021-06-18 13:20:47,363 p=1012098 u=ansible n=ansible | TASK [create 1GiB partition on /dev/sdb1 on ansible1] ***********************************************************
2021-06-18 13:20:47,427 p=1012098 u=ansible n=ansible | skipping: [control.example.com]
2021-06-18 13:20:47,443 p=1012098 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-18 13:20:47,447 p=1012098 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-18 13:20:47,455 p=1012098 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-18 13:20:47,842 p=1012098 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-18 13:20:47,849 p=1012098 u=ansible n=ansible | TASK [create 3GiB partition on /dev/sdb1 on ansible3] ***********************************************************
2021-06-18 13:20:47,922 p=1012098 u=ansible n=ansible | skipping: [control.example.com]
2021-06-18 13:20:47,923 p=1012098 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-18 13:20:47,923 p=1012098 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-18 13:20:47,940 p=1012098 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-18 13:20:48,290 p=1012098 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-18 13:20:48,297 p=1012098 u=ansible n=ansible | TASK [setup a volume group on all hosts on which the disk /dev/sdb is defined] **********************************
2021-06-18 13:20:48,383 p=1012098 u=ansible n=ansible | skipping: [control.example.com]
2021-06-18 13:20:48,384 p=1012098 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-18 13:20:48,391 p=1012098 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-18 13:20:48,392 p=1012098 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-18 13:20:48,406 p=1012098 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-18 13:20:48,408 p=1012098 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 13:20:48,408 p=1012098 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-18 13:20:48,409 p=1012098 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-18 13:20:48,409 p=1012098 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-18 13:20:48,409 p=1012098 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-18 13:20:48,409 p=1012098 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-18 13:26:00,835 p=1014578 u=ansible n=ansible | PLAY [managing storage exam preparation] ************************************************************************
2021-06-18 13:26:00,844 p=1014578 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 13:26:02,775 p=1014578 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-18 13:26:02,777 p=1014578 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 13:26:02,779 p=1014578 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-18 13:26:02,782 p=1014578 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-18 13:26:03,124 p=1014578 u=ansible n=ansible | ok: [control.example.com]
2021-06-18 13:26:03,131 p=1014578 u=ansible n=ansible | TASK [create 1GiB partition on /dev/sdb1 on ansible1] ***********************************************************
2021-06-18 13:26:03,168 p=1014578 u=ansible n=ansible | skipping: [control.example.com]
2021-06-18 13:26:03,220 p=1014578 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-18 13:26:03,222 p=1014578 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-18 13:26:03,225 p=1014578 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-18 13:26:03,637 p=1014578 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-18 13:26:03,643 p=1014578 u=ansible n=ansible | TASK [create 3GiB partition on /dev/sdb1 on ansible3] ***********************************************************
2021-06-18 13:26:03,697 p=1014578 u=ansible n=ansible | skipping: [control.example.com]
2021-06-18 13:26:03,707 p=1014578 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-18 13:26:03,719 p=1014578 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-18 13:26:03,733 p=1014578 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-18 13:26:04,095 p=1014578 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-18 13:26:04,101 p=1014578 u=ansible n=ansible | TASK [check if /dev/sdb exists] *********************************************************************************
2021-06-18 13:26:04,812 p=1014578 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-18 13:26:04,813 p=1014578 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-18 13:26:04,815 p=1014578 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-18 13:26:04,824 p=1014578 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 13:26:04,987 p=1014578 u=ansible n=ansible | ok: [control.example.com]
2021-06-18 13:26:04,993 p=1014578 u=ansible n=ansible | TASK [setup a volume group on all hosts on which the disk /dev/sdb is defined] **********************************
2021-06-18 13:26:05,061 p=1014578 u=ansible n=ansible | skipping: [control.example.com]
2021-06-18 13:26:05,062 p=1014578 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-18 13:26:05,121 p=1014578 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-18 13:26:05,574 p=1014578 u=ansible n=ansible | [WARNING]: The value 32 (type int) in a string field was converted to '32' (type string). If this does not look
like what you expect, quote the entire value to ensure it does not change.

2021-06-18 13:26:05,574 p=1014578 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-18 13:26:05,581 p=1014578 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-18 13:26:05,583 p=1014578 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 13:26:05,583 p=1014578 u=ansible n=ansible | ansible1.example.com       : ok=4    changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-18 13:26:05,583 p=1014578 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-18 13:26:05,583 p=1014578 u=ansible n=ansible | ansible3.example.com       : ok=4    changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-18 13:26:05,583 p=1014578 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-18 13:26:05,583 p=1014578 u=ansible n=ansible | control.example.com        : ok=2    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-18 13:26:20,821 p=1015187 u=ansible n=ansible | PLAY [managing storage exam preparation] ************************************************************************
2021-06-18 13:26:20,830 p=1015187 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-18 13:26:22,329 p=1015187 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-18 13:26:22,333 p=1015187 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-18 13:26:22,356 p=1015187 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-18 13:26:22,522 p=1015187 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 13:26:22,773 p=1015187 u=ansible n=ansible | ok: [control.example.com]
2021-06-18 13:26:22,782 p=1015187 u=ansible n=ansible | TASK [create 1GiB partition on /dev/sdb1 on ansible1] ***********************************************************
2021-06-18 13:26:22,862 p=1015187 u=ansible n=ansible | skipping: [control.example.com]
2021-06-18 13:26:22,867 p=1015187 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-18 13:26:22,882 p=1015187 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-18 13:26:22,885 p=1015187 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-18 13:26:23,298 p=1015187 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-18 13:26:23,307 p=1015187 u=ansible n=ansible | TASK [create 3GiB partition on /dev/sdb1 on ansible3] ***********************************************************
2021-06-18 13:26:23,354 p=1015187 u=ansible n=ansible | skipping: [control.example.com]
2021-06-18 13:26:23,381 p=1015187 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-18 13:26:23,390 p=1015187 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-18 13:26:23,411 p=1015187 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-18 13:26:23,753 p=1015187 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-18 13:26:23,760 p=1015187 u=ansible n=ansible | TASK [check if /dev/sdb exists] *********************************************************************************
2021-06-18 13:26:24,447 p=1015187 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-18 13:26:24,449 p=1015187 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-18 13:26:24,470 p=1015187 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-18 13:26:24,471 p=1015187 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-18 13:26:24,651 p=1015187 u=ansible n=ansible | ok: [control.example.com]
2021-06-18 13:26:24,657 p=1015187 u=ansible n=ansible | TASK [setup a volume group on all hosts on which the disk /dev/sdb is defined] **********************************
2021-06-18 13:26:24,711 p=1015187 u=ansible n=ansible | skipping: [control.example.com]
2021-06-18 13:26:24,721 p=1015187 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-18 13:26:24,762 p=1015187 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-18 13:26:25,247 p=1015187 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-18 13:26:25,264 p=1015187 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-18 13:26:25,266 p=1015187 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-18 13:26:25,266 p=1015187 u=ansible n=ansible | ansible1.example.com       : ok=4    changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-18 13:26:25,266 p=1015187 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-18 13:26:25,266 p=1015187 u=ansible n=ansible | ansible3.example.com       : ok=4    changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-18 13:26:25,266 p=1015187 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-18 13:26:25,266 p=1015187 u=ansible n=ansible | control.example.com        : ok=2    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-21 09:24:46,129 p=1054819 u=ansible n=ansible | PLAY [managing storage exam preparation] ************************************************************************
2021-06-21 09:24:46,141 p=1054819 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 09:24:48,387 p=1054819 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 09:24:48,406 p=1054819 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 09:24:48,705 p=1054819 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 09:24:48,755 p=1054819 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 09:24:48,856 p=1054819 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 09:24:48,868 p=1054819 u=ansible n=ansible | TASK [create 1GiB partition on /dev/sdb1 on ansible1] ***********************************************************
2021-06-21 09:24:48,951 p=1054819 u=ansible n=ansible | skipping: [control.example.com]
2021-06-21 09:24:48,982 p=1054819 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 09:24:48,985 p=1054819 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-21 09:24:48,997 p=1054819 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-21 09:24:49,834 p=1054819 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-21 09:24:49,847 p=1054819 u=ansible n=ansible | TASK [create 3GiB partition on /dev/sdb1 on ansible3] ***********************************************************
2021-06-21 09:24:49,948 p=1054819 u=ansible n=ansible | skipping: [control.example.com]
2021-06-21 09:24:49,948 p=1054819 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-21 09:24:49,960 p=1054819 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-21 09:24:49,967 p=1054819 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-21 09:24:50,851 p=1054819 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-21 09:24:50,866 p=1054819 u=ansible n=ansible | TASK [check if /dev/sdb exists] *********************************************************************************
2021-06-21 09:24:51,673 p=1054819 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 09:24:51,710 p=1054819 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 09:24:51,737 p=1054819 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 09:24:51,740 p=1054819 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 09:24:51,920 p=1054819 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 09:24:51,929 p=1054819 u=ansible n=ansible | TASK [setup a volume group on all hosts on which the disk /dev/sdb is defined] **********************************
2021-06-21 09:24:52,031 p=1054819 u=ansible n=ansible | skipping: [control.example.com]
2021-06-21 09:24:52,050 p=1054819 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-21 09:24:52,056 p=1054819 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-21 09:24:52,898 p=1054819 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "err": "  Device /dev/sdb excluded by a filter.\n", "msg": "Creating physical volume '/dev/sdb' failed", "rc": 5}
2021-06-21 09:24:52,917 p=1054819 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "err": "  Device /dev/sdb excluded by a filter.\n", "msg": "Creating physical volume '/dev/sdb' failed", "rc": 5}
2021-06-21 09:24:52,919 p=1054819 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 09:24:52,919 p=1054819 u=ansible n=ansible | ansible1.example.com       : ok=3    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-21 09:24:52,920 p=1054819 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-21 09:24:52,920 p=1054819 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-21 09:24:52,920 p=1054819 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-21 09:24:52,920 p=1054819 u=ansible n=ansible | control.example.com        : ok=2    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-21 09:34:00,600 p=1059155 u=ansible n=ansible | PLAY [managing storage exam preparation] ************************************************************************
2021-06-21 09:34:00,609 p=1059155 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 09:34:02,670 p=1059155 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 09:34:02,674 p=1059155 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 09:34:02,678 p=1059155 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 09:34:03,135 p=1059155 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 09:34:03,235 p=1059155 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 09:34:03,242 p=1059155 u=ansible n=ansible | TASK [create 1GiB partition on /dev/sdb1 on ansible1] ***********************************************************
2021-06-21 09:34:03,330 p=1059155 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-21 09:34:03,331 p=1059155 u=ansible n=ansible | skipping: [control.example.com]
2021-06-21 09:34:03,335 p=1059155 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 09:34:03,346 p=1059155 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-21 09:34:03,841 p=1059155 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 09:34:03,851 p=1059155 u=ansible n=ansible | TASK [create 3GiB partition on /dev/sdb1 on ansible3] ***********************************************************
2021-06-21 09:34:03,934 p=1059155 u=ansible n=ansible | skipping: [control.example.com]
2021-06-21 09:34:03,935 p=1059155 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-21 09:34:03,942 p=1059155 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-21 09:34:03,972 p=1059155 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-21 09:34:04,360 p=1059155 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 09:34:04,370 p=1059155 u=ansible n=ansible | TASK [check if /dev/sdb exists] *********************************************************************************
2021-06-21 09:34:05,062 p=1059155 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 09:34:05,067 p=1059155 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 09:34:05,088 p=1059155 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 09:34:05,218 p=1059155 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 09:34:05,237 p=1059155 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 09:34:05,245 p=1059155 u=ansible n=ansible | TASK [setup a volume group on all hosts on which the disk /dev/sdb is defined] **********************************
2021-06-21 09:34:05,318 p=1059155 u=ansible n=ansible | skipping: [control.example.com]
2021-06-21 09:34:05,322 p=1059155 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-21 09:34:05,356 p=1059155 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-21 09:34:05,926 p=1059155 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-21 09:34:05,931 p=1059155 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-21 09:34:05,933 p=1059155 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 09:34:05,933 p=1059155 u=ansible n=ansible | ansible1.example.com       : ok=4    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-21 09:34:05,933 p=1059155 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-21 09:34:05,933 p=1059155 u=ansible n=ansible | ansible3.example.com       : ok=4    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-21 09:34:05,933 p=1059155 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-21 09:34:05,933 p=1059155 u=ansible n=ansible | control.example.com        : ok=2    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-21 09:34:35,592 p=1059868 u=ansible n=ansible | PLAY [managing storage exam preparation] ************************************************************************
2021-06-21 09:34:35,601 p=1059868 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 09:34:37,067 p=1059868 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 09:34:37,117 p=1059868 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 09:34:37,132 p=1059868 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 09:34:37,156 p=1059868 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 09:34:37,505 p=1059868 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 09:34:37,512 p=1059868 u=ansible n=ansible | TASK [create 1GiB partition on /dev/sdb1 on ansible1] ***********************************************************
2021-06-21 09:34:37,587 p=1059868 u=ansible n=ansible | skipping: [control.example.com]
2021-06-21 09:34:37,588 p=1059868 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 09:34:37,590 p=1059868 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-21 09:34:37,616 p=1059868 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-21 09:34:38,041 p=1059868 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 09:34:38,047 p=1059868 u=ansible n=ansible | TASK [create 3GiB partition on /dev/sdb1 on ansible3] ***********************************************************
2021-06-21 09:34:38,113 p=1059868 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-21 09:34:38,113 p=1059868 u=ansible n=ansible | skipping: [control.example.com]
2021-06-21 09:34:38,125 p=1059868 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-21 09:34:38,126 p=1059868 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-21 09:34:38,532 p=1059868 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 09:34:38,541 p=1059868 u=ansible n=ansible | TASK [check if /dev/sdb exists] *********************************************************************************
2021-06-21 09:34:39,203 p=1059868 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 09:34:39,228 p=1059868 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 09:34:39,245 p=1059868 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 09:34:39,248 p=1059868 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 09:34:39,386 p=1059868 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 09:34:39,393 p=1059868 u=ansible n=ansible | TASK [setup a volume group on all hosts on which the disk /dev/sdb is defined] **********************************
2021-06-21 09:34:39,456 p=1059868 u=ansible n=ansible | skipping: [control.example.com]
2021-06-21 09:34:39,474 p=1059868 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-21 09:34:39,492 p=1059868 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-21 09:34:39,920 p=1059868 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-21 09:34:39,931 p=1059868 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-21 09:34:39,932 p=1059868 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 09:34:39,932 p=1059868 u=ansible n=ansible | ansible1.example.com       : ok=4    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-21 09:34:39,933 p=1059868 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-21 09:34:39,933 p=1059868 u=ansible n=ansible | ansible3.example.com       : ok=4    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-21 09:34:39,933 p=1059868 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-21 09:34:39,933 p=1059868 u=ansible n=ansible | control.example.com        : ok=2    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-21 09:34:42,687 p=1060367 u=ansible n=ansible | PLAY [managing storage exam preparation] ************************************************************************
2021-06-21 09:34:42,696 p=1060367 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 09:34:44,191 p=1060367 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 09:34:44,203 p=1060367 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 09:34:44,239 p=1060367 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 09:34:44,246 p=1060367 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 09:34:44,604 p=1060367 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 09:34:44,611 p=1060367 u=ansible n=ansible | TASK [create 1GiB partition on /dev/sdb1 on ansible1] ***********************************************************
2021-06-21 09:34:44,684 p=1060367 u=ansible n=ansible | skipping: [control.example.com]
2021-06-21 09:34:44,689 p=1060367 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 09:34:44,690 p=1060367 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-21 09:34:44,717 p=1060367 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-21 09:34:45,125 p=1060367 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 09:34:45,132 p=1060367 u=ansible n=ansible | TASK [create 3GiB partition on /dev/sdb1 on ansible3] ***********************************************************
2021-06-21 09:34:45,186 p=1060367 u=ansible n=ansible | skipping: [control.example.com]
2021-06-21 09:34:45,198 p=1060367 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-21 09:34:45,221 p=1060367 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-21 09:34:45,224 p=1060367 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-21 09:34:45,629 p=1060367 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 09:34:45,638 p=1060367 u=ansible n=ansible | TASK [check if /dev/sdb exists] *********************************************************************************
2021-06-21 09:34:46,346 p=1060367 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 09:34:46,353 p=1060367 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 09:34:46,386 p=1060367 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 09:34:46,422 p=1060367 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 09:34:46,551 p=1060367 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 09:34:46,558 p=1060367 u=ansible n=ansible | TASK [setup a volume group on all hosts on which the disk /dev/sdb is defined] **********************************
2021-06-21 09:34:46,631 p=1060367 u=ansible n=ansible | skipping: [control.example.com]
2021-06-21 09:34:46,652 p=1060367 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-21 09:34:46,660 p=1060367 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-21 09:34:47,423 p=1060367 u=ansible n=ansible | changed: [ansible1.example.com]
2021-06-21 09:34:47,463 p=1060367 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-21 09:34:47,466 p=1060367 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 09:34:47,466 p=1060367 u=ansible n=ansible | ansible1.example.com       : ok=4    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-21 09:34:47,466 p=1060367 u=ansible n=ansible | ansible2.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-21 09:34:47,466 p=1060367 u=ansible n=ansible | ansible3.example.com       : ok=4    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-21 09:34:47,466 p=1060367 u=ansible n=ansible | ansible4.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-21 09:34:47,466 p=1060367 u=ansible n=ansible | control.example.com        : ok=2    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-21 09:35:00,279 p=1060943 u=ansible n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: ansible1

2021-06-21 09:35:00,280 p=1060943 u=ansible n=ansible | [WARNING]: No hosts matched, nothing to do

2021-06-21 09:35:07,473 p=1060992 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.201"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::b521:5a71:965c:a783"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel/swap",
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_date_time": {
            "date": "2021-06-21",
            "day": "21",
            "epoch": "1624282507",
            "hour": "09",
            "iso8601": "2021-06-21T13:35:07Z",
            "iso8601_basic": "20210621T093507050605",
            "iso8601_basic_short": "20210621T093507",
            "iso8601_micro": "2021-06-21T13:35:07.050605Z",
            "minute": "35",
            "month": "06",
            "second": "07",
            "time": "09:35:07",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Monday",
            "weekday_number": "1",
            "weeknumber": "25",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.201",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:f8:f6:8d",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel-root",
                    "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpsvBGwKeGZC3oVBvJojlIMD4ebJIUCgaz"
                ],
                "dm-1": [
                    "dm-name-rhel-swap",
                    "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpozc6wq2QoQB31bJmdCZwZm8sBNGT9rNl"
                ],
                "sda3": [
                    "lvm-pv-uuid-wn8uAC-AvMD-KDDW-CZE6-HOg3-Z6CL-wQ4vPF"
                ],
                "sdb1": [
                    "lvm-pv-uuid-eCduqz-PlQs-uKMN-EVJI-gnyI-aKiC-7WmXm6"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "d3ea57c1-02ac-46f1-96d7-9c3d38b77db7"
                ],
                "dm-1": [
                    "488a8798-7ff3-4920-a592-27d9f346d6fc"
                ],
                "sda1": [
                    "6785-C5E7"
                ],
                "sda2": [
                    "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-root",
                        "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpsvBGwKeGZC3oVBvJojlIMD4ebJIUCgaz"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "d3ea57c1-02ac-46f1-96d7-9c3d38b77db7"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-swap",
                        "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpozc6wq2QoQB31bJmdCZwZm8sBNGT9rNl"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "488a8798-7ff3-4920-a592-27d9f346d6fc"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "6785-C5E7"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "6785-C5E7"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
                    },
                    "sda3": {
                        "holders": [
                            "rhel-swap",
                            "rhel-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-wn8uAC-AvMD-KDDW-CZE6-HOg3-Z6CL-wQ4vPF"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sdb": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sdb1": {
                        "holders": [],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-eCduqz-PlQs-uKMN-EVJI-gnyI-aKiC-7WmXm6"
                            ],
                            "labels": [],
                            "masters": [],
                            "uuids": []
                        },
                        "sectors": "2095104",
                        "sectorsize": 512,
                        "size": "1023.00 MB",
                        "start": "2048",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "10485760",
                "sectorsize": "512",
                "size": "5.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.201",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::b521:5a71:965c:a783",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:f8:f6:8d",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HOME": "/root",
            "LANG": "en_US.UTF-8",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/mail/root",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-ngeokrirsznqsehjkmtdazyfnpmrablo ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1624282506.4049857-1060998-179256116575599/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "ansible1.example.com",
        "ansible_hostname": "ansible1",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "lo",
            "ens192"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:53cc3821382",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel"
                },
                "/dev/sdb1": {
                    "free_g": "0.97",
                    "size_g": "0.97",
                    "vg": "vgdata"
                }
            },
            "vgs": {
                "rhel": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                },
                "vgdata": {
                    "free_g": "0.97",
                    "num_lvs": "0",
                    "num_pvs": "1",
                    "size_g": "0.97"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "732ca008a570426bb2c7b7a58cdd158f",
        "ansible_memfree_mb": 185,
        "ansible_memory_mb": {
            "nocache": {
                "free": 505,
                "used": 313
            },
            "real": {
                "free": 185,
                "total": 818,
                "used": 633
            },
            "swap": {
                "cached": 0,
                "free": 2047,
                "total": 2047,
                "used": 0
            }
        },
        "ansible_memtotal_mb": 818,
        "ansible_mounts": [
            {
                "block_available": 3802801,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 496463,
                "device": "/dev/mapper/rhel-root",
                "fstype": "xfs",
                "inode_available": 8555139,
                "inode_total": 8603648,
                "inode_used": 48509,
                "mount": "/",
                "options": "rw,seclabel,relatime,attr2,inode64,noquota",
                "size_available": 15576272896,
                "size_total": 17609785344,
                "uuid": "d3ea57c1-02ac-46f1-96d7-9c3d38b77db7"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,seclabel,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "6785-C5E7"
            }
        ],
        "ansible_nodename": "ansible1.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel/root",
                "rhel/swap"
            ],
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 1,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 1,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d 91 64 1a 27 2d 83-11 fd ea d8 b2 f8 f6 8d",
        "ansible_product_uuid": "64914d56-271a-832d-11fd-ead8b2f8f68d",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "config_mode": "enforcing",
            "mode": "enforcing",
            "policyvers": 31,
            "status": "enabled",
            "type": "targeted"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBDAy45Ndd8lJP90E4ZhiOMyN33O1HH77T1xf3RwLCIVgCs3GFvL8vg/n0pVxdNcWmC6q9UOawL+i5izBcXZ3wHg=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAICkGwciWcbrNizntC965NPvp9rBcLwO6DbhR5trS+BmI",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQC8fcASOlyYRoK439WmRTcrzMaz5VdhX3lN9n2RZWwK6ZIxo8zC4nDhZEusSd9quVfOneUE61Q420+uYTejU9KZXjAesuims+Cnm9XEFj3BdY/JElEjkyiJBUNYY/DEV7nOAk7aMOmEa6CwJ7nMS/qPVcAAIVxcI7U+wmzJchKcOF9XmDqSqjYu00W+OLGKit8yfv1qlyP5HOQEDgbgYM81Kf5+TZHmQcuVe5rB4QdJ7vyNUnoRQUYWBLagnqNnAmPeVPR8tTJZtYONmkuBe/FWXJwxof98Pwcr/eMMVQy1tmdz+hpfsRNTV8r+KLfmoQqoNddXiqRNVdi4iB5P56FuKBmj1APflWbZEscDxANU5k4ctpGGSwkwfGtK1Od2qu7UWHf1AdXfbEFKoX5qeM3fTimvMCL7tA5EN5eQYNMX59eXIeU5WThxOeVqy9WzY7foY7xzPZEpZFkB+FiZ4yPpzG3PXijbXzMap/FmaDfL7xNH7frO3UMiVzYrpkl8sds=",
        "ansible_swapfree_mb": 2047,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 515190,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "discovered_interpreter_python": "/usr/libexec/platform-python",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-21 09:35:16,371 p=1061074 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.201"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::b521:5a71:965c:a783"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel/swap",
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_date_time": {
            "date": "2021-06-21",
            "day": "21",
            "epoch": "1624282516",
            "hour": "09",
            "iso8601": "2021-06-21T13:35:16Z",
            "iso8601_basic": "20210621T093516002218",
            "iso8601_basic_short": "20210621T093516",
            "iso8601_micro": "2021-06-21T13:35:16.002218Z",
            "minute": "35",
            "month": "06",
            "second": "16",
            "time": "09:35:16",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Monday",
            "weekday_number": "1",
            "weeknumber": "25",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.201",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:f8:f6:8d",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel-root",
                    "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpsvBGwKeGZC3oVBvJojlIMD4ebJIUCgaz"
                ],
                "dm-1": [
                    "dm-name-rhel-swap",
                    "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpozc6wq2QoQB31bJmdCZwZm8sBNGT9rNl"
                ],
                "sda3": [
                    "lvm-pv-uuid-wn8uAC-AvMD-KDDW-CZE6-HOg3-Z6CL-wQ4vPF"
                ],
                "sdb1": [
                    "lvm-pv-uuid-eCduqz-PlQs-uKMN-EVJI-gnyI-aKiC-7WmXm6"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "d3ea57c1-02ac-46f1-96d7-9c3d38b77db7"
                ],
                "dm-1": [
                    "488a8798-7ff3-4920-a592-27d9f346d6fc"
                ],
                "sda1": [
                    "6785-C5E7"
                ],
                "sda2": [
                    "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-root",
                        "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpsvBGwKeGZC3oVBvJojlIMD4ebJIUCgaz"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "d3ea57c1-02ac-46f1-96d7-9c3d38b77db7"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-swap",
                        "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpozc6wq2QoQB31bJmdCZwZm8sBNGT9rNl"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "488a8798-7ff3-4920-a592-27d9f346d6fc"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "6785-C5E7"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "6785-C5E7"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
                    },
                    "sda3": {
                        "holders": [
                            "rhel-swap",
                            "rhel-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-wn8uAC-AvMD-KDDW-CZE6-HOg3-Z6CL-wQ4vPF"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sdb": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sdb1": {
                        "holders": [],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-eCduqz-PlQs-uKMN-EVJI-gnyI-aKiC-7WmXm6"
                            ],
                            "labels": [],
                            "masters": [],
                            "uuids": []
                        },
                        "sectors": "2095104",
                        "sectorsize": 512,
                        "size": "1023.00 MB",
                        "start": "2048",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "10485760",
                "sectorsize": "512",
                "size": "5.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.201",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::b521:5a71:965c:a783",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:f8:f6:8d",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HOME": "/root",
            "LANG": "en_US.UTF-8",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/mail/root",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-cykaoucycefouloiowimscsxqbybjsur ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1624282515.3481371-1061081-46668064784523/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "ansible1.example.com",
        "ansible_hostname": "ansible1",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "ens192",
            "lo"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:53cc3821382",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel"
                },
                "/dev/sdb1": {
                    "free_g": "0.97",
                    "size_g": "0.97",
                    "vg": "vgdata"
                }
            },
            "vgs": {
                "rhel": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                },
                "vgdata": {
                    "free_g": "0.97",
                    "num_lvs": "0",
                    "num_pvs": "1",
                    "size_g": "0.97"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "732ca008a570426bb2c7b7a58cdd158f",
        "ansible_memfree_mb": 185,
        "ansible_memory_mb": {
            "nocache": {
                "free": 505,
                "used": 313
            },
            "real": {
                "free": 185,
                "total": 818,
                "used": 633
            },
            "swap": {
                "cached": 0,
                "free": 2047,
                "total": 2047,
                "used": 0
            }
        },
        "ansible_memtotal_mb": 818,
        "ansible_mounts": [
            {
                "block_available": 3802800,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 496464,
                "device": "/dev/mapper/rhel-root",
                "fstype": "xfs",
                "inode_available": 8555139,
                "inode_total": 8603648,
                "inode_used": 48509,
                "mount": "/",
                "options": "rw,seclabel,relatime,attr2,inode64,noquota",
                "size_available": 15576268800,
                "size_total": 17609785344,
                "uuid": "d3ea57c1-02ac-46f1-96d7-9c3d38b77db7"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,seclabel,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "6785-C5E7"
            }
        ],
        "ansible_nodename": "ansible1.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel/root",
                "rhel/swap"
            ],
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 1,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 1,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d 91 64 1a 27 2d 83-11 fd ea d8 b2 f8 f6 8d",
        "ansible_product_uuid": "64914d56-271a-832d-11fd-ead8b2f8f68d",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "config_mode": "enforcing",
            "mode": "enforcing",
            "policyvers": 31,
            "status": "enabled",
            "type": "targeted"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBDAy45Ndd8lJP90E4ZhiOMyN33O1HH77T1xf3RwLCIVgCs3GFvL8vg/n0pVxdNcWmC6q9UOawL+i5izBcXZ3wHg=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAICkGwciWcbrNizntC965NPvp9rBcLwO6DbhR5trS+BmI",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQC8fcASOlyYRoK439WmRTcrzMaz5VdhX3lN9n2RZWwK6ZIxo8zC4nDhZEusSd9quVfOneUE61Q420+uYTejU9KZXjAesuims+Cnm9XEFj3BdY/JElEjkyiJBUNYY/DEV7nOAk7aMOmEa6CwJ7nMS/qPVcAAIVxcI7U+wmzJchKcOF9XmDqSqjYu00W+OLGKit8yfv1qlyP5HOQEDgbgYM81Kf5+TZHmQcuVe5rB4QdJ7vyNUnoRQUYWBLagnqNnAmPeVPR8tTJZtYONmkuBe/FWXJwxof98Pwcr/eMMVQy1tmdz+hpfsRNTV8r+KLfmoQqoNddXiqRNVdi4iB5P56FuKBmj1APflWbZEscDxANU5k4ctpGGSwkwfGtK1Od2qu7UWHf1AdXfbEFKoX5qeM3fTimvMCL7tA5EN5eQYNMX59eXIeU5WThxOeVqy9WzY7foY7xzPZEpZFkB+FiZ4yPpzG3PXijbXzMap/FmaDfL7xNH7frO3UMiVzYrpkl8sds=",
        "ansible_swapfree_mb": 2047,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 515199,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "discovered_interpreter_python": "/usr/libexec/platform-python",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-21 11:37:12,175 p=1112029 u=ansible n=ansible | ERROR! A malformed block was encountered while loading tasks: {'debug': {'msg': 'beep boop'}, 'when': "'ansible1' in ansible_inventory"} should be a list or None but is <class 'ansible.parsing.yaml.objects.AnsibleMapping'>

The error appears to be in '/home/ansible/task11-2.yml': line 2, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

---
- name: playbook that configures an LVM volume with the name lvdata in the vgdata volume group
  ^ here

2021-06-21 11:37:35,205 p=1112202 u=ansible n=ansible | ERROR! A malformed block was encountered while loading tasks: {'debug': {'msg': 'beep boop'}, 'when': "'ansible1' in inventory_hostname"} should be a list or None but is <class 'ansible.parsing.yaml.objects.AnsibleMapping'>

The error appears to be in '/home/ansible/task11-2.yml': line 2, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

---
- name: playbook that configures an LVM volume with the name lvdata in the vgdata volume group
  ^ here

2021-06-21 11:38:12,287 p=1112468 u=ansible n=ansible | PLAY [playbook that configures an LVM volume with the name lvdata in the vgdata volume group] *******************
2021-06-21 11:38:12,295 p=1112468 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 11:38:14,265 p=1112468 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 11:38:14,267 p=1112468 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 11:38:14,277 p=1112468 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 11:38:14,280 p=1112468 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 11:38:15,592 p=1112468 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 11:38:15,600 p=1112468 u=ansible n=ansible | TASK [check when] ***********************************************************************************************
2021-06-21 11:38:15,670 p=1112468 u=ansible n=ansible | skipping: [control.example.com]
2021-06-21 11:38:15,673 p=1112468 u=ansible n=ansible | ok: [ansible1.example.com] => {
    "msg": "beep boop"
}
2021-06-21 11:38:15,676 p=1112468 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-21 11:38:15,678 p=1112468 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 11:38:15,691 p=1112468 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-21 11:38:15,693 p=1112468 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 11:38:15,693 p=1112468 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-21 11:38:15,693 p=1112468 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-21 11:38:15,693 p=1112468 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-21 11:38:15,693 p=1112468 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-21 11:38:15,694 p=1112468 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-21 11:56:59,401 p=1120695 u=ansible n=ansible | PLAY [playbook that configures an LVM volume with the name lvdata in the vgdata volume group] *******************
2021-06-21 11:56:59,413 p=1120695 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 11:57:01,485 p=1120695 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 11:57:01,496 p=1120695 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 11:57:01,501 p=1120695 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 11:57:01,526 p=1120695 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 11:57:01,822 p=1120695 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 11:57:01,830 p=1120695 u=ansible n=ansible | TASK [check for vgdata] *****************************************************************************************
2021-06-21 11:57:01,888 p=1120695 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 11:57:01,916 p=1120695 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 11:57:01,916 p=1120695 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 11:57:01,918 p=1120695 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 11:57:01,927 p=1120695 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 11:57:01,928 p=1120695 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 11:57:01,928 p=1120695 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 11:57:01,928 p=1120695 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 11:57:01,928 p=1120695 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 11:57:01,928 p=1120695 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 11:57:01,928 p=1120695 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 11:58:25,620 p=1121564 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.201"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::b521:5a71:965c:a783"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel/swap",
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_date_time": {
            "date": "2021-06-21",
            "day": "21",
            "epoch": "1624291105",
            "hour": "11",
            "iso8601": "2021-06-21T15:58:25Z",
            "iso8601_basic": "20210621T115825296050",
            "iso8601_basic_short": "20210621T115825",
            "iso8601_micro": "2021-06-21T15:58:25.296050Z",
            "minute": "58",
            "month": "06",
            "second": "25",
            "time": "11:58:25",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Monday",
            "weekday_number": "1",
            "weeknumber": "25",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.201",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:f8:f6:8d",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel-root",
                    "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpsvBGwKeGZC3oVBvJojlIMD4ebJIUCgaz"
                ],
                "dm-1": [
                    "dm-name-rhel-swap",
                    "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpozc6wq2QoQB31bJmdCZwZm8sBNGT9rNl"
                ],
                "sda3": [
                    "lvm-pv-uuid-wn8uAC-AvMD-KDDW-CZE6-HOg3-Z6CL-wQ4vPF"
                ],
                "sdb1": [
                    "lvm-pv-uuid-eCduqz-PlQs-uKMN-EVJI-gnyI-aKiC-7WmXm6"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "d3ea57c1-02ac-46f1-96d7-9c3d38b77db7"
                ],
                "dm-1": [
                    "488a8798-7ff3-4920-a592-27d9f346d6fc"
                ],
                "sda1": [
                    "6785-C5E7"
                ],
                "sda2": [
                    "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-root",
                        "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpsvBGwKeGZC3oVBvJojlIMD4ebJIUCgaz"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "d3ea57c1-02ac-46f1-96d7-9c3d38b77db7"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-swap",
                        "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpozc6wq2QoQB31bJmdCZwZm8sBNGT9rNl"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "488a8798-7ff3-4920-a592-27d9f346d6fc"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "6785-C5E7"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "6785-C5E7"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
                    },
                    "sda3": {
                        "holders": [
                            "rhel-swap",
                            "rhel-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-wn8uAC-AvMD-KDDW-CZE6-HOg3-Z6CL-wQ4vPF"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sdb": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sdb1": {
                        "holders": [],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-eCduqz-PlQs-uKMN-EVJI-gnyI-aKiC-7WmXm6"
                            ],
                            "labels": [],
                            "masters": [],
                            "uuids": []
                        },
                        "sectors": "2095104",
                        "sectorsize": 512,
                        "size": "1023.00 MB",
                        "start": "2048",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "10485760",
                "sectorsize": "512",
                "size": "5.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.201",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::b521:5a71:965c:a783",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:f8:f6:8d",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HOME": "/root",
            "LANG": "en_US.UTF-8",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/mail/root",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-cyojnuxfwcwjeaqnieghkmkrbozhtibm ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1624291104.6837177-1121570-59838453805304/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "ansible1.example.com",
        "ansible_hostname": "ansible1",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "lo",
            "ens192"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:53cc3821382",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel"
                },
                "/dev/sdb1": {
                    "free_g": "0.97",
                    "size_g": "0.97",
                    "vg": "vgdata"
                }
            },
            "vgs": {
                "rhel": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                },
                "vgdata": {
                    "free_g": "0.97",
                    "num_lvs": "0",
                    "num_pvs": "1",
                    "size_g": "0.97"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "732ca008a570426bb2c7b7a58cdd158f",
        "ansible_memfree_mb": 184,
        "ansible_memory_mb": {
            "nocache": {
                "free": 504,
                "used": 314
            },
            "real": {
                "free": 184,
                "total": 818,
                "used": 634
            },
            "swap": {
                "cached": 0,
                "free": 2047,
                "total": 2047,
                "used": 0
            }
        },
        "ansible_memtotal_mb": 818,
        "ansible_mounts": [
            {
                "block_available": 3802826,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 496438,
                "device": "/dev/mapper/rhel-root",
                "fstype": "xfs",
                "inode_available": 8555139,
                "inode_total": 8603648,
                "inode_used": 48509,
                "mount": "/",
                "options": "rw,seclabel,relatime,attr2,inode64,noquota",
                "size_available": 15576375296,
                "size_total": 17609785344,
                "uuid": "d3ea57c1-02ac-46f1-96d7-9c3d38b77db7"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,seclabel,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "6785-C5E7"
            }
        ],
        "ansible_nodename": "ansible1.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel/root",
                "rhel/swap"
            ],
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 1,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 1,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d 91 64 1a 27 2d 83-11 fd ea d8 b2 f8 f6 8d",
        "ansible_product_uuid": "64914d56-271a-832d-11fd-ead8b2f8f68d",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "config_mode": "enforcing",
            "mode": "enforcing",
            "policyvers": 31,
            "status": "enabled",
            "type": "targeted"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBDAy45Ndd8lJP90E4ZhiOMyN33O1HH77T1xf3RwLCIVgCs3GFvL8vg/n0pVxdNcWmC6q9UOawL+i5izBcXZ3wHg=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAICkGwciWcbrNizntC965NPvp9rBcLwO6DbhR5trS+BmI",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQC8fcASOlyYRoK439WmRTcrzMaz5VdhX3lN9n2RZWwK6ZIxo8zC4nDhZEusSd9quVfOneUE61Q420+uYTejU9KZXjAesuims+Cnm9XEFj3BdY/JElEjkyiJBUNYY/DEV7nOAk7aMOmEa6CwJ7nMS/qPVcAAIVxcI7U+wmzJchKcOF9XmDqSqjYu00W+OLGKit8yfv1qlyP5HOQEDgbgYM81Kf5+TZHmQcuVe5rB4QdJ7vyNUnoRQUYWBLagnqNnAmPeVPR8tTJZtYONmkuBe/FWXJwxof98Pwcr/eMMVQy1tmdz+hpfsRNTV8r+KLfmoQqoNddXiqRNVdi4iB5P56FuKBmj1APflWbZEscDxANU5k4ctpGGSwkwfGtK1Od2qu7UWHf1AdXfbEFKoX5qeM3fTimvMCL7tA5EN5eQYNMX59eXIeU5WThxOeVqy9WzY7foY7xzPZEpZFkB+FiZ4yPpzG3PXijbXzMap/FmaDfL7xNH7frO3UMiVzYrpkl8sds=",
        "ansible_swapfree_mb": 2047,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 523788,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "discovered_interpreter_python": "/usr/libexec/platform-python",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-21 11:58:30,896 p=1121621 u=ansible n=ansible | [WARNING]: Failure using method (v2_runner_on_ok) in callback plugin
(<ansible.plugins.callback.minimal.CallbackModule object at 0x7f6bc66139e8>): [Errno 32] Broken pipe

2021-06-21 11:58:35,343 p=1121669 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.201"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::b521:5a71:965c:a783"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel/swap",
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_date_time": {
            "date": "2021-06-21",
            "day": "21",
            "epoch": "1624291115",
            "hour": "11",
            "iso8601": "2021-06-21T15:58:35Z",
            "iso8601_basic": "20210621T115835272842",
            "iso8601_basic_short": "20210621T115835",
            "iso8601_micro": "2021-06-21T15:58:35.272842Z",
            "minute": "58",
            "month": "06",
            "second": "35",
            "time": "11:58:35",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Monday",
            "weekday_number": "1",
            "weeknumber": "25",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.201",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:f8:f6:8d",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel-root",
                    "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpsvBGwKeGZC3oVBvJojlIMD4ebJIUCgaz"
                ],
                "dm-1": [
                    "dm-name-rhel-swap",
                    "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpozc6wq2QoQB31bJmdCZwZm8sBNGT9rNl"
                ],
                "sda3": [
                    "lvm-pv-uuid-wn8uAC-AvMD-KDDW-CZE6-HOg3-Z6CL-wQ4vPF"
                ],
                "sdb1": [
                    "lvm-pv-uuid-eCduqz-PlQs-uKMN-EVJI-gnyI-aKiC-7WmXm6"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "d3ea57c1-02ac-46f1-96d7-9c3d38b77db7"
                ],
                "dm-1": [
                    "488a8798-7ff3-4920-a592-27d9f346d6fc"
                ],
                "sda1": [
                    "6785-C5E7"
                ],
                "sda2": [
                    "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-root",
                        "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpsvBGwKeGZC3oVBvJojlIMD4ebJIUCgaz"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "d3ea57c1-02ac-46f1-96d7-9c3d38b77db7"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-swap",
                        "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpozc6wq2QoQB31bJmdCZwZm8sBNGT9rNl"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "488a8798-7ff3-4920-a592-27d9f346d6fc"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "6785-C5E7"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "6785-C5E7"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
                    },
                    "sda3": {
                        "holders": [
                            "rhel-swap",
                            "rhel-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-wn8uAC-AvMD-KDDW-CZE6-HOg3-Z6CL-wQ4vPF"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sdb": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sdb1": {
                        "holders": [],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-eCduqz-PlQs-uKMN-EVJI-gnyI-aKiC-7WmXm6"
                            ],
                            "labels": [],
                            "masters": [],
                            "uuids": []
                        },
                        "sectors": "2095104",
                        "sectorsize": 512,
                        "size": "1023.00 MB",
                        "start": "2048",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "10485760",
                "sectorsize": "512",
                "size": "5.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.201",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::b521:5a71:965c:a783",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:f8:f6:8d",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HOME": "/root",
            "LANG": "en_US.UTF-8",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/mail/root",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-xpsjklypnnhrtosxaasmbrgrhzninfvd ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1624291114.4003403-1121683-272235589721006/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "ansible1.example.com",
        "ansible_hostname": "ansible1",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "lo",
            "ens192"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:53cc3821382",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel"
                },
                "/dev/sdb1": {
                    "free_g": "0.97",
                    "size_g": "0.97",
                    "vg": "vgdata"
                }
            },
            "vgs": {
                "rhel": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                },
                "vgdata": {
                    "free_g": "0.97",
                    "num_lvs": "0",
                    "num_pvs": "1",
                    "size_g": "0.97"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "732ca008a570426bb2c7b7a58cdd158f",
        "ansible_memfree_mb": 185,
        "ansible_memory_mb": {
            "nocache": {
                "free": 505,
                "used": 313
            },
            "real": {
                "free": 185,
                "total": 818,
                "used": 633
            },
            "swap": {
                "cached": 0,
                "free": 2047,
                "total": 2047,
                "used": 0
            }
        },
        "ansible_memtotal_mb": 818,
        "ansible_mounts": [
            {
                "block_available": 3802831,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 496433,
                "device": "/dev/mapper/rhel-root",
                "fstype": "xfs",
                "inode_available": 8555139,
                "inode_total": 8603648,
                "inode_used": 48509,
                "mount": "/",
                "options": "rw,seclabel,relatime,attr2,inode64,noquota",
                "size_available": 15576395776,
                "size_total": 17609785344,
                "uuid": "d3ea57c1-02ac-46f1-96d7-9c3d38b77db7"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,seclabel,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "6785-C5E7"
            }
        ],
        "ansible_nodename": "ansible1.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel/root",
                "rhel/swap"
            ],
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 1,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 1,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d 91 64 1a 27 2d 83-11 fd ea d8 b2 f8 f6 8d",
        "ansible_product_uuid": "64914d56-271a-832d-11fd-ead8b2f8f68d",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "config_mode": "enforcing",
            "mode": "enforcing",
            "policyvers": 31,
            "status": "enabled",
            "type": "targeted"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBDAy45Ndd8lJP90E4ZhiOMyN33O1HH77T1xf3RwLCIVgCs3GFvL8vg/n0pVxdNcWmC6q9UOawL+i5izBcXZ3wHg=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAICkGwciWcbrNizntC965NPvp9rBcLwO6DbhR5trS+BmI",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQC8fcASOlyYRoK439WmRTcrzMaz5VdhX3lN9n2RZWwK6ZIxo8zC4nDhZEusSd9quVfOneUE61Q420+uYTejU9KZXjAesuims+Cnm9XEFj3BdY/JElEjkyiJBUNYY/DEV7nOAk7aMOmEa6CwJ7nMS/qPVcAAIVxcI7U+wmzJchKcOF9XmDqSqjYu00W+OLGKit8yfv1qlyP5HOQEDgbgYM81Kf5+TZHmQcuVe5rB4QdJ7vyNUnoRQUYWBLagnqNnAmPeVPR8tTJZtYONmkuBe/FWXJwxof98Pwcr/eMMVQy1tmdz+hpfsRNTV8r+KLfmoQqoNddXiqRNVdi4iB5P56FuKBmj1APflWbZEscDxANU5k4ctpGGSwkwfGtK1Od2qu7UWHf1AdXfbEFKoX5qeM3fTimvMCL7tA5EN5eQYNMX59eXIeU5WThxOeVqy9WzY7foY7xzPZEpZFkB+FiZ4yPpzG3PXijbXzMap/FmaDfL7xNH7frO3UMiVzYrpkl8sds=",
        "ansible_swapfree_mb": 2047,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 523798,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "discovered_interpreter_python": "/usr/libexec/platform-python",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-21 11:58:44,852 p=1121759 u=ansible n=ansible | ansible1.example.com | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "192.168.11.201"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::b521:5a71:965c:a783"
        ],
        "ansible_apparmor": {
            "status": "disabled"
        },
        "ansible_architecture": "x86_64",
        "ansible_bios_date": "06/25/2020",
        "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725",
        "ansible_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": "rhel/swap",
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_date_time": {
            "date": "2021-06-21",
            "day": "21",
            "epoch": "1624291124",
            "hour": "11",
            "iso8601": "2021-06-21T15:58:44Z",
            "iso8601_basic": "20210621T115844751631",
            "iso8601_basic_short": "20210621T115844",
            "iso8601_micro": "2021-06-21T15:58:44.751631Z",
            "minute": "58",
            "month": "06",
            "second": "44",
            "time": "11:58:44",
            "tz": "EDT",
            "tz_offset": "-0400",
            "weekday": "Monday",
            "weekday_number": "1",
            "weeknumber": "25",
            "year": "2021"
        },
        "ansible_default_ipv4": {
            "address": "192.168.11.201",
            "alias": "ens192",
            "broadcast": "192.168.11.255",
            "gateway": "192.168.11.1",
            "interface": "ens192",
            "macaddress": "00:0c:29:f8:f6:8d",
            "mtu": 1500,
            "netmask": "255.255.255.0",
            "network": "192.168.11.0",
            "type": "ether"
        },
        "ansible_default_ipv6": {},
        "ansible_device_links": {
            "ids": {
                "dm-0": [
                    "dm-name-rhel-root",
                    "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpsvBGwKeGZC3oVBvJojlIMD4ebJIUCgaz"
                ],
                "dm-1": [
                    "dm-name-rhel-swap",
                    "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpozc6wq2QoQB31bJmdCZwZm8sBNGT9rNl"
                ],
                "sda3": [
                    "lvm-pv-uuid-wn8uAC-AvMD-KDDW-CZE6-HOg3-Z6CL-wQ4vPF"
                ],
                "sdb1": [
                    "lvm-pv-uuid-eCduqz-PlQs-uKMN-EVJI-gnyI-aKiC-7WmXm6"
                ],
                "sr0": [
                    "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                ]
            },
            "labels": {
                "sr0": [
                    "RHEL-8-2-0-BaseOS-x86_64"
                ]
            },
            "masters": {
                "sda3": [
                    "dm-0",
                    "dm-1"
                ]
            },
            "uuids": {
                "dm-0": [
                    "d3ea57c1-02ac-46f1-96d7-9c3d38b77db7"
                ],
                "dm-1": [
                    "488a8798-7ff3-4920-a592-27d9f346d6fc"
                ],
                "sda1": [
                    "6785-C5E7"
                ],
                "sda2": [
                    "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
                ],
                "sr0": [
                    "2020-04-04-08-21-15-00"
                ]
            }
        },
        "ansible_devices": {
            "dm-0": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-root",
                        "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpsvBGwKeGZC3oVBvJojlIMD4ebJIUCgaz"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "d3ea57c1-02ac-46f1-96d7-9c3d38b77db7"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "34414592",
                "sectorsize": "512",
                "size": "16.41 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "dm-1": {
                "holders": [],
                "host": "",
                "links": {
                    "ids": [
                        "dm-name-rhel-swap",
                        "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpozc6wq2QoQB31bJmdCZwZm8sBNGT9rNl"
                    ],
                    "labels": [],
                    "masters": [],
                    "uuids": [
                        "488a8798-7ff3-4920-a592-27d9f346d6fc"
                    ]
                },
                "model": null,
                "partitions": {},
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "",
                "sectors": "4194304",
                "sectorsize": "512",
                "size": "2.00 GB",
                "support_discard": "4096",
                "vendor": null,
                "virtual": 1
            },
            "sda": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sda1": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "6785-C5E7"
                            ]
                        },
                        "sectors": "1228800",
                        "sectorsize": 512,
                        "size": "600.00 MB",
                        "start": "2048",
                        "uuid": "6785-C5E7"
                    },
                    "sda2": {
                        "holders": [],
                        "links": {
                            "ids": [],
                            "labels": [],
                            "masters": [],
                            "uuids": [
                                "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
                            ]
                        },
                        "sectors": "2097152",
                        "sectorsize": 512,
                        "size": "1.00 GB",
                        "start": "1230848",
                        "uuid": "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
                    },
                    "sda3": {
                        "holders": [
                            "rhel-swap",
                            "rhel-root"
                        ],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-wn8uAC-AvMD-KDDW-CZE6-HOg3-Z6CL-wQ4vPF"
                            ],
                            "labels": [],
                            "masters": [
                                "dm-0",
                                "dm-1"
                            ],
                            "uuids": []
                        },
                        "sectors": "38612992",
                        "sectorsize": 512,
                        "size": "18.41 GB",
                        "start": "3328000",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "41943040",
                "sectorsize": "512",
                "size": "20.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sdb": {
                "holders": [],
                "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)",
                "links": {
                    "ids": [],
                    "labels": [],
                    "masters": [],
                    "uuids": []
                },
                "model": "Virtual disk",
                "partitions": {
                    "sdb1": {
                        "holders": [],
                        "links": {
                            "ids": [
                                "lvm-pv-uuid-eCduqz-PlQs-uKMN-EVJI-gnyI-aKiC-7WmXm6"
                            ],
                            "labels": [],
                            "masters": [],
                            "uuids": []
                        },
                        "sectors": "2095104",
                        "sectorsize": 512,
                        "size": "1023.00 MB",
                        "start": "2048",
                        "uuid": null
                    }
                },
                "removable": "0",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "10485760",
                "sectorsize": "512",
                "size": "5.00 GB",
                "support_discard": "4096",
                "vendor": "VMware",
                "virtual": 1
            },
            "sr0": {
                "holders": [],
                "host": "SATA controller: VMware SATA AHCI controller",
                "links": {
                    "ids": [
                        "ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"
                    ],
                    "labels": [
                        "RHEL-8-2-0-BaseOS-x86_64"
                    ],
                    "masters": [],
                    "uuids": [
                        "2020-04-04-08-21-15-00"
                    ]
                },
                "model": "VMware SATA CD00",
                "partitions": {},
                "removable": "1",
                "rotational": "1",
                "sas_address": null,
                "sas_device_handle": null,
                "scheduler_mode": "mq-deadline",
                "sectors": "16478208",
                "sectorsize": "2048",
                "size": "7.86 GB",
                "support_discard": "0",
                "vendor": "NECVMWar",
                "virtual": 1
            }
        },
        "ansible_distribution": "RedHat",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/redhat-release",
        "ansible_distribution_file_search_string": "Red Hat",
        "ansible_distribution_file_variety": "RedHat",
        "ansible_distribution_major_version": "8",
        "ansible_distribution_release": "Ootpa",
        "ansible_distribution_version": "8.2",
        "ansible_dns": {
            "nameservers": [
                "192.168.11.1",
                "8.8.8.8"
            ],
            "search": [
                "verizon.net",
                "example.com"
            ]
        },
        "ansible_domain": "example.com",
        "ansible_effective_group_id": 0,
        "ansible_effective_user_id": 0,
        "ansible_ens192": {
            "active": true,
            "device": "ens192",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "on",
                "loopback": "off [fixed]",
                "netns_local": "off [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "on [fixed]",
                "rx_vlan_offload": "on",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "off [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "off [fixed]",
                "tx_nocache_copy": "off",
                "tx_scatter_gather": "on",
                "tx_scatter_gather_fraglist": "off [fixed]",
                "tx_sctp_segmentation": "off [fixed]",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "off [fixed]",
                "tx_tcp_mangleid_segmentation": "off",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "on",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "off [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "192.168.11.201",
                "broadcast": "192.168.11.255",
                "netmask": "255.255.255.0",
                "network": "192.168.11.0"
            },
            "ipv6": [
                {
                    "address": "fe80::b521:5a71:965c:a783",
                    "prefix": "64",
                    "scope": "link"
                }
            ],
            "macaddress": "00:0c:29:f8:f6:8d",
            "module": "vmxnet3",
            "mtu": 1500,
            "pciid": "0000:0b:00.0",
            "promisc": false,
            "speed": 10000,
            "timestamping": [
                "rx_software",
                "software"
            ],
            "type": "ether"
        },
        "ansible_env": {
            "HOME": "/root",
            "LANG": "en_US.UTF-8",
            "LOGNAME": "root",
            "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:",
            "MAIL": "/var/mail/root",
            "PATH": "/sbin:/bin:/usr/sbin:/usr/bin",
            "PWD": "/home/ansible",
            "SHELL": "/bin/bash",
            "SHLVL": "1",
            "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-ovaikysaovsppovtikgkmdbnyizbrona ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1624291123.9699488-1121765-231304046475543/AnsiballZ_setup.py",
            "SUDO_GID": "1000",
            "SUDO_UID": "1000",
            "SUDO_USER": "ansible",
            "TERM": "xterm",
            "USER": "root",
            "_": "/usr/libexec/platform-python"
        },
        "ansible_fibre_channel_wwn": [],
        "ansible_fips": false,
        "ansible_form_factor": "Other",
        "ansible_fqdn": "ansible1.example.com",
        "ansible_hostname": "ansible1",
        "ansible_hostnqn": "",
        "ansible_interfaces": [
            "ens192",
            "lo"
        ],
        "ansible_is_chroot": false,
        "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:53cc3821382",
        "ansible_kernel": "4.18.0-193.el8.x86_64",
        "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020",
        "ansible_lo": {
            "active": true,
            "device": "lo",
            "features": {
                "esp_hw_offload": "off [fixed]",
                "esp_tx_csum_hw_offload": "off [fixed]",
                "fcoe_mtu": "off [fixed]",
                "generic_receive_offload": "on",
                "generic_segmentation_offload": "on",
                "highdma": "on [fixed]",
                "hw_tc_offload": "off [fixed]",
                "l2_fwd_offload": "off [fixed]",
                "large_receive_offload": "off [fixed]",
                "loopback": "on [fixed]",
                "netns_local": "on [fixed]",
                "ntuple_filters": "off [fixed]",
                "receive_hashing": "off [fixed]",
                "rx_all": "off [fixed]",
                "rx_checksumming": "on [fixed]",
                "rx_fcs": "off [fixed]",
                "rx_gro_hw": "off [fixed]",
                "rx_udp_tunnel_port_offload": "off [fixed]",
                "rx_vlan_filter": "off [fixed]",
                "rx_vlan_offload": "off [fixed]",
                "rx_vlan_stag_filter": "off [fixed]",
                "rx_vlan_stag_hw_parse": "off [fixed]",
                "scatter_gather": "on",
                "tcp_segmentation_offload": "on",
                "tls_hw_record": "off [fixed]",
                "tls_hw_rx_offload": "off [fixed]",
                "tls_hw_tx_offload": "off [fixed]",
                "tx_checksum_fcoe_crc": "off [fixed]",
                "tx_checksum_ip_generic": "on [fixed]",
                "tx_checksum_ipv4": "off [fixed]",
                "tx_checksum_ipv6": "off [fixed]",
                "tx_checksum_sctp": "on [fixed]",
                "tx_checksumming": "on",
                "tx_esp_segmentation": "off [fixed]",
                "tx_fcoe_segmentation": "off [fixed]",
                "tx_gre_csum_segmentation": "off [fixed]",
                "tx_gre_segmentation": "off [fixed]",
                "tx_gso_partial": "off [fixed]",
                "tx_gso_robust": "off [fixed]",
                "tx_ipxip4_segmentation": "off [fixed]",
                "tx_ipxip6_segmentation": "off [fixed]",
                "tx_lockless": "on [fixed]",
                "tx_nocache_copy": "off [fixed]",
                "tx_scatter_gather": "on [fixed]",
                "tx_scatter_gather_fraglist": "on [fixed]",
                "tx_sctp_segmentation": "on",
                "tx_tcp6_segmentation": "on",
                "tx_tcp_ecn_segmentation": "on",
                "tx_tcp_mangleid_segmentation": "on",
                "tx_tcp_segmentation": "on",
                "tx_udp_segmentation": "off [fixed]",
                "tx_udp_tnl_csum_segmentation": "off [fixed]",
                "tx_udp_tnl_segmentation": "off [fixed]",
                "tx_vlan_offload": "off [fixed]",
                "tx_vlan_stag_hw_insert": "off [fixed]",
                "vlan_challenged": "on [fixed]"
            },
            "hw_timestamp_filters": [],
            "ipv4": {
                "address": "127.0.0.1",
                "broadcast": "",
                "netmask": "255.0.0.0",
                "network": "127.0.0.0"
            },
            "ipv6": [
                {
                    "address": "::1",
                    "prefix": "128",
                    "scope": "host"
                }
            ],
            "mtu": 65536,
            "promisc": false,
            "timestamping": [
                "tx_software",
                "rx_software",
                "software"
            ],
            "type": "loopback"
        },
        "ansible_local": {},
        "ansible_lsb": {},
        "ansible_lvm": {
            "lvs": {
                "root": {
                    "size_g": "16.41",
                    "vg": "rhel"
                },
                "swap": {
                    "size_g": "2.00",
                    "vg": "rhel"
                }
            },
            "pvs": {
                "/dev/sda3": {
                    "free_g": "0",
                    "size_g": "18.41",
                    "vg": "rhel"
                },
                "/dev/sdb1": {
                    "free_g": "0.97",
                    "size_g": "0.97",
                    "vg": "vgdata"
                }
            },
            "vgs": {
                "rhel": {
                    "free_g": "0",
                    "num_lvs": "2",
                    "num_pvs": "1",
                    "size_g": "18.41"
                },
                "vgdata": {
                    "free_g": "0.97",
                    "num_lvs": "0",
                    "num_pvs": "1",
                    "size_g": "0.97"
                }
            }
        },
        "ansible_machine": "x86_64",
        "ansible_machine_id": "732ca008a570426bb2c7b7a58cdd158f",
        "ansible_memfree_mb": 186,
        "ansible_memory_mb": {
            "nocache": {
                "free": 506,
                "used": 312
            },
            "real": {
                "free": 186,
                "total": 818,
                "used": 632
            },
            "swap": {
                "cached": 0,
                "free": 2047,
                "total": 2047,
                "used": 0
            }
        },
        "ansible_memtotal_mb": 818,
        "ansible_mounts": [
            {
                "block_available": 3802813,
                "block_size": 4096,
                "block_total": 4299264,
                "block_used": 496451,
                "device": "/dev/mapper/rhel-root",
                "fstype": "xfs",
                "inode_available": 8555139,
                "inode_total": 8603648,
                "inode_used": 48509,
                "mount": "/",
                "options": "rw,seclabel,relatime,attr2,inode64,noquota",
                "size_available": 15576322048,
                "size_total": 17609785344,
                "uuid": "d3ea57c1-02ac-46f1-96d7-9c3d38b77db7"
            },
            {
                "block_available": 214481,
                "block_size": 4096,
                "block_total": 259584,
                "block_used": 45103,
                "device": "/dev/sda2",
                "fstype": "xfs",
                "inode_available": 524270,
                "inode_total": 524288,
                "inode_used": 18,
                "mount": "/boot",
                "options": "rw,seclabel,relatime,attr2,inode64,noquota",
                "size_available": 878514176,
                "size_total": 1063256064,
                "uuid": "8741d4bb-77bc-43d4-8a7b-c701932de6e8"
            },
            {
                "block_available": 151569,
                "block_size": 4096,
                "block_total": 153296,
                "block_used": 1727,
                "device": "/dev/sda1",
                "fstype": "vfat",
                "inode_available": 0,
                "inode_total": 0,
                "inode_used": 0,
                "mount": "/boot/efi",
                "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro",
                "size_available": 620826624,
                "size_total": 627900416,
                "uuid": "6785-C5E7"
            }
        ],
        "ansible_nodename": "ansible1.example.com",
        "ansible_os_family": "RedHat",
        "ansible_pkg_mgr": "dnf",
        "ansible_proc_cmdline": {
            "BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64",
            "crashkernel": "auto",
            "quiet": true,
            "rd.lvm.lv": [
                "rhel/root",
                "rhel/swap"
            ],
            "resume": "/dev/mapper/rhel-swap",
            "rhgb": true,
            "ro": true,
            "root": "/dev/mapper/rhel-root"
        },
        "ansible_processor": [
            "0",
            "GenuineIntel",
            "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"
        ],
        "ansible_processor_cores": 1,
        "ansible_processor_count": 1,
        "ansible_processor_threads_per_core": 1,
        "ansible_processor_vcpus": 1,
        "ansible_product_name": "VMware7,1",
        "ansible_product_serial": "VMware-56 4d 91 64 1a 27 2d 83-11 fd ea d8 b2 f8 f6 8d",
        "ansible_product_uuid": "64914d56-271a-832d-11fd-ead8b2f8f68d",
        "ansible_product_version": "None",
        "ansible_python": {
            "executable": "/usr/libexec/platform-python",
            "has_sslcontext": true,
            "type": "cpython",
            "version": {
                "major": 3,
                "micro": 8,
                "minor": 6,
                "releaselevel": "final",
                "serial": 0
            },
            "version_info": [
                3,
                6,
                8,
                "final",
                0
            ]
        },
        "ansible_python_version": "3.6.8",
        "ansible_real_group_id": 0,
        "ansible_real_user_id": 0,
        "ansible_selinux": {
            "config_mode": "enforcing",
            "mode": "enforcing",
            "policyvers": 31,
            "status": "enabled",
            "type": "targeted"
        },
        "ansible_selinux_python_present": true,
        "ansible_service_mgr": "systemd",
        "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBDAy45Ndd8lJP90E4ZhiOMyN33O1HH77T1xf3RwLCIVgCs3GFvL8vg/n0pVxdNcWmC6q9UOawL+i5izBcXZ3wHg=",
        "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAICkGwciWcbrNizntC965NPvp9rBcLwO6DbhR5trS+BmI",
        "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQC8fcASOlyYRoK439WmRTcrzMaz5VdhX3lN9n2RZWwK6ZIxo8zC4nDhZEusSd9quVfOneUE61Q420+uYTejU9KZXjAesuims+Cnm9XEFj3BdY/JElEjkyiJBUNYY/DEV7nOAk7aMOmEa6CwJ7nMS/qPVcAAIVxcI7U+wmzJchKcOF9XmDqSqjYu00W+OLGKit8yfv1qlyP5HOQEDgbgYM81Kf5+TZHmQcuVe5rB4QdJ7vyNUnoRQUYWBLagnqNnAmPeVPR8tTJZtYONmkuBe/FWXJwxof98Pwcr/eMMVQy1tmdz+hpfsRNTV8r+KLfmoQqoNddXiqRNVdi4iB5P56FuKBmj1APflWbZEscDxANU5k4ctpGGSwkwfGtK1Od2qu7UWHf1AdXfbEFKoX5qeM3fTimvMCL7tA5EN5eQYNMX59eXIeU5WThxOeVqy9WzY7foY7xzPZEpZFkB+FiZ4yPpzG3PXijbXzMap/FmaDfL7xNH7frO3UMiVzYrpkl8sds=",
        "ansible_swapfree_mb": 2047,
        "ansible_swaptotal_mb": 2047,
        "ansible_system": "Linux",
        "ansible_system_capabilities": [
            "cap_chown",
            "cap_dac_override",
            "cap_dac_read_search",
            "cap_fowner",
            "cap_fsetid",
            "cap_kill",
            "cap_setgid",
            "cap_setuid",
            "cap_setpcap",
            "cap_linux_immutable",
            "cap_net_bind_service",
            "cap_net_broadcast",
            "cap_net_admin",
            "cap_net_raw",
            "cap_ipc_lock",
            "cap_ipc_owner",
            "cap_sys_module",
            "cap_sys_rawio",
            "cap_sys_chroot",
            "cap_sys_ptrace",
            "cap_sys_pacct",
            "cap_sys_admin",
            "cap_sys_boot",
            "cap_sys_nice",
            "cap_sys_resource",
            "cap_sys_time",
            "cap_sys_tty_config",
            "cap_mknod",
            "cap_lease",
            "cap_audit_write",
            "cap_audit_control",
            "cap_setfcap",
            "cap_mac_override",
            "cap_mac_admin",
            "cap_syslog",
            "cap_wake_alarm",
            "cap_block_suspend",
            "cap_audit_read+ep"
        ],
        "ansible_system_capabilities_enforced": "True",
        "ansible_system_vendor": "VMware, Inc.",
        "ansible_uptime_seconds": 523807,
        "ansible_user_dir": "/root",
        "ansible_user_gecos": "root",
        "ansible_user_gid": 0,
        "ansible_user_id": "root",
        "ansible_user_shell": "/bin/bash",
        "ansible_user_uid": 0,
        "ansible_userspace_architecture": "x86_64",
        "ansible_userspace_bits": "64",
        "ansible_virtualization_role": "guest",
        "ansible_virtualization_type": "VMware",
        "discovered_interpreter_python": "/usr/libexec/platform-python",
        "gather_subset": [
            "all"
        ],
        "module_setup": true
    },
    "changed": false
}
2021-06-21 11:59:41,089 p=1122179 u=ansible n=ansible | PLAY [playbook that configures an LVM volume with the name lvdata in the vgdata volume group] *******************
2021-06-21 11:59:41,097 p=1122179 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 11:59:42,699 p=1122179 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 11:59:42,762 p=1122179 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 11:59:42,819 p=1122179 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 11:59:42,862 p=1122179 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 11:59:43,138 p=1122179 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 11:59:43,145 p=1122179 u=ansible n=ansible | TASK [check for vgdata] *****************************************************************************************
2021-06-21 11:59:43,218 p=1122179 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"msg": "The conditional check ''vgdata' not in ansible_facts.ansible_lvm.vgs' failed. The error was: error while evaluating conditional ('vgdata' not in ansible_facts.ansible_lvm.vgs): 'dict object' has no attribute 'ansible_lvm'\n\nThe error appears to be in '/home/ansible/task11-2.yml': line 5, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  tasks:\n    - name: check for vgdata\n      ^ here\n"}
2021-06-21 11:59:43,227 p=1122179 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"msg": "The conditional check ''vgdata' not in ansible_facts.ansible_lvm.vgs' failed. The error was: error while evaluating conditional ('vgdata' not in ansible_facts.ansible_lvm.vgs): 'dict object' has no attribute 'ansible_lvm'\n\nThe error appears to be in '/home/ansible/task11-2.yml': line 5, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  tasks:\n    - name: check for vgdata\n      ^ here\n"}
2021-06-21 11:59:43,228 p=1122179 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"msg": "The conditional check ''vgdata' not in ansible_facts.ansible_lvm.vgs' failed. The error was: error while evaluating conditional ('vgdata' not in ansible_facts.ansible_lvm.vgs): 'dict object' has no attribute 'ansible_lvm'\n\nThe error appears to be in '/home/ansible/task11-2.yml': line 5, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  tasks:\n    - name: check for vgdata\n      ^ here\n"}
2021-06-21 11:59:43,229 p=1122179 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"msg": "The conditional check ''vgdata' not in ansible_facts.ansible_lvm.vgs' failed. The error was: error while evaluating conditional ('vgdata' not in ansible_facts.ansible_lvm.vgs): 'dict object' has no attribute 'ansible_lvm'\n\nThe error appears to be in '/home/ansible/task11-2.yml': line 5, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  tasks:\n    - name: check for vgdata\n      ^ here\n"}
2021-06-21 11:59:43,245 p=1122179 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"msg": "The conditional check ''vgdata' not in ansible_facts.ansible_lvm.vgs' failed. The error was: error while evaluating conditional ('vgdata' not in ansible_facts.ansible_lvm.vgs): 'dict object' has no attribute 'ansible_lvm'\n\nThe error appears to be in '/home/ansible/task11-2.yml': line 5, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  tasks:\n    - name: check for vgdata\n      ^ here\n"}
2021-06-21 11:59:43,246 p=1122179 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 11:59:43,247 p=1122179 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 11:59:43,247 p=1122179 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 11:59:43,247 p=1122179 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 11:59:43,247 p=1122179 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 11:59:43,247 p=1122179 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:01:44,359 p=1123311 u=ansible n=ansible | PLAY [playbook that configures an LVM volume with the name lvdata in the vgdata volume group] *******************
2021-06-21 12:01:44,366 p=1123311 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 12:01:46,227 p=1123311 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 12:01:46,234 p=1123311 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 12:01:46,242 p=1123311 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 12:01:46,249 p=1123311 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 12:01:46,558 p=1123311 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 12:01:46,564 p=1123311 u=ansible n=ansible | TASK [check for vgdata] *****************************************************************************************
2021-06-21 12:01:46,625 p=1123311 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:01:46,651 p=1123311 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:01:46,652 p=1123311 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:01:46,655 p=1123311 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:01:46,667 p=1123311 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:01:46,668 p=1123311 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 12:01:46,668 p=1123311 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:01:46,668 p=1123311 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:01:46,668 p=1123311 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:01:46,668 p=1123311 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:01:46,668 p=1123311 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:02:11,814 p=1123768 u=ansible n=ansible | PLAY [playbook that configures an LVM volume with the name lvdata in the vgdata volume group] *******************
2021-06-21 12:02:11,823 p=1123768 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 12:02:13,326 p=1123768 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 12:02:13,414 p=1123768 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 12:02:13,416 p=1123768 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 12:02:13,420 p=1123768 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 12:02:13,704 p=1123768 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 12:02:13,711 p=1123768 u=ansible n=ansible | TASK [check for vgdata] *****************************************************************************************
2021-06-21 12:02:13,782 p=1123768 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:02:13,803 p=1123768 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:02:13,804 p=1123768 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 12:02:13,806 p=1123768 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-21 12:02:13,819 p=1123768 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:02:13,825 p=1123768 u=ansible n=ansible | TASK [create lvdata lvm] ****************************************************************************************
2021-06-21 12:02:14,247 p=1123768 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "Bad size specification of '2000Mi'"}
2021-06-21 12:02:14,266 p=1123768 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "Bad size specification of '2000Mi'"}
2021-06-21 12:02:14,267 p=1123768 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 12:02:14,267 p=1123768 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-21 12:02:14,267 p=1123768 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:02:14,267 p=1123768 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-21 12:02:14,267 p=1123768 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:02:14,267 p=1123768 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:18:32,068 p=1130854 u=ansible n=ansible | PLAY [playbook that configures an LVM volume with the name lvdata in the vgdata volume group] *******************
2021-06-21 12:18:32,076 p=1130854 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 12:18:33,968 p=1130854 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 12:18:34,027 p=1130854 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 12:18:34,034 p=1130854 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 12:18:34,036 p=1130854 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 12:18:35,416 p=1130854 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 12:18:35,424 p=1130854 u=ansible n=ansible | TASK [check for vgdata] *****************************************************************************************
2021-06-21 12:18:35,506 p=1130854 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:18:35,507 p=1130854 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-21 12:18:35,513 p=1130854 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:18:35,515 p=1130854 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 12:18:35,526 p=1130854 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:18:35,533 p=1130854 u=ansible n=ansible | TASK [create lvdata lvm] ****************************************************************************************
2021-06-21 12:18:35,966 p=1130854 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "Bad size specification of '2000 Mi'"}
2021-06-21 12:18:35,974 p=1130854 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "Bad size specification of '2000 Mi'"}
2021-06-21 12:18:35,975 p=1130854 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 12:18:35,976 p=1130854 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-21 12:18:35,976 p=1130854 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:18:35,976 p=1130854 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-21 12:18:35,976 p=1130854 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:18:35,976 p=1130854 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:19:15,433 p=1131445 u=ansible n=ansible | PLAY [playbook that configures an LVM volume with the name lvdata in the vgdata volume group] *******************
2021-06-21 12:19:15,441 p=1131445 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 12:19:16,917 p=1131445 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 12:19:16,933 p=1131445 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 12:19:17,010 p=1131445 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 12:19:17,015 p=1131445 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 12:19:17,342 p=1131445 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 12:19:17,349 p=1131445 u=ansible n=ansible | TASK [check for vgdata] *****************************************************************************************
2021-06-21 12:19:17,424 p=1131445 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:19:17,424 p=1131445 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:19:17,429 p=1131445 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 12:19:17,429 p=1131445 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-21 12:19:17,439 p=1131445 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:19:17,445 p=1131445 u=ansible n=ansible | TASK [create lvdata lvm] ****************************************************************************************
2021-06-21 12:19:17,928 p=1131445 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "err": "  TEST MODE: Metadata will NOT be updated and volumes will not be (de)activated.\n  Volume group \"vgdata\" has insufficient free space (31 extents): 63 required.\n", "msg": "Creating logical volume 'lvdata' failed", "rc": 5}
2021-06-21 12:19:17,938 p=1131445 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-21 12:19:17,940 p=1131445 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 12:19:17,940 p=1131445 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-21 12:19:17,940 p=1131445 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:19:17,940 p=1131445 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-21 12:19:17,940 p=1131445 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:19:17,941 p=1131445 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:21:15,545 p=1132548 u=ansible n=ansible | PLAY [playbook that configures an LVM volume with the name lvdata in the vgdata volume group] *******************
2021-06-21 12:21:15,553 p=1132548 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 12:21:17,504 p=1132548 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 12:21:17,506 p=1132548 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 12:21:17,514 p=1132548 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 12:21:17,548 p=1132548 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 12:21:17,840 p=1132548 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 12:21:17,846 p=1132548 u=ansible n=ansible | TASK [check for vgdata] *****************************************************************************************
2021-06-21 12:21:17,912 p=1132548 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:21:17,917 p=1132548 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:21:17,927 p=1132548 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-21 12:21:17,928 p=1132548 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 12:21:17,941 p=1132548 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:21:17,948 p=1132548 u=ansible n=ansible | TASK [create lvdata lvm] ****************************************************************************************
2021-06-21 12:21:17,981 p=1132548 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"msg": "The conditional check 'ansible_lvm['vgs']['vgdata']['size_m'] > \"2000\"' failed. The error was: error while evaluating conditional (ansible_lvm['vgs']['vgdata']['size_m'] > \"2000\"): 'dict object' has no attribute 'size_m'\n\nThe error appears to be in '/home/ansible/task11-2.yml': line 12, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: create lvdata lvm\n      ^ here\n"}
2021-06-21 12:21:17,985 p=1132548 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"msg": "The conditional check 'ansible_lvm['vgs']['vgdata']['size_m'] > \"2000\"' failed. The error was: error while evaluating conditional (ansible_lvm['vgs']['vgdata']['size_m'] > \"2000\"): 'dict object' has no attribute 'size_m'\n\nThe error appears to be in '/home/ansible/task11-2.yml': line 12, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: create lvdata lvm\n      ^ here\n"}
2021-06-21 12:21:17,986 p=1132548 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 12:21:17,986 p=1132548 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-21 12:21:17,986 p=1132548 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:21:17,986 p=1132548 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-21 12:21:17,986 p=1132548 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:21:17,986 p=1132548 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:21:36,169 p=1132967 u=ansible n=ansible | PLAY [playbook that configures an LVM volume with the name lvdata in the vgdata volume group] *******************
2021-06-21 12:21:36,177 p=1132967 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 12:21:37,845 p=1132967 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 12:21:37,888 p=1132967 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 12:21:37,899 p=1132967 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 12:21:37,933 p=1132967 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 12:21:38,447 p=1132967 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 12:21:38,454 p=1132967 u=ansible n=ansible | TASK [check for vgdata] *****************************************************************************************
2021-06-21 12:21:38,545 p=1132967 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:21:38,546 p=1132967 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-21 12:21:38,558 p=1132967 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 12:21:38,559 p=1132967 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:21:38,592 p=1132967 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:21:38,601 p=1132967 u=ansible n=ansible | TASK [create lvdata lvm] ****************************************************************************************
2021-06-21 12:21:38,630 p=1132967 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-21 12:21:39,186 p=1132967 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-21 12:21:39,187 p=1132967 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 12:21:39,187 p=1132967 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-21 12:21:39,188 p=1132967 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:21:39,188 p=1132967 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-21 12:21:39,188 p=1132967 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:21:39,188 p=1132967 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:24:47,462 p=1134553 u=ansible n=ansible | PLAY [playbook that configures an LVM volume with the name lvdata in the vgdata volume group] *******************
2021-06-21 12:24:47,474 p=1134553 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 12:24:49,353 p=1134553 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 12:24:49,355 p=1134553 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 12:24:49,368 p=1134553 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 12:24:49,401 p=1134553 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 12:24:49,660 p=1134553 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 12:24:49,667 p=1134553 u=ansible n=ansible | TASK [check for vgdata] *****************************************************************************************
2021-06-21 12:24:49,736 p=1134553 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:24:49,748 p=1134553 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 12:24:49,750 p=1134553 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-21 12:24:49,750 p=1134553 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:24:49,762 p=1134553 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:24:49,768 p=1134553 u=ansible n=ansible | TASK [check vgdata size] ****************************************************************************************
2021-06-21 12:24:49,797 p=1134553 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "insufficient size"}
2021-06-21 12:24:49,803 p=1134553 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 12:24:49,810 p=1134553 u=ansible n=ansible | TASK [create lvm on vgdata 2GiB+] *******************************************************************************
2021-06-21 12:24:50,271 p=1134553 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-21 12:24:50,272 p=1134553 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 12:24:50,273 p=1134553 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-21 12:24:50,273 p=1134553 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:24:50,273 p=1134553 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-21 12:24:50,273 p=1134553 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:24:50,273 p=1134553 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:27:31,288 p=1135980 u=ansible n=ansible | ansible3.example.com | FAILED | rc=2 >>
[Errno 2] No such file or directory: b'll': b'll'

2021-06-21 12:27:36,243 p=1136044 u=ansible n=ansible | ansible3.example.com | CHANGED | rc=0 >>
total 20
lrwxrwxrwx.   1 root root    7 Aug 12  2018 bin -> usr/bin
dr-xr-xr-x.   5 root root 4096 May 28 12:37 boot
drwxr-xr-x.  20 root root 3220 Jun 21 09:34 dev
drwxr-xr-x. 102 root root 8192 Jun 18 11:27 etc
drwxr-xr-x.   5 root root   46 Jun 18 11:27 home
lrwxrwxrwx.   1 root root    7 Aug 12  2018 lib -> usr/lib
lrwxrwxrwx.   1 root root    9 Aug 12  2018 lib64 -> usr/lib64
drwxr-xr-x.   2 root root    6 Aug 12  2018 media
drwxr-xr-x.   2 root root    6 Aug 12  2018 mnt
drwxr-xr-x.   2 root root    6 Aug 12  2018 opt
dr-xr-xr-x. 212 root root    0 May 29 14:38 proc
dr-xr-x---.   3 root root  151 Jun 14 22:05 root
drwxr-xr-x.  34 root root  960 Jun 15 13:08 run
lrwxrwxrwx.   1 root root    8 Aug 12  2018 sbin -> usr/sbin
drwxr-xr-x.   2 root root    6 Aug 12  2018 srv
dr-xr-xr-x.  13 root root    0 May 29 14:39 sys
drwxrwxrwt.   5 root root  163 Jun 21 12:27 tmp
drwxr-xr-x.  12 root root  144 May 28 11:31 usr
drwxr-xr-x.  21 root root 4096 May 28 12:36 var

2021-06-21 12:27:41,559 p=1136098 u=ansible n=ansible | PLAY [playbook that configures an LVM volume with the name lvdata in the vgdata volume group] *******************
2021-06-21 12:27:41,567 p=1136098 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 12:27:43,180 p=1136098 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 12:27:43,272 p=1136098 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 12:27:43,274 p=1136098 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 12:27:43,294 p=1136098 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 12:27:43,611 p=1136098 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 12:27:43,618 p=1136098 u=ansible n=ansible | TASK [check for vgdata] *****************************************************************************************
2021-06-21 12:27:43,687 p=1136098 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:27:43,688 p=1136098 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:27:43,704 p=1136098 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-21 12:27:43,706 p=1136098 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 12:27:43,717 p=1136098 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:27:43,723 p=1136098 u=ansible n=ansible | TASK [check vgdata size] ****************************************************************************************
2021-06-21 12:27:43,751 p=1136098 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "insufficient size"}
2021-06-21 12:27:43,757 p=1136098 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 12:27:43,763 p=1136098 u=ansible n=ansible | TASK [create lvm on vgdata 2GiB+] *******************************************************************************
2021-06-21 12:27:44,207 p=1136098 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-21 12:27:44,214 p=1136098 u=ansible n=ansible | TASK [set lvdata filesystem] ************************************************************************************
2021-06-21 12:27:44,586 p=1136098 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "Device /dev/vgdata/lvdata not found."}
2021-06-21 12:27:44,587 p=1136098 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 12:27:44,587 p=1136098 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-21 12:27:44,588 p=1136098 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:27:44,588 p=1136098 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
2021-06-21 12:27:44,588 p=1136098 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:27:44,588 p=1136098 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:28:20,575 p=1136660 u=ansible n=ansible | PLAY [playbook that configures an LVM volume with the name lvdata in the vgdata volume group] *******************
2021-06-21 12:28:20,583 p=1136660 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 12:28:22,044 p=1136660 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 12:28:22,105 p=1136660 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 12:28:22,134 p=1136660 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 12:28:22,136 p=1136660 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 12:28:22,474 p=1136660 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 12:28:22,481 p=1136660 u=ansible n=ansible | TASK [check for vgdata] *****************************************************************************************
2021-06-21 12:28:22,514 p=1136660 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:28:22,553 p=1136660 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-21 12:28:22,554 p=1136660 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:28:22,567 p=1136660 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 12:28:22,573 p=1136660 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:28:22,580 p=1136660 u=ansible n=ansible | TASK [check vgdata size] ****************************************************************************************
2021-06-21 12:28:22,609 p=1136660 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "insufficient size"}
2021-06-21 12:28:22,619 p=1136660 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 12:28:22,625 p=1136660 u=ansible n=ansible | TASK [create lvm on vgdata 2GiB+] *******************************************************************************
2021-06-21 12:28:23,073 p=1136660 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-21 12:28:23,080 p=1136660 u=ansible n=ansible | TASK [set lvdata filesystem] ************************************************************************************
2021-06-21 12:28:23,451 p=1136660 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "Device /dev/vgdata/lvdata not found."}
2021-06-21 12:28:23,452 p=1136660 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 12:28:23,453 p=1136660 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-21 12:28:23,453 p=1136660 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:28:23,453 p=1136660 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=1    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
2021-06-21 12:28:23,453 p=1136660 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:28:23,453 p=1136660 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:28:25,749 p=1136966 u=ansible n=ansible | PLAY [playbook that configures an LVM volume with the name lvdata in the vgdata volume group] *******************
2021-06-21 12:28:25,757 p=1136966 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 12:28:27,203 p=1136966 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 12:28:27,236 p=1136966 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 12:28:27,260 p=1136966 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 12:28:27,392 p=1136966 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 12:28:27,588 p=1136966 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 12:28:27,595 p=1136966 u=ansible n=ansible | TASK [check for vgdata] *****************************************************************************************
2021-06-21 12:28:27,670 p=1136966 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:28:27,670 p=1136966 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-21 12:28:27,678 p=1136966 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:28:27,680 p=1136966 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 12:28:27,689 p=1136966 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:28:27,695 p=1136966 u=ansible n=ansible | TASK [check vgdata size] ****************************************************************************************
2021-06-21 12:28:27,725 p=1136966 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "insufficient size"}
2021-06-21 12:28:27,739 p=1136966 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 12:28:27,747 p=1136966 u=ansible n=ansible | TASK [create lvm on vgdata 2GiB+] *******************************************************************************
2021-06-21 12:28:28,374 p=1136966 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-21 12:28:28,381 p=1136966 u=ansible n=ansible | TASK [set lvdata filesystem] ************************************************************************************
2021-06-21 12:28:46,031 p=1136966 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-21 12:28:46,038 p=1136966 u=ansible n=ansible | TASK [mount lvdata to /lvdata] **********************************************************************************
2021-06-21 12:28:46,441 p=1136966 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-21 12:28:46,443 p=1136966 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 12:28:46,443 p=1136966 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-21 12:28:46,443 p=1136966 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:28:46,443 p=1136966 u=ansible n=ansible | ansible3.example.com       : ok=4    changed=3    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-21 12:28:46,443 p=1136966 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:28:46,444 p=1136966 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:29:27,369 p=1137681 u=ansible n=ansible | ansible-playbook 2.9.22
  config file = /home/ansible/ansible.cfg
  configured module search path = ['/home/ansible/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.6/site-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.6.8 (default, Dec  5 2019, 15:45:45) [GCC 8.3.1 20191121 (Red Hat 8.3.1-5)]
2021-06-21 12:29:27,369 p=1137681 u=ansible n=ansible | Using /home/ansible/ansible.cfg as config file
2021-06-21 12:29:27,375 p=1137681 u=ansible n=ansible | host_list declined parsing /home/ansible/inventory as it did not pass its verify_file() method
2021-06-21 12:29:27,375 p=1137681 u=ansible n=ansible | script declined parsing /home/ansible/inventory as it did not pass its verify_file() method
2021-06-21 12:29:27,375 p=1137681 u=ansible n=ansible | auto declined parsing /home/ansible/inventory as it did not pass its verify_file() method
2021-06-21 12:29:27,379 p=1137681 u=ansible n=ansible | Parsed /home/ansible/inventory inventory source with ini plugin
2021-06-21 12:29:27,564 p=1137681 u=ansible n=ansible | Skipping callback 'actionable', as we already have a stdout callback.
2021-06-21 12:29:27,564 p=1137681 u=ansible n=ansible | Skipping callback 'counter_enabled', as we already have a stdout callback.
2021-06-21 12:29:27,565 p=1137681 u=ansible n=ansible | Skipping callback 'debug', as we already have a stdout callback.
2021-06-21 12:29:27,565 p=1137681 u=ansible n=ansible | Skipping callback 'dense', as we already have a stdout callback.
2021-06-21 12:29:27,565 p=1137681 u=ansible n=ansible | Skipping callback 'dense', as we already have a stdout callback.
2021-06-21 12:29:27,565 p=1137681 u=ansible n=ansible | Skipping callback 'full_skip', as we already have a stdout callback.
2021-06-21 12:29:27,565 p=1137681 u=ansible n=ansible | Skipping callback 'json', as we already have a stdout callback.
2021-06-21 12:29:27,565 p=1137681 u=ansible n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2021-06-21 12:29:27,565 p=1137681 u=ansible n=ansible | Skipping callback 'null', as we already have a stdout callback.
2021-06-21 12:29:27,565 p=1137681 u=ansible n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2021-06-21 12:29:27,565 p=1137681 u=ansible n=ansible | Skipping callback 'selective', as we already have a stdout callback.
2021-06-21 12:29:27,565 p=1137681 u=ansible n=ansible | Skipping callback 'skippy', as we already have a stdout callback.
2021-06-21 12:29:27,565 p=1137681 u=ansible n=ansible | Skipping callback 'stderr', as we already have a stdout callback.
2021-06-21 12:29:27,565 p=1137681 u=ansible n=ansible | Skipping callback 'unixy', as we already have a stdout callback.
2021-06-21 12:29:27,566 p=1137681 u=ansible n=ansible | Skipping callback 'yaml', as we already have a stdout callback.
2021-06-21 12:29:27,566 p=1137681 u=ansible n=ansible | PLAYBOOK: task11-2.yml ******************************************************************************************
2021-06-21 12:29:27,566 p=1137681 u=ansible n=ansible | 1 plays in task11-2.yml
2021-06-21 12:29:27,568 p=1137681 u=ansible n=ansible | PLAY [playbook that configures an LVM volume with the name lvdata in the vgdata volume group] *******************
2021-06-21 12:29:27,575 p=1137681 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 12:29:27,583 p=1137695 u=ansible n=ansible | <control.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:27,584 p=1137695 u=ansible n=ansible | <control.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/f92cae2459 control.example.com '/bin/sh -c '"'"'echo ~ansible && sleep 0'"'"''
2021-06-21 12:29:27,597 p=1137696 u=ansible n=ansible | <ansible1.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:27,597 p=1137696 u=ansible n=ansible | <ansible1.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/0f2d199c40 ansible1.example.com '/bin/sh -c '"'"'echo ~ansible && sleep 0'"'"''
2021-06-21 12:29:27,607 p=1137698 u=ansible n=ansible | <ansible2.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:27,608 p=1137698 u=ansible n=ansible | <ansible2.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/0e197ef17a ansible2.example.com '/bin/sh -c '"'"'echo ~ansible && sleep 0'"'"''
2021-06-21 12:29:27,608 p=1137700 u=ansible n=ansible | <ansible4.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:27,609 p=1137700 u=ansible n=ansible | <ansible4.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/d2544b2ce1 ansible4.example.com '/bin/sh -c '"'"'echo ~ansible && sleep 0'"'"''
2021-06-21 12:29:27,616 p=1137699 u=ansible n=ansible | <ansible3.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:27,617 p=1137699 u=ansible n=ansible | <ansible3.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/285c2485ef ansible3.example.com '/bin/sh -c '"'"'echo ~ansible && sleep 0'"'"''
2021-06-21 12:29:27,662 p=1137699 u=ansible n=ansible | <ansible3.example.com> (0, b'/home/ansible\n', b'')
2021-06-21 12:29:27,663 p=1137699 u=ansible n=ansible | <ansible3.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:27,663 p=1137699 u=ansible n=ansible | <ansible3.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/285c2485ef ansible3.example.com '/bin/sh -c '"'"'( umask 77 && mkdir -p "` echo /home/ansible/.ansible/tmp `"&& mkdir "` echo /home/ansible/.ansible/tmp/ansible-tmp-1624292967.66306-1137699-59881152497178 `" && echo ansible-tmp-1624292967.66306-1137699-59881152497178="` echo /home/ansible/.ansible/tmp/ansible-tmp-1624292967.66306-1137699-59881152497178 `" ) && sleep 0'"'"''
2021-06-21 12:29:27,691 p=1137699 u=ansible n=ansible | <ansible3.example.com> (0, b'ansible-tmp-1624292967.66306-1137699-59881152497178=/home/ansible/.ansible/tmp/ansible-tmp-1624292967.66306-1137699-59881152497178\n', b'')
2021-06-21 12:29:27,864 p=1137695 u=ansible n=ansible | <control.example.com> (0, b'/home/ansible\n', b'muxclient: master hello exchange failed\r\n')
2021-06-21 12:29:27,867 p=1137695 u=ansible n=ansible | <control.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:27,868 p=1137695 u=ansible n=ansible | <control.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/f92cae2459 control.example.com '/bin/sh -c '"'"'( umask 77 && mkdir -p "` echo /home/ansible/.ansible/tmp `"&& mkdir "` echo /home/ansible/.ansible/tmp/ansible-tmp-1624292967.8646195-1137695-61056256305346 `" && echo ansible-tmp-1624292967.8646195-1137695-61056256305346="` echo /home/ansible/.ansible/tmp/ansible-tmp-1624292967.8646195-1137695-61056256305346 `" ) && sleep 0'"'"''
2021-06-21 12:29:27,930 p=1137695 u=ansible n=ansible | <control.example.com> (0, b'ansible-tmp-1624292967.8646195-1137695-61056256305346=/home/ansible/.ansible/tmp/ansible-tmp-1624292967.8646195-1137695-61056256305346\n', b'')
2021-06-21 12:29:27,965 p=1137698 u=ansible n=ansible | <ansible2.example.com> (0, b'/home/ansible\n', b'')
2021-06-21 12:29:27,965 p=1137698 u=ansible n=ansible | <ansible2.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:27,966 p=1137698 u=ansible n=ansible | <ansible2.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/0e197ef17a ansible2.example.com '/bin/sh -c '"'"'( umask 77 && mkdir -p "` echo /home/ansible/.ansible/tmp `"&& mkdir "` echo /home/ansible/.ansible/tmp/ansible-tmp-1624292967.9654498-1137698-182568854012342 `" && echo ansible-tmp-1624292967.9654498-1137698-182568854012342="` echo /home/ansible/.ansible/tmp/ansible-tmp-1624292967.9654498-1137698-182568854012342 `" ) && sleep 0'"'"''
2021-06-21 12:29:27,995 p=1137698 u=ansible n=ansible | <ansible2.example.com> (0, b'ansible-tmp-1624292967.9654498-1137698-182568854012342=/home/ansible/.ansible/tmp/ansible-tmp-1624292967.9654498-1137698-182568854012342\n', b'')
2021-06-21 12:29:28,005 p=1137696 u=ansible n=ansible | <ansible1.example.com> (0, b'/home/ansible\n', b'')
2021-06-21 12:29:28,006 p=1137696 u=ansible n=ansible | <ansible1.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:28,007 p=1137696 u=ansible n=ansible | <ansible1.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/0f2d199c40 ansible1.example.com '/bin/sh -c '"'"'( umask 77 && mkdir -p "` echo /home/ansible/.ansible/tmp `"&& mkdir "` echo /home/ansible/.ansible/tmp/ansible-tmp-1624292968.0059233-1137696-123832029009511 `" && echo ansible-tmp-1624292968.0059233-1137696-123832029009511="` echo /home/ansible/.ansible/tmp/ansible-tmp-1624292968.0059233-1137696-123832029009511 `" ) && sleep 0'"'"''
2021-06-21 12:29:28,023 p=1137699 u=ansible n=ansible | <ansible3.example.com> Attempting python interpreter discovery
2021-06-21 12:29:28,023 p=1137700 u=ansible n=ansible | <ansible4.example.com> (0, b'/home/ansible\n', b'')
2021-06-21 12:29:28,023 p=1137699 u=ansible n=ansible | <ansible3.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:28,024 p=1137700 u=ansible n=ansible | <ansible4.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:28,024 p=1137699 u=ansible n=ansible | <ansible3.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/285c2485ef ansible3.example.com '/bin/sh -c '"'"'echo PLATFORM; uname; echo FOUND; command -v '"'"'"'"'"'"'"'"'/usr/bin/python'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.7'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.6'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.5'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python2.7'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python2.6'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'/usr/libexec/platform-python'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'/usr/bin/python3'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python'"'"'"'"'"'"'"'"'; echo ENDFOUND && sleep 0'"'"''
2021-06-21 12:29:28,024 p=1137700 u=ansible n=ansible | <ansible4.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/d2544b2ce1 ansible4.example.com '/bin/sh -c '"'"'( umask 77 && mkdir -p "` echo /home/ansible/.ansible/tmp `"&& mkdir "` echo /home/ansible/.ansible/tmp/ansible-tmp-1624292968.023642-1137700-165914244380766 `" && echo ansible-tmp-1624292968.023642-1137700-165914244380766="` echo /home/ansible/.ansible/tmp/ansible-tmp-1624292968.023642-1137700-165914244380766 `" ) && sleep 0'"'"''
2021-06-21 12:29:28,026 p=1137695 u=ansible n=ansible | <control.example.com> Attempting python interpreter discovery
2021-06-21 12:29:28,026 p=1137695 u=ansible n=ansible | <control.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:28,027 p=1137695 u=ansible n=ansible | <control.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/f92cae2459 control.example.com '/bin/sh -c '"'"'echo PLATFORM; uname; echo FOUND; command -v '"'"'"'"'"'"'"'"'/usr/bin/python'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.7'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.6'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.5'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python2.7'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python2.6'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'/usr/libexec/platform-python'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'/usr/bin/python3'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python'"'"'"'"'"'"'"'"'; echo ENDFOUND && sleep 0'"'"''
2021-06-21 12:29:28,027 p=1137698 u=ansible n=ansible | <ansible2.example.com> Attempting python interpreter discovery
2021-06-21 12:29:28,027 p=1137698 u=ansible n=ansible | <ansible2.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:28,028 p=1137698 u=ansible n=ansible | <ansible2.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/0e197ef17a ansible2.example.com '/bin/sh -c '"'"'echo PLATFORM; uname; echo FOUND; command -v '"'"'"'"'"'"'"'"'/usr/bin/python'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.7'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.6'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.5'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python2.7'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python2.6'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'/usr/libexec/platform-python'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'/usr/bin/python3'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python'"'"'"'"'"'"'"'"'; echo ENDFOUND && sleep 0'"'"''
2021-06-21 12:29:28,055 p=1137696 u=ansible n=ansible | <ansible1.example.com> (0, b'ansible-tmp-1624292968.0059233-1137696-123832029009511=/home/ansible/.ansible/tmp/ansible-tmp-1624292968.0059233-1137696-123832029009511\n', b'')
2021-06-21 12:29:28,057 p=1137696 u=ansible n=ansible | <ansible1.example.com> Attempting python interpreter discovery
2021-06-21 12:29:28,057 p=1137696 u=ansible n=ansible | <ansible1.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:28,058 p=1137696 u=ansible n=ansible | <ansible1.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/0f2d199c40 ansible1.example.com '/bin/sh -c '"'"'echo PLATFORM; uname; echo FOUND; command -v '"'"'"'"'"'"'"'"'/usr/bin/python'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.7'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.6'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.5'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python2.7'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python2.6'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'/usr/libexec/platform-python'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'/usr/bin/python3'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python'"'"'"'"'"'"'"'"'; echo ENDFOUND && sleep 0'"'"''
2021-06-21 12:29:28,067 p=1137699 u=ansible n=ansible | <ansible3.example.com> (0, b'PLATFORM\nLinux\nFOUND\n/usr/bin/python3.6\n/usr/libexec/platform-python\n/usr/bin/python3\nENDFOUND\n', b'')
2021-06-21 12:29:28,068 p=1137699 u=ansible n=ansible | <ansible3.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:28,069 p=1137699 u=ansible n=ansible | <ansible3.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/285c2485ef ansible3.example.com '/bin/sh -c '"'"'/usr/bin/python3.6 && sleep 0'"'"''
2021-06-21 12:29:28,072 p=1137700 u=ansible n=ansible | <ansible4.example.com> (0, b'ansible-tmp-1624292968.023642-1137700-165914244380766=/home/ansible/.ansible/tmp/ansible-tmp-1624292968.023642-1137700-165914244380766\n', b'')
2021-06-21 12:29:28,073 p=1137700 u=ansible n=ansible | <ansible4.example.com> Attempting python interpreter discovery
2021-06-21 12:29:28,074 p=1137700 u=ansible n=ansible | <ansible4.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:28,074 p=1137700 u=ansible n=ansible | <ansible4.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/d2544b2ce1 ansible4.example.com '/bin/sh -c '"'"'echo PLATFORM; uname; echo FOUND; command -v '"'"'"'"'"'"'"'"'/usr/bin/python'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.7'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.6'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.5'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python2.7'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python2.6'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'/usr/libexec/platform-python'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'/usr/bin/python3'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python'"'"'"'"'"'"'"'"'; echo ENDFOUND && sleep 0'"'"''
2021-06-21 12:29:28,075 p=1137698 u=ansible n=ansible | <ansible2.example.com> (0, b'PLATFORM\nLinux\nFOUND\n/usr/bin/python3.6\n/usr/libexec/platform-python\n/usr/bin/python3\nENDFOUND\n', b'')
2021-06-21 12:29:28,075 p=1137698 u=ansible n=ansible | <ansible2.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:28,076 p=1137698 u=ansible n=ansible | <ansible2.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/0e197ef17a ansible2.example.com '/bin/sh -c '"'"'/usr/bin/python3.6 && sleep 0'"'"''
2021-06-21 12:29:28,114 p=1137696 u=ansible n=ansible | <ansible1.example.com> (0, b'PLATFORM\nLinux\nFOUND\n/usr/bin/python3.6\n/usr/libexec/platform-python\n/usr/bin/python3\nENDFOUND\n', b'')
2021-06-21 12:29:28,116 p=1137696 u=ansible n=ansible | <ansible1.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:28,117 p=1137696 u=ansible n=ansible | <ansible1.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/0f2d199c40 ansible1.example.com '/bin/sh -c '"'"'/usr/bin/python3.6 && sleep 0'"'"''
2021-06-21 12:29:28,122 p=1137700 u=ansible n=ansible | <ansible4.example.com> (0, b'PLATFORM\nLinux\nFOUND\n/usr/bin/python3.6\n/usr/libexec/platform-python\n/usr/bin/python3\nENDFOUND\n', b'')
2021-06-21 12:29:28,123 p=1137700 u=ansible n=ansible | <ansible4.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:28,124 p=1137700 u=ansible n=ansible | <ansible4.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/d2544b2ce1 ansible4.example.com '/bin/sh -c '"'"'/usr/bin/python3.6 && sleep 0'"'"''
2021-06-21 12:29:28,163 p=1137698 u=ansible n=ansible | <ansible2.example.com> (0, b'{"platform_dist_result": ["redhat", "8.2", "Ootpa"], "osrelease_content": "NAME=\\"Red Hat Enterprise Linux\\"\\nVERSION=\\"8.2 (Ootpa)\\"\\nID=\\"rhel\\"\\nID_LIKE=\\"fedora\\"\\nVERSION_ID=\\"8.2\\"\\nPLATFORM_ID=\\"platform:el8\\"\\nPRETTY_NAME=\\"Red Hat Enterprise Linux 8.2 (Ootpa)\\"\\nANSI_COLOR=\\"0;31\\"\\nCPE_NAME=\\"cpe:/o:redhat:enterprise_linux:8.2:GA\\"\\nHOME_URL=\\"https://www.redhat.com/\\"\\nBUG_REPORT_URL=\\"https://bugzilla.redhat.com/\\"\\n\\nREDHAT_BUGZILLA_PRODUCT=\\"Red Hat Enterprise Linux 8\\"\\nREDHAT_BUGZILLA_PRODUCT_VERSION=8.2\\nREDHAT_SUPPORT_PRODUCT=\\"Red Hat Enterprise Linux\\"\\nREDHAT_SUPPORT_PRODUCT_VERSION=\\"8.2\\"\\n"}\n', b'')
2021-06-21 12:29:28,165 p=1137698 u=ansible n=ansible | Using module file /usr/lib/python3.6/site-packages/ansible/modules/system/setup.py
2021-06-21 12:29:28,166 p=1137698 u=ansible n=ansible | <ansible2.example.com> PUT /home/ansible/.ansible/tmp/ansible-local-1137681ttosmjuv/tmp3ucc6gnv TO /home/ansible/.ansible/tmp/ansible-tmp-1624292967.9654498-1137698-182568854012342/AnsiballZ_setup.py
2021-06-21 12:29:28,167 p=1137698 u=ansible n=ansible | <ansible2.example.com> SSH: EXEC sftp -b - -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/0e197ef17a '[ansible2.example.com]'
2021-06-21 12:29:28,167 p=1137699 u=ansible n=ansible | <ansible3.example.com> (0, b'{"platform_dist_result": ["redhat", "8.2", "Ootpa"], "osrelease_content": "NAME=\\"Red Hat Enterprise Linux\\"\\nVERSION=\\"8.2 (Ootpa)\\"\\nID=\\"rhel\\"\\nID_LIKE=\\"fedora\\"\\nVERSION_ID=\\"8.2\\"\\nPLATFORM_ID=\\"platform:el8\\"\\nPRETTY_NAME=\\"Red Hat Enterprise Linux 8.2 (Ootpa)\\"\\nANSI_COLOR=\\"0;31\\"\\nCPE_NAME=\\"cpe:/o:redhat:enterprise_linux:8.2:GA\\"\\nHOME_URL=\\"https://www.redhat.com/\\"\\nBUG_REPORT_URL=\\"https://bugzilla.redhat.com/\\"\\n\\nREDHAT_BUGZILLA_PRODUCT=\\"Red Hat Enterprise Linux 8\\"\\nREDHAT_BUGZILLA_PRODUCT_VERSION=8.2\\nREDHAT_SUPPORT_PRODUCT=\\"Red Hat Enterprise Linux\\"\\nREDHAT_SUPPORT_PRODUCT_VERSION=\\"8.2\\"\\n"}\n', b'')
2021-06-21 12:29:28,169 p=1137699 u=ansible n=ansible | Using module file /usr/lib/python3.6/site-packages/ansible/modules/system/setup.py
2021-06-21 12:29:28,170 p=1137699 u=ansible n=ansible | <ansible3.example.com> PUT /home/ansible/.ansible/tmp/ansible-local-1137681ttosmjuv/tmpdah6dn91 TO /home/ansible/.ansible/tmp/ansible-tmp-1624292967.66306-1137699-59881152497178/AnsiballZ_setup.py
2021-06-21 12:29:28,171 p=1137699 u=ansible n=ansible | <ansible3.example.com> SSH: EXEC sftp -b - -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/285c2485ef '[ansible3.example.com]'
2021-06-21 12:29:28,183 p=1137695 u=ansible n=ansible | <control.example.com> (0, b'PLATFORM\nLinux\nFOUND\n/usr/libexec/platform-python\nENDFOUND\n', b'')
2021-06-21 12:29:28,185 p=1137695 u=ansible n=ansible | <control.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:28,186 p=1137695 u=ansible n=ansible | <control.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/f92cae2459 control.example.com '/bin/sh -c '"'"'/usr/libexec/platform-python && sleep 0'"'"''
2021-06-21 12:29:28,216 p=1137696 u=ansible n=ansible | <ansible1.example.com> (0, b'{"platform_dist_result": ["redhat", "8.2", "Ootpa"], "osrelease_content": "NAME=\\"Red Hat Enterprise Linux\\"\\nVERSION=\\"8.2 (Ootpa)\\"\\nID=\\"rhel\\"\\nID_LIKE=\\"fedora\\"\\nVERSION_ID=\\"8.2\\"\\nPLATFORM_ID=\\"platform:el8\\"\\nPRETTY_NAME=\\"Red Hat Enterprise Linux 8.2 (Ootpa)\\"\\nANSI_COLOR=\\"0;31\\"\\nCPE_NAME=\\"cpe:/o:redhat:enterprise_linux:8.2:GA\\"\\nHOME_URL=\\"https://www.redhat.com/\\"\\nBUG_REPORT_URL=\\"https://bugzilla.redhat.com/\\"\\n\\nREDHAT_BUGZILLA_PRODUCT=\\"Red Hat Enterprise Linux 8\\"\\nREDHAT_BUGZILLA_PRODUCT_VERSION=8.2\\nREDHAT_SUPPORT_PRODUCT=\\"Red Hat Enterprise Linux\\"\\nREDHAT_SUPPORT_PRODUCT_VERSION=\\"8.2\\"\\n"}\n', b'')
2021-06-21 12:29:28,218 p=1137696 u=ansible n=ansible | Using module file /usr/lib/python3.6/site-packages/ansible/modules/system/setup.py
2021-06-21 12:29:28,219 p=1137696 u=ansible n=ansible | <ansible1.example.com> PUT /home/ansible/.ansible/tmp/ansible-local-1137681ttosmjuv/tmph036wejr TO /home/ansible/.ansible/tmp/ansible-tmp-1624292968.0059233-1137696-123832029009511/AnsiballZ_setup.py
2021-06-21 12:29:28,219 p=1137696 u=ansible n=ansible | <ansible1.example.com> SSH: EXEC sftp -b - -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/0f2d199c40 '[ansible1.example.com]'
2021-06-21 12:29:28,228 p=1137700 u=ansible n=ansible | <ansible4.example.com> (0, b'{"platform_dist_result": ["redhat", "8.2", "Ootpa"], "osrelease_content": "NAME=\\"Red Hat Enterprise Linux\\"\\nVERSION=\\"8.2 (Ootpa)\\"\\nID=\\"rhel\\"\\nID_LIKE=\\"fedora\\"\\nVERSION_ID=\\"8.2\\"\\nPLATFORM_ID=\\"platform:el8\\"\\nPRETTY_NAME=\\"Red Hat Enterprise Linux 8.2 (Ootpa)\\"\\nANSI_COLOR=\\"0;31\\"\\nCPE_NAME=\\"cpe:/o:redhat:enterprise_linux:8.2:GA\\"\\nHOME_URL=\\"https://www.redhat.com/\\"\\nBUG_REPORT_URL=\\"https://bugzilla.redhat.com/\\"\\n\\nREDHAT_BUGZILLA_PRODUCT=\\"Red Hat Enterprise Linux 8\\"\\nREDHAT_BUGZILLA_PRODUCT_VERSION=8.2\\nREDHAT_SUPPORT_PRODUCT=\\"Red Hat Enterprise Linux\\"\\nREDHAT_SUPPORT_PRODUCT_VERSION=\\"8.2\\"\\n"}\n', b'')
2021-06-21 12:29:28,230 p=1137700 u=ansible n=ansible | Using module file /usr/lib/python3.6/site-packages/ansible/modules/system/setup.py
2021-06-21 12:29:28,230 p=1137700 u=ansible n=ansible | <ansible4.example.com> PUT /home/ansible/.ansible/tmp/ansible-local-1137681ttosmjuv/tmpc3z4r5gr TO /home/ansible/.ansible/tmp/ansible-tmp-1624292968.023642-1137700-165914244380766/AnsiballZ_setup.py
2021-06-21 12:29:28,231 p=1137700 u=ansible n=ansible | <ansible4.example.com> SSH: EXEC sftp -b - -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/d2544b2ce1 '[ansible4.example.com]'
2021-06-21 12:29:28,247 p=1137699 u=ansible n=ansible | <ansible3.example.com> (0, b'sftp> put /home/ansible/.ansible/tmp/ansible-local-1137681ttosmjuv/tmpdah6dn91 /home/ansible/.ansible/tmp/ansible-tmp-1624292967.66306-1137699-59881152497178/AnsiballZ_setup.py\n', b'')
2021-06-21 12:29:28,247 p=1137699 u=ansible n=ansible | <ansible3.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:28,248 p=1137699 u=ansible n=ansible | <ansible3.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/285c2485ef ansible3.example.com '/bin/sh -c '"'"'chmod u+x /home/ansible/.ansible/tmp/ansible-tmp-1624292967.66306-1137699-59881152497178/ /home/ansible/.ansible/tmp/ansible-tmp-1624292967.66306-1137699-59881152497178/AnsiballZ_setup.py && sleep 0'"'"''
2021-06-21 12:29:28,257 p=1137698 u=ansible n=ansible | <ansible2.example.com> (0, b'sftp> put /home/ansible/.ansible/tmp/ansible-local-1137681ttosmjuv/tmp3ucc6gnv /home/ansible/.ansible/tmp/ansible-tmp-1624292967.9654498-1137698-182568854012342/AnsiballZ_setup.py\n', b'')
2021-06-21 12:29:28,258 p=1137698 u=ansible n=ansible | <ansible2.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:28,259 p=1137698 u=ansible n=ansible | <ansible2.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/0e197ef17a ansible2.example.com '/bin/sh -c '"'"'chmod u+x /home/ansible/.ansible/tmp/ansible-tmp-1624292967.9654498-1137698-182568854012342/ /home/ansible/.ansible/tmp/ansible-tmp-1624292967.9654498-1137698-182568854012342/AnsiballZ_setup.py && sleep 0'"'"''
2021-06-21 12:29:28,288 p=1137699 u=ansible n=ansible | <ansible3.example.com> (0, b'', b'')
2021-06-21 12:29:28,289 p=1137699 u=ansible n=ansible | <ansible3.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:28,290 p=1137699 u=ansible n=ansible | <ansible3.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/285c2485ef -tt ansible3.example.com '/bin/sh -c '"'"'sudo -H -S -n  -u root /bin/sh -c '"'"'"'"'"'"'"'"'echo BECOME-SUCCESS-vrxrzwzfjdfgnxioepkvbexalfwfuxvb ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1624292967.66306-1137699-59881152497178/AnsiballZ_setup.py'"'"'"'"'"'"'"'"' && sleep 0'"'"''
2021-06-21 12:29:28,300 p=1137698 u=ansible n=ansible | <ansible2.example.com> (0, b'', b'')
2021-06-21 12:29:28,301 p=1137698 u=ansible n=ansible | <ansible2.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:28,301 p=1137698 u=ansible n=ansible | <ansible2.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/0e197ef17a -tt ansible2.example.com '/bin/sh -c '"'"'sudo -H -S -n  -u root /bin/sh -c '"'"'"'"'"'"'"'"'echo BECOME-SUCCESS-itonlcgxkbmajhclqravzlqxptcgmdbw ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1624292967.9654498-1137698-182568854012342/AnsiballZ_setup.py'"'"'"'"'"'"'"'"' && sleep 0'"'"''
2021-06-21 12:29:28,318 p=1137695 u=ansible n=ansible | <control.example.com> (0, b'{"platform_dist_result": ["redhat", "8.2", "Ootpa"], "osrelease_content": "NAME=\\"Red Hat Enterprise Linux\\"\\nVERSION=\\"8.2 (Ootpa)\\"\\nID=\\"rhel\\"\\nID_LIKE=\\"fedora\\"\\nVERSION_ID=\\"8.2\\"\\nPLATFORM_ID=\\"platform:el8\\"\\nPRETTY_NAME=\\"Red Hat Enterprise Linux 8.2 (Ootpa)\\"\\nANSI_COLOR=\\"0;31\\"\\nCPE_NAME=\\"cpe:/o:redhat:enterprise_linux:8.2:GA\\"\\nHOME_URL=\\"https://www.redhat.com/\\"\\nBUG_REPORT_URL=\\"https://bugzilla.redhat.com/\\"\\n\\nREDHAT_BUGZILLA_PRODUCT=\\"Red Hat Enterprise Linux 8\\"\\nREDHAT_BUGZILLA_PRODUCT_VERSION=8.2\\nREDHAT_SUPPORT_PRODUCT=\\"Red Hat Enterprise Linux\\"\\nREDHAT_SUPPORT_PRODUCT_VERSION=\\"8.2\\"\\n"}\n', b'')
2021-06-21 12:29:28,320 p=1137695 u=ansible n=ansible | Using module file /usr/lib/python3.6/site-packages/ansible/modules/system/setup.py
2021-06-21 12:29:28,320 p=1137695 u=ansible n=ansible | <control.example.com> PUT /home/ansible/.ansible/tmp/ansible-local-1137681ttosmjuv/tmpnqf6cja6 TO /home/ansible/.ansible/tmp/ansible-tmp-1624292967.8646195-1137695-61056256305346/AnsiballZ_setup.py
2021-06-21 12:29:28,321 p=1137695 u=ansible n=ansible | <control.example.com> SSH: EXEC sftp -b - -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/f92cae2459 '[control.example.com]'
2021-06-21 12:29:28,332 p=1137696 u=ansible n=ansible | <ansible1.example.com> (0, b'sftp> put /home/ansible/.ansible/tmp/ansible-local-1137681ttosmjuv/tmph036wejr /home/ansible/.ansible/tmp/ansible-tmp-1624292968.0059233-1137696-123832029009511/AnsiballZ_setup.py\n', b'')
2021-06-21 12:29:28,333 p=1137696 u=ansible n=ansible | <ansible1.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:28,334 p=1137696 u=ansible n=ansible | <ansible1.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/0f2d199c40 ansible1.example.com '/bin/sh -c '"'"'chmod u+x /home/ansible/.ansible/tmp/ansible-tmp-1624292968.0059233-1137696-123832029009511/ /home/ansible/.ansible/tmp/ansible-tmp-1624292968.0059233-1137696-123832029009511/AnsiballZ_setup.py && sleep 0'"'"''
2021-06-21 12:29:28,364 p=1137700 u=ansible n=ansible | <ansible4.example.com> (0, b'sftp> put /home/ansible/.ansible/tmp/ansible-local-1137681ttosmjuv/tmpc3z4r5gr /home/ansible/.ansible/tmp/ansible-tmp-1624292968.023642-1137700-165914244380766/AnsiballZ_setup.py\n', b'')
2021-06-21 12:29:28,365 p=1137700 u=ansible n=ansible | <ansible4.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:28,366 p=1137700 u=ansible n=ansible | <ansible4.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/d2544b2ce1 ansible4.example.com '/bin/sh -c '"'"'chmod u+x /home/ansible/.ansible/tmp/ansible-tmp-1624292968.023642-1137700-165914244380766/ /home/ansible/.ansible/tmp/ansible-tmp-1624292968.023642-1137700-165914244380766/AnsiballZ_setup.py && sleep 0'"'"''
2021-06-21 12:29:28,378 p=1137696 u=ansible n=ansible | <ansible1.example.com> (0, b'', b'')
2021-06-21 12:29:28,379 p=1137696 u=ansible n=ansible | <ansible1.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:28,380 p=1137696 u=ansible n=ansible | <ansible1.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/0f2d199c40 -tt ansible1.example.com '/bin/sh -c '"'"'sudo -H -S -n  -u root /bin/sh -c '"'"'"'"'"'"'"'"'echo BECOME-SUCCESS-xiblthoplodwedeanbowiweskbqvelkc ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1624292968.0059233-1137696-123832029009511/AnsiballZ_setup.py'"'"'"'"'"'"'"'"' && sleep 0'"'"''
2021-06-21 12:29:28,382 p=1137699 u=ansible n=ansible | Escalation succeeded
2021-06-21 12:29:28,389 p=1137698 u=ansible n=ansible | Escalation succeeded
2021-06-21 12:29:28,440 p=1137700 u=ansible n=ansible | <ansible4.example.com> (0, b'', b'')
2021-06-21 12:29:28,443 p=1137700 u=ansible n=ansible | <ansible4.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:28,444 p=1137700 u=ansible n=ansible | <ansible4.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/d2544b2ce1 -tt ansible4.example.com '/bin/sh -c '"'"'sudo -H -S -n  -u root /bin/sh -c '"'"'"'"'"'"'"'"'echo BECOME-SUCCESS-rvamaixqiwppgathraeyxbateqmhfotl ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1624292968.023642-1137700-165914244380766/AnsiballZ_setup.py'"'"'"'"'"'"'"'"' && sleep 0'"'"''
2021-06-21 12:29:28,461 p=1137696 u=ansible n=ansible | Escalation succeeded
2021-06-21 12:29:28,466 p=1137695 u=ansible n=ansible | <control.example.com> (0, b'sftp> put /home/ansible/.ansible/tmp/ansible-local-1137681ttosmjuv/tmpnqf6cja6 /home/ansible/.ansible/tmp/ansible-tmp-1624292967.8646195-1137695-61056256305346/AnsiballZ_setup.py\n', b'')
2021-06-21 12:29:28,471 p=1137695 u=ansible n=ansible | <control.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:28,473 p=1137695 u=ansible n=ansible | <control.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/f92cae2459 control.example.com '/bin/sh -c '"'"'chmod u+x /home/ansible/.ansible/tmp/ansible-tmp-1624292967.8646195-1137695-61056256305346/ /home/ansible/.ansible/tmp/ansible-tmp-1624292967.8646195-1137695-61056256305346/AnsiballZ_setup.py && sleep 0'"'"''
2021-06-21 12:29:28,719 p=1137700 u=ansible n=ansible | Escalation succeeded
2021-06-21 12:29:28,765 p=1137695 u=ansible n=ansible | <control.example.com> (0, b'', b'')
2021-06-21 12:29:28,766 p=1137695 u=ansible n=ansible | <control.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:28,767 p=1137695 u=ansible n=ansible | <control.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/f92cae2459 -tt control.example.com '/bin/sh -c '"'"'sudo -H -S -n  -u root /bin/sh -c '"'"'"'"'"'"'"'"'echo BECOME-SUCCESS-bfjfklfoxgzvhbostuknvlnpfoefsxsd ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1624292967.8646195-1137695-61056256305346/AnsiballZ_setup.py'"'"'"'"'"'"'"'"' && sleep 0'"'"''
2021-06-21 12:29:28,903 p=1137695 u=ansible n=ansible | Escalation succeeded
2021-06-21 12:29:29,185 p=1137699 u=ansible n=ansible | <ansible3.example.com> (0, b'\r\n{"ansible_facts": {"ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQDLbpkEwco/aqNxpfyCgjcteNyDdtf1cTfa3wAzDcrrVoAXSbAUf51k8JHY5UlX0HYszanZzm9ALCedPYzNvNRa/LdkwS7VpBcZBHR9FixNW+raaO3NFZtdujcvXX25e/kU4/q/VicnXjoIfXRvjuqXQnaYItUZVK50+7J0jptiGYCtn4XRHRpzs6eHE54AHiHVtXqc98wCC+FOT2xKP45i5W5+mxF54orF2LrRnAv0MO5kI0smhoPFoQJIGImbD99ausPvIpChLPGj+VJ3sXM2viDx6CrBPyswWgy7EV/97PqkBuW/ktj9FFPVHefgs0OW64YX2NHfb0KL07YVkIyVUNU+gHNksVuRS6Id+4c9/mrnyQdsAI7ou21/tl/kcs2Q4OzoCGiXM/k5s25RSpnUp3h2MghKwLahuQ12B5HcXcJkgHbsM95RmBDXKLh3t7KJJvQ13cGuU1e1vDol2TmwL6WOtlIbo9fJad0UFexNZXIBIOp136xi9YL1AZ4u7/k=", "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPP/jkdNeSjCx2Lqy4OwWmUQ7fR7tRXwWG5BxVi/hQcJ7Gc1du1Zba6X7sPLrS7wNtkb4/aDzyC8EUE4C1yolFk=", "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIF4fL4K0UN8QnLqv7vPUg02OEdUmYqa7fwqZv8PMwiQJ", "ansible_user_id": "root", "ansible_user_uid": 0, "ansible_user_gid": 0, "ansible_user_gecos": "root", "ansible_user_dir": "/root", "ansible_user_shell": "/bin/bash", "ansible_real_user_id": 0, "ansible_effective_user_id": 0, "ansible_real_group_id": 0, "ansible_effective_group_id": 0, "ansible_lsb": {}, "ansible_selinux_python_present": true, "ansible_selinux": {"status": "enabled", "policyvers": 31, "config_mode": "enforcing", "mode": "enforcing", "type": "targeted"}, "ansible_fibre_channel_wwn": [], "ansible_system": "Linux", "ansible_kernel": "4.18.0-193.el8.x86_64", "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020", "ansible_machine": "x86_64", "ansible_python_version": "3.6.8", "ansible_fqdn": "ansible3.example.com", "ansible_hostname": "ansible3", "ansible_nodename": "ansible3.example.com", "ansible_domain": "example.com", "ansible_userspace_bits": "64", "ansible_architecture": "x86_64", "ansible_userspace_architecture": "x86_64", "ansible_machine_id": "3c43dc156f7c4ccbbc12497981e94caa", "ansible_distribution": "RedHat", "ansible_distribution_release": "Ootpa", "ansible_distribution_version": "8.2", "ansible_distribution_major_version": "8", "ansible_distribution_file_path": "/etc/redhat-release", "ansible_distribution_file_variety": "RedHat", "ansible_distribution_file_parsed": true, "ansible_distribution_file_search_string": "Red Hat", "ansible_os_family": "RedHat", "ansible_interfaces": ["lo", "ens192"], "ansible_ens192": {"device": "ens192", "macaddress": "00:0c:29:49:26:ef", "mtu": 1500, "active": true, "module": "vmxnet3", "type": "ether", "pciid": "0000:0b:00.0", "speed": 10000, "promisc": false, "ipv4": {"address": "192.168.11.203", "broadcast": "192.168.11.255", "netmask": "255.255.255.0", "network": "192.168.11.0"}, "ipv6": [{"address": "fe80::4552:40e9:edc2:dfca", "prefix": "64", "scope": "link"}], "features": {"rx_checksumming": "on", "tx_checksumming": "on", "tx_checksum_ipv4": "off [fixed]", "tx_checksum_ip_generic": "on", "tx_checksum_ipv6": "off [fixed]", "tx_checksum_fcoe_crc": "off [fixed]", "tx_checksum_sctp": "off [fixed]", "scatter_gather": "on", "tx_scatter_gather": "on", "tx_scatter_gather_fraglist": "off [fixed]", "tcp_segmentation_offload": "on", "tx_tcp_segmentation": "on", "tx_tcp_ecn_segmentation": "off [fixed]", "tx_tcp_mangleid_segmentation": "off", "tx_tcp6_segmentation": "on", "generic_segmentation_offload": "on", "generic_receive_offload": "on", "large_receive_offload": "on", "rx_vlan_offload": "on", "tx_vlan_offload": "on", "ntuple_filters": "off [fixed]", "receive_hashing": "off [fixed]", "highdma": "on", "rx_vlan_filter": "on [fixed]", "vlan_challenged": "off [fixed]", "tx_lockless": "off [fixed]", "netns_local": "off [fixed]", "tx_gso_robust": "off [fixed]", "tx_fcoe_segmentation": "off [fixed]", "tx_gre_segmentation": "off [fixed]", "tx_gre_csum_segmentation": "off [fixed]", "tx_ipxip4_segmentation": "off [fixed]", "tx_ipxip6_segmentation": "off [fixed]", "tx_udp_tnl_segmentation": "off [fixed]", "tx_udp_tnl_csum_segmentation": "off [fixed]", "tx_gso_partial": "off [fixed]", "tx_sctp_segmentation": "off [fixed]", "tx_esp_segmentation": "off [fixed]", "tx_udp_segmentation": "off [fixed]", "tls_hw_rx_offload": "off [fixed]", "fcoe_mtu": "off [fixed]", "tx_nocache_copy": "off", "loopback": "off [fixed]", "rx_fcs": "off [fixed]", "rx_all": "off [fixed]", "tx_vlan_stag_hw_insert": "off [fixed]", "rx_vlan_stag_hw_parse": "off [fixed]", "rx_vlan_stag_filter": "off [fixed]", "l2_fwd_offload": "off [fixed]", "hw_tc_offload": "off [fixed]", "esp_hw_offload": "off [fixed]", "esp_tx_csum_hw_offload": "off [fixed]", "rx_udp_tunnel_port_offload": "off [fixed]", "tls_hw_tx_offload": "off [fixed]", "rx_gro_hw": "off [fixed]", "tls_hw_record": "off [fixed]"}, "timestamping": ["rx_software", "software"], "hw_timestamp_filters": []}, "ansible_lo": {"device": "lo", "mtu": 65536, "active": true, "type": "loopback", "promisc": false, "ipv4": {"address": "127.0.0.1", "broadcast": "", "netmask": "255.0.0.0", "network": "127.0.0.0"}, "ipv6": [{"address": "::1", "prefix": "128", "scope": "host"}], "features": {"rx_checksumming": "on [fixed]", "tx_checksumming": "on", "tx_checksum_ipv4": "off [fixed]", "tx_checksum_ip_generic": "on [fixed]", "tx_checksum_ipv6": "off [fixed]", "tx_checksum_fcoe_crc": "off [fixed]", "tx_checksum_sctp": "on [fixed]", "scatter_gather": "on", "tx_scatter_gather": "on [fixed]", "tx_scatter_gather_fraglist": "on [fixed]", "tcp_segmentation_offload": "on", "tx_tcp_segmentation": "on", "tx_tcp_ecn_segmentation": "on", "tx_tcp_mangleid_segmentation": "on", "tx_tcp6_segmentation": "on", "generic_segmentation_offload": "on", "generic_receive_offload": "on", "large_receive_offload": "off [fixed]", "rx_vlan_offload": "off [fixed]", "tx_vlan_offload": "off [fixed]", "ntuple_filters": "off [fixed]", "receive_hashing": "off [fixed]", "highdma": "on [fixed]", "rx_vlan_filter": "off [fixed]", "vlan_challenged": "on [fixed]", "tx_lockless": "on [fixed]", "netns_local": "on [fixed]", "tx_gso_robust": "off [fixed]", "tx_fcoe_segmentation": "off [fixed]", "tx_gre_segmentation": "off [fixed]", "tx_gre_csum_segmentation": "off [fixed]", "tx_ipxip4_segmentation": "off [fixed]", "tx_ipxip6_segmentation": "off [fixed]", "tx_udp_tnl_segmentation": "off [fixed]", "tx_udp_tnl_csum_segmentation": "off [fixed]", "tx_gso_partial": "off [fixed]", "tx_sctp_segmentation": "on", "tx_esp_segmentation": "off [fixed]", "tx_udp_segmentation": "off [fixed]", "tls_hw_rx_offload": "off [fixed]", "fcoe_mtu": "off [fixed]", "tx_nocache_copy": "off [fixed]", "loopback": "on [fixed]", "rx_fcs": "off [fixed]", "rx_all": "off [fixed]", "tx_vlan_stag_hw_insert": "off [fixed]", "rx_vlan_stag_hw_parse": "off [fixed]", "rx_vlan_stag_filter": "off [fixed]", "l2_fwd_offload": "off [fixed]", "hw_tc_offload": "off [fixed]", "esp_hw_offload": "off [fixed]", "esp_tx_csum_hw_offload": "off [fixed]", "rx_udp_tunnel_port_offload": "off [fixed]", "tls_hw_tx_offload": "off [fixed]", "rx_gro_hw": "off [fixed]", "tls_hw_record": "off [fixed]"}, "timestamping": ["tx_software", "rx_software", "software"], "hw_timestamp_filters": []}, "ansible_default_ipv4": {"gateway": "192.168.11.1", "interface": "ens192", "address": "192.168.11.203", "broadcast": "192.168.11.255", "netmask": "255.255.255.0", "network": "192.168.11.0", "macaddress": "00:0c:29:49:26:ef", "mtu": 1500, "type": "ether", "alias": "ens192"}, "ansible_default_ipv6": {}, "ansible_all_ipv4_addresses": ["192.168.11.203"], "ansible_all_ipv6_addresses": ["fe80::4552:40e9:edc2:dfca"], "ansible_processor": ["0", "GenuineIntel", "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"], "ansible_processor_count": 1, "ansible_processor_cores": 1, "ansible_processor_threads_per_core": 1, "ansible_processor_vcpus": 1, "ansible_memtotal_mb": 818, "ansible_memfree_mb": 104, "ansible_swaptotal_mb": 2047, "ansible_swapfree_mb": 2039, "ansible_memory_mb": {"real": {"total": 818, "used": 714, "free": 104}, "nocache": {"free": 509, "used": 309}, "swap": {"total": 2047, "free": 2039, "used": 8, "cached": 1}}, "ansible_bios_date": "06/25/2020", "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725", "ansible_form_factor": "Other", "ansible_product_name": "VMware7,1", "ansible_product_serial": "VMware-56 4d 9c 16 3f f4 00 fd-1f f4 4f 35 04 49 26 ef", "ansible_product_uuid": "169c4d56-f43f-fd00-1ff4-4f35044926ef", "ansible_product_version": "None", "ansible_system_vendor": "VMware, Inc.", "ansible_devices": {"dm-1": {"virtual": 1, "links": {"ids": ["dm-name-rhel_ansible3-swap", "dm-uuid-LVM-N8txXna9aNDmBo71nYLC3rCpHmDqplpZ16IBeZSV8f525wnRkDdcWvw9WqoQYIwD"], "uuids": ["d2b04ad5-a1e8-4885-8d24-7c4c5793feda"], "labels": [], "masters": []}, "vendor": null, "model": null, "sas_address": null, "sas_device_handle": null, "removable": "0", "support_discard": "4096", "partitions": {}, "rotational": "1", "scheduler_mode": "", "sectors": "4194304", "sectorsize": "512", "size": "2.00 GB", "host": "", "holders": []}, "sdb": {"virtual": 1, "links": {"ids": [], "uuids": [], "labels": [], "masters": []}, "vendor": "VMware", "model": "Virtual disk", "sas_address": null, "sas_device_handle": null, "removable": "0", "support_discard": "4096", "partitions": {"sdb1": {"links": {"ids": ["lvm-pv-uuid-hiwj0u-x5Wb-2I0S-m5NW-1N0h-dVjf-4W0UZC"], "uuids": [], "labels": [], "masters": ["dm-2"]}, "start": "2048", "sectors": "6289408", "sectorsize": 512, "size": "3.00 GB", "uuid": null, "holders": ["vgdata-lvdata"]}}, "rotational": "1", "scheduler_mode": "mq-deadline", "sectors": "10485760", "sectorsize": "512", "size": "5.00 GB", "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)", "holders": []}, "sr0": {"virtual": 1, "links": {"ids": ["ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"], "uuids": ["2020-04-04-08-21-15-00"], "labels": ["RHEL-8-2-0-BaseOS-x86_64"], "masters": []}, "vendor": "NECVMWar", "model": "VMware SATA CD00", "sas_address": null, "sas_device_handle": null, "removable": "1", "support_discard": "0", "partitions": {}, "rotational": "1", "scheduler_mode": "mq-deadline", "sectors": "16478208", "sectorsize": "2048", "size": "7.86 GB", "host": "SATA controller: VMware SATA AHCI controller", "holders": []}, "dm-2": {"virtual": 1, "links": {"ids": ["dm-name-vgdata-lvdata", "dm-uuid-LVM-9vLGX3yQZPnrEOuo4iibDe4USh8W5Z0JkV1Ns4NoOfvrmaonxKwOLzxF8f3yerfO"], "uuids": ["8919beba-7523-4223-ac54-7b09447fb0ef"], "labels": [], "masters": []}, "vendor": null, "model": null, "sas_address": null, "sas_device_handle": null, "removable": "0", "support_discard": "4096", "partitions": {}, "rotational": "1", "scheduler_mode": "", "sectors": "4128768", "sectorsize": "512", "size": "1.97 GB", "host": "", "holders": []}, "dm-0": {"virtual": 1, "links": {"ids": ["dm-name-rhel_ansible3-root", "dm-uuid-LVM-N8txXna9aNDmBo71nYLC3rCpHmDqplpZVS6cZ9Z13pKLvt0jv4jBu7jyus75vW3u"], "uuids": ["38c5f745-9650-48a1-8b41-178229308dc8"], "labels": [], "masters": []}, "vendor": null, "model": null, "sas_address": null, "sas_device_handle": null, "removable": "0", "support_discard": "4096", "partitions": {}, "rotational": "1", "scheduler_mode": "", "sectors": "34414592", "sectorsize": "512", "size": "16.41 GB", "host": "", "holders": []}, "sda": {"virtual": 1, "links": {"ids": [], "uuids": [], "labels": [], "masters": []}, "vendor": "VMware", "model": "Virtual disk", "sas_address": null, "sas_device_handle": null, "removable": "0", "support_discard": "4096", "partitions": {"sda2": {"links": {"ids": [], "uuids": ["8517d363-11b5-4d14-b1e6-d9c0828d1491"], "labels": [], "masters": []}, "start": "1230848", "sectors": "2097152", "sectorsize": 512, "size": "1.00 GB", "uuid": "8517d363-11b5-4d14-b1e6-d9c0828d1491", "holders": []}, "sda3": {"links": {"ids": ["lvm-pv-uuid-ukZEA6-cSIb-T6hj-ViKr-ca2x-SZgV-3x5WxK"], "uuids": [], "labels": [], "masters": ["dm-0", "dm-1"]}, "start": "3328000", "sectors": "38612992", "sectorsize": 512, "size": "18.41 GB", "uuid": null, "holders": ["rhel_ansible3-swap", "rhel_ansible3-root"]}, "sda1": {"links": {"ids": [], "uuids": ["BF11-3BEC"], "labels": [], "masters": []}, "start": "2048", "sectors": "1228800", "sectorsize": 512, "size": "600.00 MB", "uuid": "BF11-3BEC", "holders": []}}, "rotational": "1", "scheduler_mode": "mq-deadline", "sectors": "41943040", "sectorsize": "512", "size": "20.00 GB", "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)", "holders": []}}, "ansible_device_links": {"ids": {"dm-2": ["dm-name-vgdata-lvdata", "dm-uuid-LVM-9vLGX3yQZPnrEOuo4iibDe4USh8W5Z0JkV1Ns4NoOfvrmaonxKwOLzxF8f3yerfO"], "sdb1": ["lvm-pv-uuid-hiwj0u-x5Wb-2I0S-m5NW-1N0h-dVjf-4W0UZC"], "dm-1": ["dm-name-rhel_ansible3-swap", "dm-uuid-LVM-N8txXna9aNDmBo71nYLC3rCpHmDqplpZ16IBeZSV8f525wnRkDdcWvw9WqoQYIwD"], "dm-0": ["dm-name-rhel_ansible3-root", "dm-uuid-LVM-N8txXna9aNDmBo71nYLC3rCpHmDqplpZVS6cZ9Z13pKLvt0jv4jBu7jyus75vW3u"], "sda3": ["lvm-pv-uuid-ukZEA6-cSIb-T6hj-ViKr-ca2x-SZgV-3x5WxK"], "sr0": ["ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"]}, "uuids": {"dm-2": ["8919beba-7523-4223-ac54-7b09447fb0ef"], "sr0": ["2020-04-04-08-21-15-00"], "dm-1": ["d2b04ad5-a1e8-4885-8d24-7c4c5793feda"], "dm-0": ["38c5f745-9650-48a1-8b41-178229308dc8"], "sda1": ["BF11-3BEC"], "sda2": ["8517d363-11b5-4d14-b1e6-d9c0828d1491"]}, "labels": {"sr0": ["RHEL-8-2-0-BaseOS-x86_64"]}, "masters": {"sda3": ["dm-0", "dm-1"], "sdb1": ["dm-2"]}}, "ansible_uptime_seconds": 1979433, "ansible_lvm": {"lvs": {"root": {"size_g": "16.41", "vg": "rhel_ansible3"}, "swap": {"size_g": "2.00", "vg": "rhel_ansible3"}, "lvdata": {"size_g": "1.97", "vg": "vgdata"}}, "vgs": {"rhel_ansible3": {"size_g": "18.41", "free_g": "0", "num_lvs": "2", "num_pvs": "1"}, "vgdata": {"size_g": "2.97", "free_g": "1.00", "num_lvs": "1", "num_pvs": "1"}}, "pvs": {"/dev/sda3": {"size_g": "18.41", "free_g": "0", "vg": "rhel_ansible3"}, "/dev/sdb1": {"size_g": "2.97", "free_g": "1.00", "vg": "vgdata"}}}, "ansible_mounts": [{"mount": "/", "device": "/dev/mapper/rhel_ansible3-root", "fstype": "xfs", "options": "rw,seclabel,relatime,attr2,inode64,noquota", "size_total": 17609785344, "size_available": 15403941888, "block_size": 4096, "block_total": 4299264, "block_available": 3760728, "block_used": 538536, "inode_total": 8603648, "inode_available": 8554047, "inode_used": 49601, "uuid": "38c5f745-9650-48a1-8b41-178229308dc8"}, {"mount": "/boot", "device": "/dev/sda2", "fstype": "xfs", "options": "rw,seclabel,relatime,attr2,inode64,noquota", "size_total": 1063256064, "size_available": 878514176, "block_size": 4096, "block_total": 259584, "block_available": 214481, "block_used": 45103, "inode_total": 524288, "inode_available": 524270, "inode_used": 18, "uuid": "8517d363-11b5-4d14-b1e6-d9c0828d1491"}, {"mount": "/boot/efi", "device": "/dev/sda1", "fstype": "vfat", "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro", "size_total": 627900416, "size_available": 620826624, "block_size": 4096, "block_total": 153296, "block_available": 151569, "block_used": 1727, "inode_total": 0, "inode_available": 0, "inode_used": 0, "uuid": "BF11-3BEC"}], "ansible_env": {"LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:", "LANG": "en_US.UTF-8", "SUDO_GID": "1000", "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-vrxrzwzfjdfgnxioepkvbexalfwfuxvb ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1624292967.66306-1137699-59881152497178/AnsiballZ_setup.py", "USER": "root", "PWD": "/home/ansible", "HOME": "/root", "SUDO_USER": "ansible", "SUDO_UID": "1000", "MAIL": "/var/mail/root", "SHELL": "/bin/bash", "TERM": "xterm", "SHLVL": "1", "LOGNAME": "root", "PATH": "/sbin:/bin:/usr/sbin:/usr/bin", "_": "/usr/libexec/platform-python"}, "ansible_date_time": {"year": "2021", "month": "06", "weekday": "Monday", "weekday_number": "1", "weeknumber": "25", "day": "21", "hour": "12", "minute": "29", "second": "29", "epoch": "1624292969", "date": "2021-06-21", "time": "12:29:29", "iso8601_micro": "2021-06-21T16:29:29.140305Z", "iso8601": "2021-06-21T16:29:29Z", "iso8601_basic": "20210621T122929140305", "iso8601_basic_short": "20210621T122929", "tz": "EDT", "tz_offset": "-0400"}, "ansible_pkg_mgr": "dnf", "ansible_virtualization_role": "guest", "ansible_virtualization_type": "VMware", "ansible_fips": false, "ansible_system_capabilities_enforced": "True", "ansible_system_capabilities": ["cap_chown", "cap_dac_override", "cap_dac_read_search", "cap_fowner", "cap_fsetid", "cap_kill", "cap_setgid", "cap_setuid", "cap_setpcap", "cap_linux_immutable", "cap_net_bind_service", "cap_net_broadcast", "cap_net_admin", "cap_net_raw", "cap_ipc_lock", "cap_ipc_owner", "cap_sys_module", "cap_sys_rawio", "cap_sys_chroot", "cap_sys_ptrace", "cap_sys_pacct", "cap_sys_admin", "cap_sys_boot", "cap_sys_nice", "cap_sys_resource", "cap_sys_time", "cap_sys_tty_config", "cap_mknod", "cap_lease", "cap_audit_write", "cap_audit_control", "cap_setfcap", "cap_mac_override", "cap_mac_admin", "cap_syslog", "cap_wake_alarm", "cap_block_suspend", "cap_audit_read+ep"], "ansible_hostnqn": "", "ansible_local": {}, "ansible_is_chroot": false, "ansible_cmdline": {"BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64", "root": "/dev/mapper/rhel_ansible3-root", "ro": true, "crashkernel": "auto", "resume": "/dev/mapper/rhel_ansible3-swap", "rd.lvm.lv": "rhel_ansible3/swap", "rhgb": true, "quiet": true}, "ansible_proc_cmdline": {"BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64", "root": "/dev/mapper/rhel_ansible3-root", "ro": true, "crashkernel": "auto", "resume": "/dev/mapper/rhel_ansible3-swap", "rd.lvm.lv": ["rhel_ansible3/root", "rhel_ansible3/swap"], "rhgb": true, "quiet": true}, "ansible_dns": {"search": ["verizon.net", "example.com"], "nameservers": ["192.168.11.1", "8.8.8.8"]}, "ansible_python": {"version": {"major": 3, "minor": 6, "micro": 8, "releaselevel": "final", "serial": 0}, "version_info": [3, 6, 8, "final", 0], "executable": "/usr/libexec/platform-python", "has_sslcontext": true, "type": "cpython"}, "ansible_apparmor": {"status": "disabled"}, "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:14907c16f2a8", "ansible_service_mgr": "systemd", "gather_subset": ["all"], "module_setup": true}, "invocation": {"module_args": {"gather_subset": ["all"], "gather_timeout": 10, "filter": "*", "fact_path": "/etc/ansible/facts.d"}}}\r\n', b'Shared connection to ansible3.example.com closed.\r\n')
2021-06-21 12:29:29,195 p=1137699 u=ansible n=ansible | <ansible3.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:29,197 p=1137699 u=ansible n=ansible | <ansible3.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/285c2485ef ansible3.example.com '/bin/sh -c '"'"'rm -f -r /home/ansible/.ansible/tmp/ansible-tmp-1624292967.66306-1137699-59881152497178/ > /dev/null 2>&1 && sleep 0'"'"''
2021-06-21 12:29:29,200 p=1137698 u=ansible n=ansible | <ansible2.example.com> (0, b'\r\n{"ansible_facts": {"ansible_user_id": "root", "ansible_user_uid": 0, "ansible_user_gid": 0, "ansible_user_gecos": "root", "ansible_user_dir": "/root", "ansible_user_shell": "/bin/bash", "ansible_real_user_id": 0, "ansible_effective_user_id": 0, "ansible_real_group_id": 0, "ansible_effective_group_id": 0, "ansible_lsb": {}, "ansible_python": {"version": {"major": 3, "minor": 6, "micro": 8, "releaselevel": "final", "serial": 0}, "version_info": [3, 6, 8, "final", 0], "executable": "/usr/libexec/platform-python", "has_sslcontext": true, "type": "cpython"}, "ansible_fips": false, "ansible_distribution": "RedHat", "ansible_distribution_release": "Ootpa", "ansible_distribution_version": "8.2", "ansible_distribution_major_version": "8", "ansible_distribution_file_path": "/etc/redhat-release", "ansible_distribution_file_variety": "RedHat", "ansible_distribution_file_parsed": true, "ansible_distribution_file_search_string": "Red Hat", "ansible_os_family": "RedHat", "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQCn1N/3PiCTyvvNnifkgufpme0SrUMxwH/Xxwv5KdezUfzrRaiorFVbnHk1oI6hT9wIkXljFyhoIgZLdoDheQE+36SzR7D5jQn8GNjmhSsPshlznj8I+zkKCv+UqSCnjHApT6aXCV+lgvYfSXUjgexcqwivPEttF23ylUG36g6oLn1aBcUrIlFpj1M16tizGod4Y5j+lpMMBM8+eXHYJSgLm+xenTJidhKrlebv8qdyY5wBCg/A9xLdW2atTLDkgp7BvJT5pTRLsXr4iT81paWyP3Zf6zSybclJIXR2Lr0+58YSp7NhUU5kiKDtCCylAy+V6QISwc/NCehpHQuNd4K1rEzqC8/blY6a6z9CkBz5xvLL93+jWaiiVJKnC/BxPMJcjnln/KShB5iblMiIModurlc8azV+Qd2pQM6j+t51VBj1lyu8jEhk98rC7AQTfBLkt8a9LdJbGc5WikGd40gOjx6hCNQ5NP+emIv4GhR/I+H1c55EMye1Or5WVzFW4N0=", "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBBywJ/DVvY9+QIjSjMjvi7mw//NtALFqV9lqAOYpaWUs8wRHdpubS0xZIdlkCE8V8dazafGTy3Znb8u2tMAX4MU=", "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAINNAjcqxMc6xisWXtnsxwT9FFc1yCabQ6JIdRM5vaYoU", "ansible_cmdline": {"BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64", "root": "/dev/mapper/rhel_ansible2-root", "ro": true, "crashkernel": "auto", "resume": "/dev/mapper/rhel_ansible2-swap", "rd.lvm.lv": "rhel_ansible2/swap", "rhgb": true, "quiet": true}, "ansible_proc_cmdline": {"BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64", "root": "/dev/mapper/rhel_ansible2-root", "ro": true, "crashkernel": "auto", "resume": "/dev/mapper/rhel_ansible2-swap", "rd.lvm.lv": ["rhel_ansible2/root", "rhel_ansible2/swap"], "rhgb": true, "quiet": true}, "ansible_system_capabilities_enforced": "True", "ansible_system_capabilities": ["cap_chown", "cap_dac_override", "cap_dac_read_search", "cap_fowner", "cap_fsetid", "cap_kill", "cap_setgid", "cap_setuid", "cap_setpcap", "cap_linux_immutable", "cap_net_bind_service", "cap_net_broadcast", "cap_net_admin", "cap_net_raw", "cap_ipc_lock", "cap_ipc_owner", "cap_sys_module", "cap_sys_rawio", "cap_sys_chroot", "cap_sys_ptrace", "cap_sys_pacct", "cap_sys_admin", "cap_sys_boot", "cap_sys_nice", "cap_sys_resource", "cap_sys_time", "cap_sys_tty_config", "cap_mknod", "cap_lease", "cap_audit_write", "cap_audit_control", "cap_setfcap", "cap_mac_override", "cap_mac_admin", "cap_syslog", "cap_wake_alarm", "cap_block_suspend", "cap_audit_read+ep"], "ansible_system": "Linux", "ansible_kernel": "4.18.0-193.el8.x86_64", "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020", "ansible_machine": "x86_64", "ansible_python_version": "3.6.8", "ansible_fqdn": "ansible2.example.com", "ansible_hostname": "ansible2", "ansible_nodename": "ansible2.example.com", "ansible_domain": "example.com", "ansible_userspace_bits": "64", "ansible_architecture": "x86_64", "ansible_userspace_architecture": "x86_64", "ansible_machine_id": "8989a96f9dd545e5acb7b962262a17d0", "ansible_selinux_python_present": true, "ansible_selinux": {"status": "enabled", "policyvers": 31, "config_mode": "enforcing", "mode": "enforcing", "type": "targeted"}, "ansible_pkg_mgr": "dnf", "ansible_hostnqn": "", "ansible_apparmor": {"status": "disabled"}, "ansible_virtualization_role": "guest", "ansible_virtualization_type": "VMware", "ansible_is_chroot": false, "ansible_date_time": {"year": "2021", "month": "06", "weekday": "Monday", "weekday_number": "1", "weeknumber": "25", "day": "21", "hour": "12", "minute": "29", "second": "28", "epoch": "1624292968", "date": "2021-06-21", "time": "12:29:28", "iso8601_micro": "2021-06-21T16:29:28.817743Z", "iso8601": "2021-06-21T16:29:28Z", "iso8601_basic": "20210621T122928817743", "iso8601_basic_short": "20210621T122928", "tz": "EDT", "tz_offset": "-0400"}, "ansible_env": {"LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:", "LANG": "en_US.UTF-8", "SUDO_GID": "1000", "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-itonlcgxkbmajhclqravzlqxptcgmdbw ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1624292967.9654498-1137698-182568854012342/AnsiballZ_setup.py", "USER": "root", "PWD": "/home/ansible", "HOME": "/root", "SUDO_USER": "ansible", "SUDO_UID": "1000", "MAIL": "/var/mail/root", "SHELL": "/bin/bash", "TERM": "xterm", "SHLVL": "1", "LOGNAME": "root", "PATH": "/sbin:/bin:/usr/sbin:/usr/bin", "_": "/usr/libexec/platform-python"}, "ansible_dns": {"search": ["verizon.net", "example.com"], "nameservers": ["192.168.11.1", "8.8.8.8"]}, "ansible_local": {}, "ansible_fibre_channel_wwn": [], "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:95198d9ee5d", "ansible_processor": ["0", "GenuineIntel", "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"], "ansible_processor_count": 1, "ansible_processor_cores": 1, "ansible_processor_threads_per_core": 1, "ansible_processor_vcpus": 1, "ansible_memtotal_mb": 818, "ansible_memfree_mb": 106, "ansible_swaptotal_mb": 2047, "ansible_swapfree_mb": 2039, "ansible_memory_mb": {"real": {"total": 818, "used": 712, "free": 106}, "nocache": {"free": 499, "used": 319}, "swap": {"total": 2047, "free": 2039, "used": 8, "cached": 1}}, "ansible_bios_date": "06/25/2020", "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725", "ansible_form_factor": "Other", "ansible_product_name": "VMware7,1", "ansible_product_serial": "VMware-56 4d b9 d1 6b 8f 8f 1a-cd be 5b 7a 86 2f 91 45", "ansible_product_uuid": "d1b94d56-8f6b-1a8f-cdbe-5b7a862f9145", "ansible_product_version": "None", "ansible_system_vendor": "VMware, Inc.", "ansible_devices": {"dm-1": {"virtual": 1, "links": {"ids": ["dm-name-rhel_ansible2-swap", "dm-uuid-LVM-GUTU4WnOEBZz1klCoVTgZTnoejUlaRjhwiNnswC6D5XqV7PTsgr66qLwgoSlpBJD"], "uuids": ["c4c3e941-6d59-406c-90ce-5a9c7b3e5082"], "labels": [], "masters": []}, "vendor": null, "model": null, "sas_address": null, "sas_device_handle": null, "removable": "0", "support_discard": "4096", "partitions": {}, "rotational": "1", "scheduler_mode": "", "sectors": "4194304", "sectorsize": "512", "size": "2.00 GB", "host": "", "holders": []}, "sr0": {"virtual": 1, "links": {"ids": ["ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"], "uuids": ["2020-04-04-08-21-15-00"], "labels": ["RHEL-8-2-0-BaseOS-x86_64"], "masters": []}, "vendor": "NECVMWar", "model": "VMware SATA CD00", "sas_address": null, "sas_device_handle": null, "removable": "1", "support_discard": "0", "partitions": {}, "rotational": "1", "scheduler_mode": "mq-deadline", "sectors": "16478208", "sectorsize": "2048", "size": "7.86 GB", "host": "SATA controller: VMware SATA AHCI controller", "holders": []}, "dm-0": {"virtual": 1, "links": {"ids": ["dm-name-rhel_ansible2-root", "dm-uuid-LVM-GUTU4WnOEBZz1klCoVTgZTnoejUlaRjhgux91ENrrfFGoRjQehFwwBXOwt4zIkih"], "uuids": ["2f84d365-0d92-47a4-9f98-6e1c64152f97"], "labels": [], "masters": []}, "vendor": null, "model": null, "sas_address": null, "sas_device_handle": null, "removable": "0", "support_discard": "4096", "partitions": {}, "rotational": "1", "scheduler_mode": "", "sectors": "34414592", "sectorsize": "512", "size": "16.41 GB", "host": "", "holders": []}, "sda": {"virtual": 1, "links": {"ids": [], "uuids": [], "labels": [], "masters": []}, "vendor": "VMware", "model": "Virtual disk", "sas_address": null, "sas_device_handle": null, "removable": "0", "support_discard": "4096", "partitions": {"sda2": {"links": {"ids": [], "uuids": ["58fded1f-2edd-4215-861b-040b6a68132f"], "labels": [], "masters": []}, "start": "1230848", "sectors": "2097152", "sectorsize": 512, "size": "1.00 GB", "uuid": "58fded1f-2edd-4215-861b-040b6a68132f", "holders": []}, "sda3": {"links": {"ids": ["lvm-pv-uuid-GNQ4Ju-gdUi-070Z-kGyn-BK33-KMmy-hhsfOk"], "uuids": [], "labels": [], "masters": ["dm-0", "dm-1"]}, "start": "3328000", "sectors": "38612992", "sectorsize": 512, "size": "18.41 GB", "uuid": null, "holders": ["rhel_ansible2-swap", "rhel_ansible2-root"]}, "sda1": {"links": {"ids": [], "uuids": ["BB08-D8B1"], "labels": [], "masters": []}, "start": "2048", "sectors": "1228800", "sectorsize": 512, "size": "600.00 MB", "uuid": "BB08-D8B1", "holders": []}}, "rotational": "1", "scheduler_mode": "mq-deadline", "sectors": "41943040", "sectorsize": "512", "size": "20.00 GB", "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)", "holders": []}}, "ansible_device_links": {"ids": {"dm-1": ["dm-name-rhel_ansible2-swap", "dm-uuid-LVM-GUTU4WnOEBZz1klCoVTgZTnoejUlaRjhwiNnswC6D5XqV7PTsgr66qLwgoSlpBJD"], "dm-0": ["dm-name-rhel_ansible2-root", "dm-uuid-LVM-GUTU4WnOEBZz1klCoVTgZTnoejUlaRjhgux91ENrrfFGoRjQehFwwBXOwt4zIkih"], "sr0": ["ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"], "sda3": ["lvm-pv-uuid-GNQ4Ju-gdUi-070Z-kGyn-BK33-KMmy-hhsfOk"]}, "uuids": {"sr0": ["2020-04-04-08-21-15-00"], "dm-1": ["c4c3e941-6d59-406c-90ce-5a9c7b3e5082"], "dm-0": ["2f84d365-0d92-47a4-9f98-6e1c64152f97"], "sda2": ["58fded1f-2edd-4215-861b-040b6a68132f"], "sda1": ["BB08-D8B1"]}, "labels": {"sr0": ["RHEL-8-2-0-BaseOS-x86_64"]}, "masters": {"sda3": ["dm-0", "dm-1"]}}, "ansible_uptime_seconds": 1979434, "ansible_lvm": {"lvs": {"root": {"size_g": "16.41", "vg": "rhel_ansible2"}, "swap": {"size_g": "2.00", "vg": "rhel_ansible2"}}, "vgs": {"rhel_ansible2": {"size_g": "18.41", "free_g": "0", "num_lvs": "2", "num_pvs": "1"}}, "pvs": {"/dev/sda3": {"size_g": "18.41", "free_g": "0", "vg": "rhel_ansible2"}}}, "ansible_mounts": [{"mount": "/", "device": "/dev/mapper/rhel_ansible2-root", "fstype": "xfs", "options": "rw,seclabel,relatime,attr2,inode64,noquota", "size_total": 17609785344, "size_available": 15404470272, "block_size": 4096, "block_total": 4299264, "block_available": 3760857, "block_used": 538407, "inode_total": 8603648, "inode_available": 8554053, "inode_used": 49595, "uuid": "2f84d365-0d92-47a4-9f98-6e1c64152f97"}, {"mount": "/boot", "device": "/dev/sda2", "fstype": "xfs", "options": "rw,seclabel,relatime,attr2,inode64,noquota", "size_total": 1063256064, "size_available": 878514176, "block_size": 4096, "block_total": 259584, "block_available": 214481, "block_used": 45103, "inode_total": 524288, "inode_available": 524270, "inode_used": 18, "uuid": "58fded1f-2edd-4215-861b-040b6a68132f"}, {"mount": "/boot/efi", "device": "/dev/sda1", "fstype": "vfat", "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro", "size_total": 627900416, "size_available": 620826624, "block_size": 4096, "block_total": 153296, "block_available": 151569, "block_used": 1727, "inode_total": 0, "inode_available": 0, "inode_used": 0, "uuid": "BB08-D8B1"}], "ansible_interfaces": ["ens192", "lo"], "ansible_lo": {"device": "lo", "mtu": 65536, "active": true, "type": "loopback", "promisc": false, "ipv4": {"address": "127.0.0.1", "broadcast": "", "netmask": "255.0.0.0", "network": "127.0.0.0"}, "ipv6": [{"address": "::1", "prefix": "128", "scope": "host"}], "features": {"rx_checksumming": "on [fixed]", "tx_checksumming": "on", "tx_checksum_ipv4": "off [fixed]", "tx_checksum_ip_generic": "on [fixed]", "tx_checksum_ipv6": "off [fixed]", "tx_checksum_fcoe_crc": "off [fixed]", "tx_checksum_sctp": "on [fixed]", "scatter_gather": "on", "tx_scatter_gather": "on [fixed]", "tx_scatter_gather_fraglist": "on [fixed]", "tcp_segmentation_offload": "on", "tx_tcp_segmentation": "on", "tx_tcp_ecn_segmentation": "on", "tx_tcp_mangleid_segmentation": "on", "tx_tcp6_segmentation": "on", "generic_segmentation_offload": "on", "generic_receive_offload": "on", "large_receive_offload": "off [fixed]", "rx_vlan_offload": "off [fixed]", "tx_vlan_offload": "off [fixed]", "ntuple_filters": "off [fixed]", "receive_hashing": "off [fixed]", "highdma": "on [fixed]", "rx_vlan_filter": "off [fixed]", "vlan_challenged": "on [fixed]", "tx_lockless": "on [fixed]", "netns_local": "on [fixed]", "tx_gso_robust": "off [fixed]", "tx_fcoe_segmentation": "off [fixed]", "tx_gre_segmentation": "off [fixed]", "tx_gre_csum_segmentation": "off [fixed]", "tx_ipxip4_segmentation": "off [fixed]", "tx_ipxip6_segmentation": "off [fixed]", "tx_udp_tnl_segmentation": "off [fixed]", "tx_udp_tnl_csum_segmentation": "off [fixed]", "tx_gso_partial": "off [fixed]", "tx_sctp_segmentation": "on", "tx_esp_segmentation": "off [fixed]", "tx_udp_segmentation": "off [fixed]", "tls_hw_rx_offload": "off [fixed]", "fcoe_mtu": "off [fixed]", "tx_nocache_copy": "off [fixed]", "loopback": "on [fixed]", "rx_fcs": "off [fixed]", "rx_all": "off [fixed]", "tx_vlan_stag_hw_insert": "off [fixed]", "rx_vlan_stag_hw_parse": "off [fixed]", "rx_vlan_stag_filter": "off [fixed]", "l2_fwd_offload": "off [fixed]", "hw_tc_offload": "off [fixed]", "esp_hw_offload": "off [fixed]", "esp_tx_csum_hw_offload": "off [fixed]", "rx_udp_tunnel_port_offload": "off [fixed]", "tls_hw_tx_offload": "off [fixed]", "rx_gro_hw": "off [fixed]", "tls_hw_record": "off [fixed]"}, "timestamping": ["tx_software", "rx_software", "software"], "hw_timestamp_filters": []}, "ansible_ens192": {"device": "ens192", "macaddress": "00:0c:29:2f:91:45", "mtu": 1500, "active": true, "module": "vmxnet3", "type": "ether", "pciid": "0000:0b:00.0", "speed": 10000, "promisc": false, "ipv4": {"address": "192.168.11.202", "broadcast": "192.168.11.255", "netmask": "255.255.255.0", "network": "192.168.11.0"}, "ipv6": [{"address": "fe80::8949:237:95b5:869f", "prefix": "64", "scope": "link"}], "features": {"rx_checksumming": "on", "tx_checksumming": "on", "tx_checksum_ipv4": "off [fixed]", "tx_checksum_ip_generic": "on", "tx_checksum_ipv6": "off [fixed]", "tx_checksum_fcoe_crc": "off [fixed]", "tx_checksum_sctp": "off [fixed]", "scatter_gather": "on", "tx_scatter_gather": "on", "tx_scatter_gather_fraglist": "off [fixed]", "tcp_segmentation_offload": "on", "tx_tcp_segmentation": "on", "tx_tcp_ecn_segmentation": "off [fixed]", "tx_tcp_mangleid_segmentation": "off", "tx_tcp6_segmentation": "on", "generic_segmentation_offload": "on", "generic_receive_offload": "on", "large_receive_offload": "on", "rx_vlan_offload": "on", "tx_vlan_offload": "on", "ntuple_filters": "off [fixed]", "receive_hashing": "off [fixed]", "highdma": "on", "rx_vlan_filter": "on [fixed]", "vlan_challenged": "off [fixed]", "tx_lockless": "off [fixed]", "netns_local": "off [fixed]", "tx_gso_robust": "off [fixed]", "tx_fcoe_segmentation": "off [fixed]", "tx_gre_segmentation": "off [fixed]", "tx_gre_csum_segmentation": "off [fixed]", "tx_ipxip4_segmentation": "off [fixed]", "tx_ipxip6_segmentation": "off [fixed]", "tx_udp_tnl_segmentation": "off [fixed]", "tx_udp_tnl_csum_segmentation": "off [fixed]", "tx_gso_partial": "off [fixed]", "tx_sctp_segmentation": "off [fixed]", "tx_esp_segmentation": "off [fixed]", "tx_udp_segmentation": "off [fixed]", "tls_hw_rx_offload": "off [fixed]", "fcoe_mtu": "off [fixed]", "tx_nocache_copy": "off", "loopback": "off [fixed]", "rx_fcs": "off [fixed]", "rx_all": "off [fixed]", "tx_vlan_stag_hw_insert": "off [fixed]", "rx_vlan_stag_hw_parse": "off [fixed]", "rx_vlan_stag_filter": "off [fixed]", "l2_fwd_offload": "off [fixed]", "hw_tc_offload": "off [fixed]", "esp_hw_offload": "off [fixed]", "esp_tx_csum_hw_offload": "off [fixed]", "rx_udp_tunnel_port_offload": "off [fixed]", "tls_hw_tx_offload": "off [fixed]", "rx_gro_hw": "off [fixed]", "tls_hw_record": "off [fixed]"}, "timestamping": ["rx_software", "software"], "hw_timestamp_filters": []}, "ansible_default_ipv4": {"gateway": "192.168.11.1", "interface": "ens192", "address": "192.168.11.202", "broadcast": "192.168.11.255", "netmask": "255.255.255.0", "network": "192.168.11.0", "macaddress": "00:0c:29:2f:91:45", "mtu": 1500, "type": "ether", "alias": "ens192"}, "ansible_default_ipv6": {}, "ansible_all_ipv4_addresses": ["192.168.11.202"], "ansible_all_ipv6_addresses": ["fe80::8949:237:95b5:869f"], "ansible_service_mgr": "systemd", "gather_subset": ["all"], "module_setup": true}, "invocation": {"module_args": {"gather_subset": ["all"], "gather_timeout": 10, "filter": "*", "fact_path": "/etc/ansible/facts.d"}}}\r\n', b'Shared connection to ansible2.example.com closed.\r\n')
2021-06-21 12:29:29,204 p=1137698 u=ansible n=ansible | <ansible2.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:29,205 p=1137698 u=ansible n=ansible | <ansible2.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/0e197ef17a ansible2.example.com '/bin/sh -c '"'"'rm -f -r /home/ansible/.ansible/tmp/ansible-tmp-1624292967.9654498-1137698-182568854012342/ > /dev/null 2>&1 && sleep 0'"'"''
2021-06-21 12:29:29,256 p=1137696 u=ansible n=ansible | <ansible1.example.com> (0, b'\r\n{"ansible_facts": {"ansible_selinux_python_present": true, "ansible_selinux": {"status": "enabled", "policyvers": 31, "config_mode": "enforcing", "mode": "enforcing", "type": "targeted"}, "ansible_system_capabilities_enforced": "True", "ansible_system_capabilities": ["cap_chown", "cap_dac_override", "cap_dac_read_search", "cap_fowner", "cap_fsetid", "cap_kill", "cap_setgid", "cap_setuid", "cap_setpcap", "cap_linux_immutable", "cap_net_bind_service", "cap_net_broadcast", "cap_net_admin", "cap_net_raw", "cap_ipc_lock", "cap_ipc_owner", "cap_sys_module", "cap_sys_rawio", "cap_sys_chroot", "cap_sys_ptrace", "cap_sys_pacct", "cap_sys_admin", "cap_sys_boot", "cap_sys_nice", "cap_sys_resource", "cap_sys_time", "cap_sys_tty_config", "cap_mknod", "cap_lease", "cap_audit_write", "cap_audit_control", "cap_setfcap", "cap_mac_override", "cap_mac_admin", "cap_syslog", "cap_wake_alarm", "cap_block_suspend", "cap_audit_read+ep"], "ansible_user_id": "root", "ansible_user_uid": 0, "ansible_user_gid": 0, "ansible_user_gecos": "root", "ansible_user_dir": "/root", "ansible_user_shell": "/bin/bash", "ansible_real_user_id": 0, "ansible_effective_user_id": 0, "ansible_real_group_id": 0, "ansible_effective_group_id": 0, "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQC8fcASOlyYRoK439WmRTcrzMaz5VdhX3lN9n2RZWwK6ZIxo8zC4nDhZEusSd9quVfOneUE61Q420+uYTejU9KZXjAesuims+Cnm9XEFj3BdY/JElEjkyiJBUNYY/DEV7nOAk7aMOmEa6CwJ7nMS/qPVcAAIVxcI7U+wmzJchKcOF9XmDqSqjYu00W+OLGKit8yfv1qlyP5HOQEDgbgYM81Kf5+TZHmQcuVe5rB4QdJ7vyNUnoRQUYWBLagnqNnAmPeVPR8tTJZtYONmkuBe/FWXJwxof98Pwcr/eMMVQy1tmdz+hpfsRNTV8r+KLfmoQqoNddXiqRNVdi4iB5P56FuKBmj1APflWbZEscDxANU5k4ctpGGSwkwfGtK1Od2qu7UWHf1AdXfbEFKoX5qeM3fTimvMCL7tA5EN5eQYNMX59eXIeU5WThxOeVqy9WzY7foY7xzPZEpZFkB+FiZ4yPpzG3PXijbXzMap/FmaDfL7xNH7frO3UMiVzYrpkl8sds=", "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBDAy45Ndd8lJP90E4ZhiOMyN33O1HH77T1xf3RwLCIVgCs3GFvL8vg/n0pVxdNcWmC6q9UOawL+i5izBcXZ3wHg=", "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAICkGwciWcbrNizntC965NPvp9rBcLwO6DbhR5trS+BmI", "ansible_date_time": {"year": "2021", "month": "06", "weekday": "Monday", "weekday_number": "1", "weeknumber": "25", "day": "21", "hour": "12", "minute": "29", "second": "28", "epoch": "1624292968", "date": "2021-06-21", "time": "12:29:28", "iso8601_micro": "2021-06-21T16:29:28.816964Z", "iso8601": "2021-06-21T16:29:28Z", "iso8601_basic": "20210621T122928816964", "iso8601_basic_short": "20210621T122928", "tz": "EDT", "tz_offset": "-0400"}, "ansible_is_chroot": false, "ansible_distribution": "RedHat", "ansible_distribution_release": "Ootpa", "ansible_distribution_version": "8.2", "ansible_distribution_major_version": "8", "ansible_distribution_file_path": "/etc/redhat-release", "ansible_distribution_file_variety": "RedHat", "ansible_distribution_file_parsed": true, "ansible_distribution_file_search_string": "Red Hat", "ansible_os_family": "RedHat", "ansible_python": {"version": {"major": 3, "minor": 6, "micro": 8, "releaselevel": "final", "serial": 0}, "version_info": [3, 6, 8, "final", 0], "executable": "/usr/libexec/platform-python", "has_sslcontext": true, "type": "cpython"}, "ansible_fips": false, "ansible_env": {"LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:", "LANG": "en_US.UTF-8", "SUDO_GID": "1000", "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-xiblthoplodwedeanbowiweskbqvelkc ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1624292968.0059233-1137696-123832029009511/AnsiballZ_setup.py", "USER": "root", "PWD": "/home/ansible", "HOME": "/root", "SUDO_USER": "ansible", "SUDO_UID": "1000", "MAIL": "/var/mail/root", "SHELL": "/bin/bash", "TERM": "xterm", "SHLVL": "1", "LOGNAME": "root", "PATH": "/sbin:/bin:/usr/sbin:/usr/bin", "_": "/usr/libexec/platform-python"}, "ansible_system": "Linux", "ansible_kernel": "4.18.0-193.el8.x86_64", "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020", "ansible_machine": "x86_64", "ansible_python_version": "3.6.8", "ansible_fqdn": "ansible1.example.com", "ansible_hostname": "ansible1", "ansible_nodename": "ansible1.example.com", "ansible_domain": "example.com", "ansible_userspace_bits": "64", "ansible_architecture": "x86_64", "ansible_userspace_architecture": "x86_64", "ansible_machine_id": "732ca008a570426bb2c7b7a58cdd158f", "ansible_hostnqn": "", "ansible_cmdline": {"BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64", "root": "/dev/mapper/rhel-root", "ro": true, "crashkernel": "auto", "resume": "/dev/mapper/rhel-swap", "rd.lvm.lv": "rhel/swap", "rhgb": true, "quiet": true}, "ansible_proc_cmdline": {"BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64", "root": "/dev/mapper/rhel-root", "ro": true, "crashkernel": "auto", "resume": "/dev/mapper/rhel-swap", "rd.lvm.lv": ["rhel/root", "rhel/swap"], "rhgb": true, "quiet": true}, "ansible_processor": ["0", "GenuineIntel", "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"], "ansible_processor_count": 1, "ansible_processor_cores": 1, "ansible_processor_threads_per_core": 1, "ansible_processor_vcpus": 1, "ansible_memtotal_mb": 818, "ansible_memfree_mb": 189, "ansible_swaptotal_mb": 2047, "ansible_swapfree_mb": 2047, "ansible_memory_mb": {"real": {"total": 818, "used": 629, "free": 189}, "nocache": {"free": 509, "used": 309}, "swap": {"total": 2047, "free": 2047, "used": 0, "cached": 0}}, "ansible_bios_date": "06/25/2020", "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725", "ansible_form_factor": "Other", "ansible_product_name": "VMware7,1", "ansible_product_serial": "VMware-56 4d 91 64 1a 27 2d 83-11 fd ea d8 b2 f8 f6 8d", "ansible_product_uuid": "64914d56-271a-832d-11fd-ead8b2f8f68d", "ansible_product_version": "None", "ansible_system_vendor": "VMware, Inc.", "ansible_devices": {"dm-1": {"virtual": 1, "links": {"ids": ["dm-name-rhel-swap", "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpozc6wq2QoQB31bJmdCZwZm8sBNGT9rNl"], "uuids": ["488a8798-7ff3-4920-a592-27d9f346d6fc"], "labels": [], "masters": []}, "vendor": null, "model": null, "sas_address": null, "sas_device_handle": null, "removable": "0", "support_discard": "4096", "partitions": {}, "rotational": "1", "scheduler_mode": "", "sectors": "4194304", "sectorsize": "512", "size": "2.00 GB", "host": "", "holders": []}, "sdb": {"virtual": 1, "links": {"ids": [], "uuids": [], "labels": [], "masters": []}, "vendor": "VMware", "model": "Virtual disk", "sas_address": null, "sas_device_handle": null, "removable": "0", "support_discard": "4096", "partitions": {"sdb1": {"links": {"ids": ["lvm-pv-uuid-eCduqz-PlQs-uKMN-EVJI-gnyI-aKiC-7WmXm6"], "uuids": [], "labels": [], "masters": []}, "start": "2048", "sectors": "2095104", "sectorsize": 512, "size": "1023.00 MB", "uuid": null, "holders": []}}, "rotational": "1", "scheduler_mode": "mq-deadline", "sectors": "10485760", "sectorsize": "512", "size": "5.00 GB", "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)", "holders": []}, "sr0": {"virtual": 1, "links": {"ids": ["ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"], "uuids": ["2020-04-04-08-21-15-00"], "labels": ["RHEL-8-2-0-BaseOS-x86_64"], "masters": []}, "vendor": "NECVMWar", "model": "VMware SATA CD00", "sas_address": null, "sas_device_handle": null, "removable": "1", "support_discard": "0", "partitions": {}, "rotational": "1", "scheduler_mode": "mq-deadline", "sectors": "16478208", "sectorsize": "2048", "size": "7.86 GB", "host": "SATA controller: VMware SATA AHCI controller", "holders": []}, "dm-0": {"virtual": 1, "links": {"ids": ["dm-name-rhel-root", "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpsvBGwKeGZC3oVBvJojlIMD4ebJIUCgaz"], "uuids": ["d3ea57c1-02ac-46f1-96d7-9c3d38b77db7"], "labels": [], "masters": []}, "vendor": null, "model": null, "sas_address": null, "sas_device_handle": null, "removable": "0", "support_discard": "4096", "partitions": {}, "rotational": "1", "scheduler_mode": "", "sectors": "34414592", "sectorsize": "512", "size": "16.41 GB", "host": "", "holders": []}, "sda": {"virtual": 1, "links": {"ids": [], "uuids": [], "labels": [], "masters": []}, "vendor": "VMware", "model": "Virtual disk", "sas_address": null, "sas_device_handle": null, "removable": "0", "support_discard": "4096", "partitions": {"sda2": {"links": {"ids": [], "uuids": ["8741d4bb-77bc-43d4-8a7b-c701932de6e8"], "labels": [], "masters": []}, "start": "1230848", "sectors": "2097152", "sectorsize": 512, "size": "1.00 GB", "uuid": "8741d4bb-77bc-43d4-8a7b-c701932de6e8", "holders": []}, "sda3": {"links": {"ids": ["lvm-pv-uuid-wn8uAC-AvMD-KDDW-CZE6-HOg3-Z6CL-wQ4vPF"], "uuids": [], "labels": [], "masters": ["dm-0", "dm-1"]}, "start": "3328000", "sectors": "38612992", "sectorsize": 512, "size": "18.41 GB", "uuid": null, "holders": ["rhel-swap", "rhel-root"]}, "sda1": {"links": {"ids": [], "uuids": ["6785-C5E7"], "labels": [], "masters": []}, "start": "2048", "sectors": "1228800", "sectorsize": 512, "size": "600.00 MB", "uuid": "6785-C5E7", "holders": []}}, "rotational": "1", "scheduler_mode": "mq-deadline", "sectors": "41943040", "sectorsize": "512", "size": "20.00 GB", "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)", "holders": []}}, "ansible_device_links": {"ids": {"sdb1": ["lvm-pv-uuid-eCduqz-PlQs-uKMN-EVJI-gnyI-aKiC-7WmXm6"], "dm-1": ["dm-name-rhel-swap", "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpozc6wq2QoQB31bJmdCZwZm8sBNGT9rNl"], "dm-0": ["dm-name-rhel-root", "dm-uuid-LVM-B9WCEO5H4Mu9OnxFTzyrV72V39xFI3hpsvBGwKeGZC3oVBvJojlIMD4ebJIUCgaz"], "sda3": ["lvm-pv-uuid-wn8uAC-AvMD-KDDW-CZE6-HOg3-Z6CL-wQ4vPF"], "sr0": ["ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"]}, "uuids": {"sr0": ["2020-04-04-08-21-15-00"], "dm-1": ["488a8798-7ff3-4920-a592-27d9f346d6fc"], "dm-0": ["d3ea57c1-02ac-46f1-96d7-9c3d38b77db7"], "sda2": ["8741d4bb-77bc-43d4-8a7b-c701932de6e8"], "sda1": ["6785-C5E7"]}, "labels": {"sr0": ["RHEL-8-2-0-BaseOS-x86_64"]}, "masters": {"sda3": ["dm-0", "dm-1"]}}, "ansible_uptime_seconds": 525651, "ansible_lvm": {"lvs": {"root": {"size_g": "16.41", "vg": "rhel"}, "swap": {"size_g": "2.00", "vg": "rhel"}}, "vgs": {"rhel": {"size_g": "18.41", "free_g": "0", "num_lvs": "2", "num_pvs": "1"}, "vgdata": {"size_g": "0.97", "free_g": "0.97", "num_lvs": "0", "num_pvs": "1"}}, "pvs": {"/dev/sda3": {"size_g": "18.41", "free_g": "0", "vg": "rhel"}, "/dev/sdb1": {"size_g": "0.97", "free_g": "0.97", "vg": "vgdata"}}}, "ansible_mounts": [{"mount": "/", "device": "/dev/mapper/rhel-root", "fstype": "xfs", "options": "rw,seclabel,relatime,attr2,inode64,noquota", "size_total": 17609785344, "size_available": 15575736320, "block_size": 4096, "block_total": 4299264, "block_available": 3802670, "block_used": 496594, "inode_total": 8603648, "inode_available": 8555139, "inode_used": 48509, "uuid": "d3ea57c1-02ac-46f1-96d7-9c3d38b77db7"}, {"mount": "/boot", "device": "/dev/sda2", "fstype": "xfs", "options": "rw,seclabel,relatime,attr2,inode64,noquota", "size_total": 1063256064, "size_available": 878514176, "block_size": 4096, "block_total": 259584, "block_available": 214481, "block_used": 45103, "inode_total": 524288, "inode_available": 524270, "inode_used": 18, "uuid": "8741d4bb-77bc-43d4-8a7b-c701932de6e8"}, {"mount": "/boot/efi", "device": "/dev/sda1", "fstype": "vfat", "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro", "size_total": 627900416, "size_available": 620826624, "block_size": 4096, "block_total": 153296, "block_available": 151569, "block_used": 1727, "inode_total": 0, "inode_available": 0, "inode_used": 0, "uuid": "6785-C5E7"}], "ansible_fibre_channel_wwn": [], "ansible_apparmor": {"status": "disabled"}, "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:53cc3821382", "ansible_interfaces": ["ens192", "lo"], "ansible_lo": {"device": "lo", "mtu": 65536, "active": true, "type": "loopback", "promisc": false, "ipv4": {"address": "127.0.0.1", "broadcast": "", "netmask": "255.0.0.0", "network": "127.0.0.0"}, "ipv6": [{"address": "::1", "prefix": "128", "scope": "host"}], "features": {"rx_checksumming": "on [fixed]", "tx_checksumming": "on", "tx_checksum_ipv4": "off [fixed]", "tx_checksum_ip_generic": "on [fixed]", "tx_checksum_ipv6": "off [fixed]", "tx_checksum_fcoe_crc": "off [fixed]", "tx_checksum_sctp": "on [fixed]", "scatter_gather": "on", "tx_scatter_gather": "on [fixed]", "tx_scatter_gather_fraglist": "on [fixed]", "tcp_segmentation_offload": "on", "tx_tcp_segmentation": "on", "tx_tcp_ecn_segmentation": "on", "tx_tcp_mangleid_segmentation": "on", "tx_tcp6_segmentation": "on", "generic_segmentation_offload": "on", "generic_receive_offload": "on", "large_receive_offload": "off [fixed]", "rx_vlan_offload": "off [fixed]", "tx_vlan_offload": "off [fixed]", "ntuple_filters": "off [fixed]", "receive_hashing": "off [fixed]", "highdma": "on [fixed]", "rx_vlan_filter": "off [fixed]", "vlan_challenged": "on [fixed]", "tx_lockless": "on [fixed]", "netns_local": "on [fixed]", "tx_gso_robust": "off [fixed]", "tx_fcoe_segmentation": "off [fixed]", "tx_gre_segmentation": "off [fixed]", "tx_gre_csum_segmentation": "off [fixed]", "tx_ipxip4_segmentation": "off [fixed]", "tx_ipxip6_segmentation": "off [fixed]", "tx_udp_tnl_segmentation": "off [fixed]", "tx_udp_tnl_csum_segmentation": "off [fixed]", "tx_gso_partial": "off [fixed]", "tx_sctp_segmentation": "on", "tx_esp_segmentation": "off [fixed]", "tx_udp_segmentation": "off [fixed]", "tls_hw_rx_offload": "off [fixed]", "fcoe_mtu": "off [fixed]", "tx_nocache_copy": "off [fixed]", "loopback": "on [fixed]", "rx_fcs": "off [fixed]", "rx_all": "off [fixed]", "tx_vlan_stag_hw_insert": "off [fixed]", "rx_vlan_stag_hw_parse": "off [fixed]", "rx_vlan_stag_filter": "off [fixed]", "l2_fwd_offload": "off [fixed]", "hw_tc_offload": "off [fixed]", "esp_hw_offload": "off [fixed]", "esp_tx_csum_hw_offload": "off [fixed]", "rx_udp_tunnel_port_offload": "off [fixed]", "tls_hw_tx_offload": "off [fixed]", "rx_gro_hw": "off [fixed]", "tls_hw_record": "off [fixed]"}, "timestamping": ["tx_software", "rx_software", "software"], "hw_timestamp_filters": []}, "ansible_ens192": {"device": "ens192", "macaddress": "00:0c:29:f8:f6:8d", "mtu": 1500, "active": true, "module": "vmxnet3", "type": "ether", "pciid": "0000:0b:00.0", "speed": 10000, "promisc": false, "ipv4": {"address": "192.168.11.201", "broadcast": "192.168.11.255", "netmask": "255.255.255.0", "network": "192.168.11.0"}, "ipv6": [{"address": "fe80::b521:5a71:965c:a783", "prefix": "64", "scope": "link"}], "features": {"rx_checksumming": "on", "tx_checksumming": "on", "tx_checksum_ipv4": "off [fixed]", "tx_checksum_ip_generic": "on", "tx_checksum_ipv6": "off [fixed]", "tx_checksum_fcoe_crc": "off [fixed]", "tx_checksum_sctp": "off [fixed]", "scatter_gather": "on", "tx_scatter_gather": "on", "tx_scatter_gather_fraglist": "off [fixed]", "tcp_segmentation_offload": "on", "tx_tcp_segmentation": "on", "tx_tcp_ecn_segmentation": "off [fixed]", "tx_tcp_mangleid_segmentation": "off", "tx_tcp6_segmentation": "on", "generic_segmentation_offload": "on", "generic_receive_offload": "on", "large_receive_offload": "on", "rx_vlan_offload": "on", "tx_vlan_offload": "on", "ntuple_filters": "off [fixed]", "receive_hashing": "off [fixed]", "highdma": "on", "rx_vlan_filter": "on [fixed]", "vlan_challenged": "off [fixed]", "tx_lockless": "off [fixed]", "netns_local": "off [fixed]", "tx_gso_robust": "off [fixed]", "tx_fcoe_segmentation": "off [fixed]", "tx_gre_segmentation": "off [fixed]", "tx_gre_csum_segmentation": "off [fixed]", "tx_ipxip4_segmentation": "off [fixed]", "tx_ipxip6_segmentation": "off [fixed]", "tx_udp_tnl_segmentation": "off [fixed]", "tx_udp_tnl_csum_segmentation": "off [fixed]", "tx_gso_partial": "off [fixed]", "tx_sctp_segmentation": "off [fixed]", "tx_esp_segmentation": "off [fixed]", "tx_udp_segmentation": "off [fixed]", "tls_hw_rx_offload": "off [fixed]", "fcoe_mtu": "off [fixed]", "tx_nocache_copy": "off", "loopback": "off [fixed]", "rx_fcs": "off [fixed]", "rx_all": "off [fixed]", "tx_vlan_stag_hw_insert": "off [fixed]", "rx_vlan_stag_hw_parse": "off [fixed]", "rx_vlan_stag_filter": "off [fixed]", "l2_fwd_offload": "off [fixed]", "hw_tc_offload": "off [fixed]", "esp_hw_offload": "off [fixed]", "esp_tx_csum_hw_offload": "off [fixed]", "rx_udp_tunnel_port_offload": "off [fixed]", "tls_hw_tx_offload": "off [fixed]", "rx_gro_hw": "off [fixed]", "tls_hw_record": "off [fixed]"}, "timestamping": ["rx_software", "software"], "hw_timestamp_filters": []}, "ansible_default_ipv4": {"gateway": "192.168.11.1", "interface": "ens192", "address": "192.168.11.201", "broadcast": "192.168.11.255", "netmask": "255.255.255.0", "network": "192.168.11.0", "macaddress": "00:0c:29:f8:f6:8d", "mtu": 1500, "type": "ether", "alias": "ens192"}, "ansible_default_ipv6": {}, "ansible_all_ipv4_addresses": ["192.168.11.201"], "ansible_all_ipv6_addresses": ["fe80::b521:5a71:965c:a783"], "ansible_lsb": {}, "ansible_virtualization_role": "guest", "ansible_virtualization_type": "VMware", "ansible_local": {}, "ansible_dns": {"search": ["verizon.net", "example.com"], "nameservers": ["192.168.11.1", "8.8.8.8"]}, "ansible_service_mgr": "systemd", "ansible_pkg_mgr": "dnf", "gather_subset": ["all"], "module_setup": true}, "invocation": {"module_args": {"gather_subset": ["all"], "gather_timeout": 10, "filter": "*", "fact_path": "/etc/ansible/facts.d"}}}\r\n', b'Shared connection to ansible1.example.com closed.\r\n')
2021-06-21 12:29:29,256 p=1137698 u=ansible n=ansible | <ansible2.example.com> (0, b'', b'')
2021-06-21 12:29:29,261 p=1137696 u=ansible n=ansible | <ansible1.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:29,262 p=1137696 u=ansible n=ansible | <ansible1.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/0f2d199c40 ansible1.example.com '/bin/sh -c '"'"'rm -f -r /home/ansible/.ansible/tmp/ansible-tmp-1624292968.0059233-1137696-123832029009511/ > /dev/null 2>&1 && sleep 0'"'"''
2021-06-21 12:29:29,267 p=1137699 u=ansible n=ansible | <ansible3.example.com> (0, b'', b'')
2021-06-21 12:29:29,285 p=1137700 u=ansible n=ansible | <ansible4.example.com> (0, b'\r\n{"ansible_facts": {"ansible_user_id": "root", "ansible_user_uid": 0, "ansible_user_gid": 0, "ansible_user_gecos": "root", "ansible_user_dir": "/root", "ansible_user_shell": "/bin/bash", "ansible_real_user_id": 0, "ansible_effective_user_id": 0, "ansible_real_group_id": 0, "ansible_effective_group_id": 0, "ansible_dns": {"search": ["verizon.net", "example.com"], "nameservers": ["192.168.11.1", "8.8.8.8"]}, "ansible_system": "Linux", "ansible_kernel": "4.18.0-193.el8.x86_64", "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020", "ansible_machine": "x86_64", "ansible_python_version": "3.6.8", "ansible_fqdn": "ansible4.example.com", "ansible_hostname": "ansible4", "ansible_nodename": "ansible4.example.com", "ansible_domain": "example.com", "ansible_userspace_bits": "64", "ansible_architecture": "x86_64", "ansible_userspace_architecture": "x86_64", "ansible_machine_id": "5d25efe380b94084b01c24c08cae60a8", "ansible_apparmor": {"status": "disabled"}, "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQDpL9GGKYdeLVCM6UopOEwEO04OAsR58deV7m3rieJ2W38DIWwH2SHiGoYrEjELzHkoQQZz9A/Vxr3qJFDGoc4m/MQN/mPQsabrcjFhyDkOf6RTB+/j0S0lWgZJzAg6eSiYGoNabLUv47fWV4B7qct35ZE1ExChyDSn+/8kJ8LMkfvmF9EoqxvZQfeAyCafmWHdf9UZO83M4hF5oONeEUg6v8EtIWL9Bgtzd/TPwNCpc/axyn7dp8/MRejvZsMQmpVRW2lZ7Xbqn4m5FB7rcHeycFTyQ+nW/lCq+TGNAKb4ZjTSsYO1LEYRkj5mqrZ5KQKnRBl7qzXjTcYscWHKYzvyl9iqdkEsza6OTilxKLLxhuOAPI0XAKr79lYep6YTzkcwP4z/3URyjzGX2AhWRZDZ6jpqkpZFXh208M/LhSQa5lYPJIdz/dEp2wGmwbFKghYnvkERJNiYmIwbm5GgVpwCqvz61NaEEiFwrBd2gN0Vnhs5E0YFdx2DPd17Wqwq0Ns=", "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBDhEL10Bz9lxOfMHT0ERWZlbYtxfOp7GLbDpCrJ5/WPI3K59zi1Oitl6Bnrujj/uYBXlBJNGBYX5lJ4OHXd3Ly0=", "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIOOqKaMguZ6Ma9f9oaV79ysQpEIWThSMisgRAJuHk9mr", "ansible_system_capabilities_enforced": "True", "ansible_system_capabilities": ["cap_chown", "cap_dac_override", "cap_dac_read_search", "cap_fowner", "cap_fsetid", "cap_kill", "cap_setgid", "cap_setuid", "cap_setpcap", "cap_linux_immutable", "cap_net_bind_service", "cap_net_broadcast", "cap_net_admin", "cap_net_raw", "cap_ipc_lock", "cap_ipc_owner", "cap_sys_module", "cap_sys_rawio", "cap_sys_chroot", "cap_sys_ptrace", "cap_sys_pacct", "cap_sys_admin", "cap_sys_boot", "cap_sys_nice", "cap_sys_resource", "cap_sys_time", "cap_sys_tty_config", "cap_mknod", "cap_lease", "cap_audit_write", "cap_audit_control", "cap_setfcap", "cap_mac_override", "cap_mac_admin", "cap_syslog", "cap_wake_alarm", "cap_block_suspend", "cap_audit_read+ep"], "ansible_is_chroot": false, "ansible_distribution": "RedHat", "ansible_distribution_release": "Ootpa", "ansible_distribution_version": "8.2", "ansible_distribution_major_version": "8", "ansible_distribution_file_path": "/etc/redhat-release", "ansible_distribution_file_variety": "RedHat", "ansible_distribution_file_parsed": true, "ansible_distribution_file_search_string": "Red Hat", "ansible_os_family": "RedHat", "ansible_fips": false, "ansible_python": {"version": {"major": 3, "minor": 6, "micro": 8, "releaselevel": "final", "serial": 0}, "version_info": [3, 6, 8, "final", 0], "executable": "/usr/libexec/platform-python", "has_sslcontext": true, "type": "cpython"}, "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:1ca1ff26a0", "ansible_lsb": {}, "ansible_interfaces": ["ens192", "lo"], "ansible_lo": {"device": "lo", "mtu": 65536, "active": true, "type": "loopback", "promisc": false, "ipv4": {"address": "127.0.0.1", "broadcast": "", "netmask": "255.0.0.0", "network": "127.0.0.0"}, "ipv6": [{"address": "::1", "prefix": "128", "scope": "host"}], "features": {"rx_checksumming": "on [fixed]", "tx_checksumming": "on", "tx_checksum_ipv4": "off [fixed]", "tx_checksum_ip_generic": "on [fixed]", "tx_checksum_ipv6": "off [fixed]", "tx_checksum_fcoe_crc": "off [fixed]", "tx_checksum_sctp": "on [fixed]", "scatter_gather": "on", "tx_scatter_gather": "on [fixed]", "tx_scatter_gather_fraglist": "on [fixed]", "tcp_segmentation_offload": "on", "tx_tcp_segmentation": "on", "tx_tcp_ecn_segmentation": "on", "tx_tcp_mangleid_segmentation": "on", "tx_tcp6_segmentation": "on", "generic_segmentation_offload": "on", "generic_receive_offload": "on", "large_receive_offload": "off [fixed]", "rx_vlan_offload": "off [fixed]", "tx_vlan_offload": "off [fixed]", "ntuple_filters": "off [fixed]", "receive_hashing": "off [fixed]", "highdma": "on [fixed]", "rx_vlan_filter": "off [fixed]", "vlan_challenged": "on [fixed]", "tx_lockless": "on [fixed]", "netns_local": "on [fixed]", "tx_gso_robust": "off [fixed]", "tx_fcoe_segmentation": "off [fixed]", "tx_gre_segmentation": "off [fixed]", "tx_gre_csum_segmentation": "off [fixed]", "tx_ipxip4_segmentation": "off [fixed]", "tx_ipxip6_segmentation": "off [fixed]", "tx_udp_tnl_segmentation": "off [fixed]", "tx_udp_tnl_csum_segmentation": "off [fixed]", "tx_gso_partial": "off [fixed]", "tx_sctp_segmentation": "on", "tx_esp_segmentation": "off [fixed]", "tx_udp_segmentation": "off [fixed]", "tls_hw_rx_offload": "off [fixed]", "fcoe_mtu": "off [fixed]", "tx_nocache_copy": "off [fixed]", "loopback": "on [fixed]", "rx_fcs": "off [fixed]", "rx_all": "off [fixed]", "tx_vlan_stag_hw_insert": "off [fixed]", "rx_vlan_stag_hw_parse": "off [fixed]", "rx_vlan_stag_filter": "off [fixed]", "l2_fwd_offload": "off [fixed]", "hw_tc_offload": "off [fixed]", "esp_hw_offload": "off [fixed]", "esp_tx_csum_hw_offload": "off [fixed]", "rx_udp_tunnel_port_offload": "off [fixed]", "tls_hw_tx_offload": "off [fixed]", "rx_gro_hw": "off [fixed]", "tls_hw_record": "off [fixed]"}, "timestamping": ["tx_software", "rx_software", "software"], "hw_timestamp_filters": []}, "ansible_ens192": {"device": "ens192", "macaddress": "00:0c:29:5d:9b:8e", "mtu": 1500, "active": true, "module": "vmxnet3", "type": "ether", "pciid": "0000:0b:00.0", "speed": 10000, "promisc": false, "ipv4": {"address": "192.168.11.204", "broadcast": "192.168.11.255", "netmask": "255.255.255.0", "network": "192.168.11.0"}, "ipv6": [{"address": "fe80::4ada:bfc9:6c2b:38d1", "prefix": "64", "scope": "link"}], "features": {"rx_checksumming": "on", "tx_checksumming": "on", "tx_checksum_ipv4": "off [fixed]", "tx_checksum_ip_generic": "on", "tx_checksum_ipv6": "off [fixed]", "tx_checksum_fcoe_crc": "off [fixed]", "tx_checksum_sctp": "off [fixed]", "scatter_gather": "on", "tx_scatter_gather": "on", "tx_scatter_gather_fraglist": "off [fixed]", "tcp_segmentation_offload": "on", "tx_tcp_segmentation": "on", "tx_tcp_ecn_segmentation": "off [fixed]", "tx_tcp_mangleid_segmentation": "off", "tx_tcp6_segmentation": "on", "generic_segmentation_offload": "on", "generic_receive_offload": "on", "large_receive_offload": "on", "rx_vlan_offload": "on", "tx_vlan_offload": "on", "ntuple_filters": "off [fixed]", "receive_hashing": "off [fixed]", "highdma": "on", "rx_vlan_filter": "on [fixed]", "vlan_challenged": "off [fixed]", "tx_lockless": "off [fixed]", "netns_local": "off [fixed]", "tx_gso_robust": "off [fixed]", "tx_fcoe_segmentation": "off [fixed]", "tx_gre_segmentation": "off [fixed]", "tx_gre_csum_segmentation": "off [fixed]", "tx_ipxip4_segmentation": "off [fixed]", "tx_ipxip6_segmentation": "off [fixed]", "tx_udp_tnl_segmentation": "off [fixed]", "tx_udp_tnl_csum_segmentation": "off [fixed]", "tx_gso_partial": "off [fixed]", "tx_sctp_segmentation": "off [fixed]", "tx_esp_segmentation": "off [fixed]", "tx_udp_segmentation": "off [fixed]", "tls_hw_rx_offload": "off [fixed]", "fcoe_mtu": "off [fixed]", "tx_nocache_copy": "off", "loopback": "off [fixed]", "rx_fcs": "off [fixed]", "rx_all": "off [fixed]", "tx_vlan_stag_hw_insert": "off [fixed]", "rx_vlan_stag_hw_parse": "off [fixed]", "rx_vlan_stag_filter": "off [fixed]", "l2_fwd_offload": "off [fixed]", "hw_tc_offload": "off [fixed]", "esp_hw_offload": "off [fixed]", "esp_tx_csum_hw_offload": "off [fixed]", "rx_udp_tunnel_port_offload": "off [fixed]", "tls_hw_tx_offload": "off [fixed]", "rx_gro_hw": "off [fixed]", "tls_hw_record": "off [fixed]"}, "timestamping": ["rx_software", "software"], "hw_timestamp_filters": []}, "ansible_default_ipv4": {"gateway": "192.168.11.1", "interface": "ens192", "address": "192.168.11.204", "broadcast": "192.168.11.255", "netmask": "255.255.255.0", "network": "192.168.11.0", "macaddress": "00:0c:29:5d:9b:8e", "mtu": 1500, "type": "ether", "alias": "ens192"}, "ansible_default_ipv6": {}, "ansible_all_ipv4_addresses": ["192.168.11.204"], "ansible_all_ipv6_addresses": ["fe80::4ada:bfc9:6c2b:38d1"], "ansible_processor": ["0", "GenuineIntel", "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"], "ansible_processor_count": 1, "ansible_processor_cores": 1, "ansible_processor_threads_per_core": 1, "ansible_processor_vcpus": 1, "ansible_memtotal_mb": 818, "ansible_memfree_mb": 90, "ansible_swaptotal_mb": 2047, "ansible_swapfree_mb": 2040, "ansible_memory_mb": {"real": {"total": 818, "used": 728, "free": 90}, "nocache": {"free": 514, "used": 304}, "swap": {"total": 2047, "free": 2040, "used": 7, "cached": 1}}, "ansible_bios_date": "06/25/2020", "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725", "ansible_form_factor": "Other", "ansible_product_name": "VMware7,1", "ansible_product_serial": "VMware-56 4d f3 fd 18 4b bc f8-ef 2d a2 a9 cc 5d 9b 8e", "ansible_product_uuid": "fdf34d56-4b18-f8bc-ef2d-a2a9cc5d9b8e", "ansible_product_version": "None", "ansible_system_vendor": "VMware, Inc.", "ansible_devices": {"dm-1": {"virtual": 1, "links": {"ids": ["dm-name-rhel-swap", "dm-uuid-LVM-94jQ6GeTRdOZzeRnWnft1ZntbEt9AV9Ywu58cxXZHSS0VFlmZl4A4XAtaeFGPVRW"], "uuids": ["d3f03fe6-24a5-4e9e-9d00-6ff5dbbb3fbf"], "labels": [], "masters": []}, "vendor": null, "model": null, "sas_address": null, "sas_device_handle": null, "removable": "0", "support_discard": "4096", "partitions": {}, "rotational": "1", "scheduler_mode": "", "sectors": "4194304", "sectorsize": "512", "size": "2.00 GB", "host": "", "holders": []}, "sr0": {"virtual": 1, "links": {"ids": ["ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"], "uuids": ["2020-04-04-08-21-15-00"], "labels": ["RHEL-8-2-0-BaseOS-x86_64"], "masters": []}, "vendor": "NECVMWar", "model": "VMware SATA CD00", "sas_address": null, "sas_device_handle": null, "removable": "1", "support_discard": "0", "partitions": {}, "rotational": "1", "scheduler_mode": "mq-deadline", "sectors": "16478208", "sectorsize": "2048", "size": "7.86 GB", "host": "SATA controller: VMware SATA AHCI controller", "holders": []}, "dm-0": {"virtual": 1, "links": {"ids": ["dm-name-rhel-root", "dm-uuid-LVM-94jQ6GeTRdOZzeRnWnft1ZntbEt9AV9YLg1fmntRIorXHsU0rgzYgs5UrCXAzQmL"], "uuids": ["65b95487-31f7-4759-92d2-f451b5cc0a84"], "labels": [], "masters": []}, "vendor": null, "model": null, "sas_address": null, "sas_device_handle": null, "removable": "0", "support_discard": "4096", "partitions": {}, "rotational": "1", "scheduler_mode": "", "sectors": "34414592", "sectorsize": "512", "size": "16.41 GB", "host": "", "holders": []}, "sda": {"virtual": 1, "links": {"ids": [], "uuids": [], "labels": [], "masters": []}, "vendor": "VMware", "model": "Virtual disk", "sas_address": null, "sas_device_handle": null, "removable": "0", "support_discard": "4096", "partitions": {"sda2": {"links": {"ids": [], "uuids": ["c26262be-4b3c-42c9-bdc2-6f58352e638c"], "labels": [], "masters": []}, "start": "1230848", "sectors": "2097152", "sectorsize": 512, "size": "1.00 GB", "uuid": "c26262be-4b3c-42c9-bdc2-6f58352e638c", "holders": []}, "sda3": {"links": {"ids": ["lvm-pv-uuid-Ygcalh-cof8-x03r-6pJM-k10k-2jjI-FSfVlk"], "uuids": [], "labels": [], "masters": ["dm-0", "dm-1"]}, "start": "3328000", "sectors": "38612992", "sectorsize": 512, "size": "18.41 GB", "uuid": null, "holders": ["rhel-swap", "rhel-root"]}, "sda1": {"links": {"ids": [], "uuids": ["C3FA-5086"], "labels": [], "masters": []}, "start": "2048", "sectors": "1228800", "sectorsize": 512, "size": "600.00 MB", "uuid": "C3FA-5086", "holders": []}}, "rotational": "1", "scheduler_mode": "mq-deadline", "sectors": "41943040", "sectorsize": "512", "size": "20.00 GB", "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)", "holders": []}}, "ansible_device_links": {"ids": {"dm-1": ["dm-name-rhel-swap", "dm-uuid-LVM-94jQ6GeTRdOZzeRnWnft1ZntbEt9AV9Ywu58cxXZHSS0VFlmZl4A4XAtaeFGPVRW"], "dm-0": ["dm-name-rhel-root", "dm-uuid-LVM-94jQ6GeTRdOZzeRnWnft1ZntbEt9AV9YLg1fmntRIorXHsU0rgzYgs5UrCXAzQmL"], "sda3": ["lvm-pv-uuid-Ygcalh-cof8-x03r-6pJM-k10k-2jjI-FSfVlk"], "sr0": ["ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"]}, "uuids": {"sr0": ["2020-04-04-08-21-15-00"], "dm-1": ["d3f03fe6-24a5-4e9e-9d00-6ff5dbbb3fbf"], "dm-0": ["65b95487-31f7-4759-92d2-f451b5cc0a84"], "sda2": ["c26262be-4b3c-42c9-bdc2-6f58352e638c"], "sda1": ["C3FA-5086"]}, "labels": {"sr0": ["RHEL-8-2-0-BaseOS-x86_64"]}, "masters": {"sda3": ["dm-0", "dm-1"]}}, "ansible_uptime_seconds": 1979431, "ansible_lvm": {"lvs": {"root": {"size_g": "16.41", "vg": "rhel"}, "swap": {"size_g": "2.00", "vg": "rhel"}}, "vgs": {"rhel": {"size_g": "18.41", "free_g": "0", "num_lvs": "2", "num_pvs": "1"}}, "pvs": {"/dev/sda3": {"size_g": "18.41", "free_g": "0", "vg": "rhel"}}}, "ansible_mounts": [{"mount": "/", "device": "/dev/mapper/rhel-root", "fstype": "xfs", "options": "rw,seclabel,relatime,attr2,inode64,noquota", "size_total": 17609785344, "size_available": 15414894592, "block_size": 4096, "block_total": 4299264, "block_available": 3763402, "block_used": 535862, "inode_total": 8603648, "inode_available": 8554284, "inode_used": 49364, "uuid": "65b95487-31f7-4759-92d2-f451b5cc0a84"}, {"mount": "/boot", "device": "/dev/sda2", "fstype": "xfs", "options": "rw,seclabel,relatime,attr2,inode64,noquota", "size_total": 1063256064, "size_available": 878514176, "block_size": 4096, "block_total": 259584, "block_available": 214481, "block_used": 45103, "inode_total": 524288, "inode_available": 524270, "inode_used": 18, "uuid": "c26262be-4b3c-42c9-bdc2-6f58352e638c"}, {"mount": "/boot/efi", "device": "/dev/sda1", "fstype": "vfat", "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro", "size_total": 627900416, "size_available": 620826624, "block_size": 4096, "block_total": 153296, "block_available": 151569, "block_used": 1727, "inode_total": 0, "inode_available": 0, "inode_used": 0, "uuid": "C3FA-5086"}], "ansible_fibre_channel_wwn": [], "ansible_service_mgr": "systemd", "ansible_env": {"LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:", "LANG": "en_US.UTF-8", "SUDO_GID": "1000", "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-rvamaixqiwppgathraeyxbateqmhfotl ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1624292968.023642-1137700-165914244380766/AnsiballZ_setup.py", "USER": "root", "PWD": "/home/ansible", "HOME": "/root", "SUDO_USER": "ansible", "SUDO_UID": "1000", "MAIL": "/var/mail/root", "SHELL": "/bin/bash", "TERM": "xterm", "SHLVL": "1", "LOGNAME": "root", "PATH": "/sbin:/bin:/usr/sbin:/usr/bin", "_": "/usr/libexec/platform-python"}, "ansible_date_time": {"year": "2021", "month": "06", "weekday": "Monday", "weekday_number": "1", "weeknumber": "25", "day": "21", "hour": "12", "minute": "29", "second": "29", "epoch": "1624292969", "date": "2021-06-21", "time": "12:29:29", "iso8601_micro": "2021-06-21T16:29:29.244360Z", "iso8601": "2021-06-21T16:29:29Z", "iso8601_basic": "20210621T122929244360", "iso8601_basic_short": "20210621T122929", "tz": "EDT", "tz_offset": "-0400"}, "ansible_hostnqn": "", "ansible_selinux_python_present": true, "ansible_selinux": {"status": "enabled", "policyvers": 31, "config_mode": "enforcing", "mode": "enforcing", "type": "targeted"}, "ansible_virtualization_role": "guest", "ansible_virtualization_type": "VMware", "ansible_local": {}, "ansible_cmdline": {"BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64", "root": "/dev/mapper/rhel-root", "ro": true, "crashkernel": "auto", "resume": "/dev/mapper/rhel-swap", "rd.lvm.lv": "rhel/swap", "rhgb": true, "quiet": true}, "ansible_proc_cmdline": {"BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64", "root": "/dev/mapper/rhel-root", "ro": true, "crashkernel": "auto", "resume": "/dev/mapper/rhel-swap", "rd.lvm.lv": ["rhel/root", "rhel/swap"], "rhgb": true, "quiet": true}, "ansible_pkg_mgr": "dnf", "gather_subset": ["all"], "module_setup": true}, "invocation": {"module_args": {"gather_subset": ["all"], "gather_timeout": 10, "filter": "*", "fact_path": "/etc/ansible/facts.d"}}}\r\n', b'Shared connection to ansible4.example.com closed.\r\n')
2021-06-21 12:29:29,291 p=1137700 u=ansible n=ansible | <ansible4.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:29,291 p=1137700 u=ansible n=ansible | <ansible4.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/d2544b2ce1 ansible4.example.com '/bin/sh -c '"'"'rm -f -r /home/ansible/.ansible/tmp/ansible-tmp-1624292968.023642-1137700-165914244380766/ > /dev/null 2>&1 && sleep 0'"'"''
2021-06-21 12:29:29,298 p=1137681 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 12:29:29,299 p=1137696 u=ansible n=ansible | <ansible1.example.com> (0, b'', b'')
2021-06-21 12:29:29,324 p=1137681 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 12:29:29,326 p=1137681 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 12:29:29,349 p=1137700 u=ansible n=ansible | <ansible4.example.com> (0, b'', b'')
2021-06-21 12:29:29,362 p=1137681 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 12:29:29,580 p=1137695 u=ansible n=ansible | <control.example.com> (0, b'\r\n{"ansible_facts": {"ansible_user_id": "root", "ansible_user_uid": 0, "ansible_user_gid": 0, "ansible_user_gecos": "root", "ansible_user_dir": "/root", "ansible_user_shell": "/bin/bash", "ansible_real_user_id": 0, "ansible_effective_user_id": 0, "ansible_real_group_id": 0, "ansible_effective_group_id": 0, "ansible_system": "Linux", "ansible_kernel": "4.18.0-193.el8.x86_64", "ansible_kernel_version": "#1 SMP Fri Mar 27 14:35:58 UTC 2020", "ansible_machine": "x86_64", "ansible_python_version": "3.6.8", "ansible_fqdn": "control.example.com", "ansible_hostname": "control", "ansible_nodename": "control.example.com", "ansible_domain": "example.com", "ansible_userspace_bits": "64", "ansible_architecture": "x86_64", "ansible_userspace_architecture": "x86_64", "ansible_machine_id": "36e2124a40614e3796fa06fcece0515e", "ansible_dns": {"search": ["verizon.net", "example.com"], "nameservers": ["192.168.11.1", "8.8.8.8"]}, "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQDTuLOzAeNf8ZQj8Qu64SLTprDRnagiihI/gUAzQX5NR8mkfVecF3591Hw0bY7d4OYL2GSa22Q97lWpSRMZzEe5kd0cIFTTg/coqMIK/VOKJvQarjnjj7rnrLnG8WJprf6kxITc7AuIWXTeD/vqgs/lBcdbD77PBXAShSj1dFD6qej4G7zOpo4OeQ0EWjbDQaRCqBWcTbaGEs2TpvIacfKSlWQ/tIvmcJQ2sVHqiGJ/AkRLMn4AHoKi5t7RKWT7HHhnc7ZDu686KGiplcSsiF/T37b6WneuS96tLNTUYbpT4Ot2zrYFYbo0YwRuzM1Jwpa/f3x0hoY7Lak/o3j6lDv5y9AhwhytPAKz8da2FLi2sna2Ve7913M9GMSiP41fRHnoLsqMy89IHDLm8vkJUjZxzRo7e4i4K5mXK/My7V5nGc3J8bJrmXCEzDDJfS42MuCmINcuz2MCjuvduwCrXroDHqrHMe306r1F9TQTeWlIJNSBwAuuC+FN8zVhlkJRiqc=", "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNhudUrTlfCgvAC31V1YPiPwqZKT7aFesPRbEGXj9B4esh+OI7dNbiUJPoteI+AqIZRzShz0BsfOtvfZux0v/dY=", "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIFC1LRLHGmTZfUEs+knXPYfQFkHnOTUCDib6l7DGR1F6", "ansible_cmdline": {"BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64", "root": "/dev/mapper/rhel-root", "ro": true, "crashkernel": "auto", "resume": "/dev/mapper/rhel-swap", "rd.lvm.lv": "rhel/swap", "rhgb": true, "quiet": true}, "ansible_proc_cmdline": {"BOOT_IMAGE": "(hd0,gpt2)/vmlinuz-4.18.0-193.el8.x86_64", "root": "/dev/mapper/rhel-root", "ro": true, "crashkernel": "auto", "resume": "/dev/mapper/rhel-swap", "rd.lvm.lv": ["rhel/root", "rhel/swap"], "rhgb": true, "quiet": true}, "ansible_system_capabilities_enforced": "True", "ansible_system_capabilities": ["cap_chown", "cap_dac_override", "cap_dac_read_search", "cap_fowner", "cap_fsetid", "cap_kill", "cap_setgid", "cap_setuid", "cap_setpcap", "cap_linux_immutable", "cap_net_bind_service", "cap_net_broadcast", "cap_net_admin", "cap_net_raw", "cap_ipc_lock", "cap_ipc_owner", "cap_sys_module", "cap_sys_rawio", "cap_sys_chroot", "cap_sys_ptrace", "cap_sys_pacct", "cap_sys_admin", "cap_sys_boot", "cap_sys_nice", "cap_sys_resource", "cap_sys_time", "cap_sys_tty_config", "cap_mknod", "cap_lease", "cap_audit_write", "cap_audit_control", "cap_setfcap", "cap_mac_override", "cap_mac_admin", "cap_syslog", "cap_wake_alarm", "cap_block_suspend", "cap_audit_read+ep"], "ansible_fips": false, "ansible_processor": ["0", "GenuineIntel", "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz", "1", "GenuineIntel", "Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz"], "ansible_processor_count": 2, "ansible_processor_cores": 1, "ansible_processor_threads_per_core": 1, "ansible_processor_vcpus": 2, "ansible_memtotal_mb": 1826, "ansible_memfree_mb": 812, "ansible_swaptotal_mb": 2047, "ansible_swapfree_mb": 2047, "ansible_memory_mb": {"real": {"total": 1826, "used": 1014, "free": 812}, "nocache": {"free": 1343, "used": 483}, "swap": {"total": 2047, "free": 2047, "used": 0, "cached": 0}}, "ansible_bios_date": "06/25/2020", "ansible_bios_version": "VMW71.00V.16460286.B64.2006250725", "ansible_form_factor": "Other", "ansible_product_name": "VMware7,1", "ansible_product_serial": "VMware-56 4d 94 78 3e 53 21 2f-3c a5 64 70 c9 72 63 77", "ansible_product_uuid": "78944d56-533e-2f21-3ca5-6470c9726377", "ansible_product_version": "None", "ansible_system_vendor": "VMware, Inc.", "ansible_devices": {"dm-1": {"virtual": 1, "links": {"ids": ["dm-name-rhel-swap", "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"], "uuids": ["521d3469-ac8d-490e-9c79-a6fd59024de4"], "labels": [], "masters": []}, "vendor": null, "model": null, "sas_address": null, "sas_device_handle": null, "removable": "0", "support_discard": "4096", "partitions": {}, "rotational": "0", "scheduler_mode": "", "sectors": "4194304", "sectorsize": "512", "size": "2.00 GB", "host": "", "holders": []}, "sr0": {"virtual": 1, "links": {"ids": ["ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"], "uuids": ["2020-04-04-08-21-15-00"], "labels": ["RHEL-8-2-0-BaseOS-x86_64"], "masters": []}, "vendor": "NECVMWar", "model": "VMware SATA CD00", "sas_address": null, "sas_device_handle": null, "removable": "1", "support_discard": "0", "partitions": {}, "rotational": "1", "scheduler_mode": "mq-deadline", "sectors": "16478208", "sectorsize": "2048", "size": "7.86 GB", "host": "SATA controller: VMware SATA AHCI controller", "holders": []}, "dm-0": {"virtual": 1, "links": {"ids": ["dm-name-rhel-root", "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"], "uuids": ["e582775b-f787-42fb-a7da-e66ffb7a210a"], "labels": [], "masters": []}, "vendor": null, "model": null, "sas_address": null, "sas_device_handle": null, "removable": "0", "support_discard": "4096", "partitions": {}, "rotational": "0", "scheduler_mode": "", "sectors": "34414592", "sectorsize": "512", "size": "16.41 GB", "host": "", "holders": []}, "sda": {"virtual": 1, "links": {"ids": [], "uuids": [], "labels": [], "masters": []}, "vendor": "VMware", "model": "Virtual disk", "sas_address": null, "sas_device_handle": null, "removable": "0", "support_discard": "4096", "partitions": {"sda2": {"links": {"ids": [], "uuids": ["1e4b2b4a-ea26-430e-978c-de3884071e82"], "labels": [], "masters": []}, "start": "1230848", "sectors": "2097152", "sectorsize": 512, "size": "1.00 GB", "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82", "holders": []}, "sda3": {"links": {"ids": ["lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"], "uuids": [], "labels": [], "masters": ["dm-0", "dm-1"]}, "start": "3328000", "sectors": "38612992", "sectorsize": 512, "size": "18.41 GB", "uuid": null, "holders": ["rhel-swap", "rhel-root"]}, "sda1": {"links": {"ids": [], "uuids": ["6723-A89C"], "labels": [], "masters": []}, "start": "2048", "sectors": "1228800", "sectorsize": 512, "size": "600.00 MB", "uuid": "6723-A89C", "holders": []}}, "rotational": "0", "scheduler_mode": "mq-deadline", "sectors": "41943040", "sectorsize": "512", "size": "20.00 GB", "host": "Serial Attached SCSI controller: VMware PVSCSI SCSI Controller (rev 02)", "holders": []}}, "ansible_device_links": {"ids": {"dm-1": ["dm-name-rhel-swap", "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vC91eKZZ81IaN1G4GAjXeJ75lXIch0ecxU"], "dm-0": ["dm-name-rhel-root", "dm-uuid-LVM-3fIbIMLMo0paKy3nwfWch7y2GHkdi6vCHbRKs4CAyN0hj9mHB3hwqvn84Zw2Yrv1"], "sr0": ["ata-VMware_Virtual_SATA_CDRW_Drive_00000000000000000001"], "sda3": ["lvm-pv-uuid-0F3PPq-hxl6-1Neo-8FW6-ad9Z-Ingq-aI0vD9"]}, "uuids": {"sr0": ["2020-04-04-08-21-15-00"], "dm-1": ["521d3469-ac8d-490e-9c79-a6fd59024de4"], "dm-0": ["e582775b-f787-42fb-a7da-e66ffb7a210a"], "sda1": ["6723-A89C"], "sda2": ["1e4b2b4a-ea26-430e-978c-de3884071e82"]}, "labels": {"sr0": ["RHEL-8-2-0-BaseOS-x86_64"]}, "masters": {"sda3": ["dm-0", "dm-1"]}}, "ansible_uptime_seconds": 1378968, "ansible_lvm": {"lvs": {"root": {"size_g": "16.41", "vg": "rhel"}, "swap": {"size_g": "2.00", "vg": "rhel"}}, "vgs": {"rhel": {"size_g": "18.41", "free_g": "0", "num_lvs": "2", "num_pvs": "1"}}, "pvs": {"/dev/sda3": {"size_g": "18.41", "free_g": "0", "vg": "rhel"}}}, "ansible_mounts": [{"mount": "/", "device": "/dev/mapper/rhel-root", "fstype": "xfs", "options": "rw,relatime,attr2,inode64,noquota", "size_total": 17609785344, "size_available": 15279235072, "block_size": 4096, "block_total": 4299264, "block_available": 3730282, "block_used": 568982, "inode_total": 8603648, "inode_available": 8542437, "inode_used": 61211, "uuid": "e582775b-f787-42fb-a7da-e66ffb7a210a"}, {"mount": "/boot", "device": "/dev/sda2", "fstype": "xfs", "options": "rw,relatime,attr2,inode64,noquota", "size_total": 1063256064, "size_available": 878514176, "block_size": 4096, "block_total": 259584, "block_available": 214481, "block_used": 45103, "inode_total": 524288, "inode_available": 524270, "inode_used": 18, "uuid": "1e4b2b4a-ea26-430e-978c-de3884071e82"}, {"mount": "/boot/efi", "device": "/dev/sda1", "fstype": "vfat", "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro", "size_total": 627900416, "size_available": 620826624, "block_size": 4096, "block_total": 153296, "block_available": 151569, "block_used": 1727, "inode_total": 0, "inode_available": 0, "inode_used": 0, "uuid": "6723-A89C"}, {"mount": "/var/ftp/repo", "device": "/dev/sr0", "fstype": "iso9660", "options": "ro,relatime,nojoliet,check=s,map=n,blocksize=2048", "size_total": 8436285440, "size_available": 0, "block_size": 2048, "block_total": 4119280, "block_available": 0, "block_used": 4119280, "inode_total": 0, "inode_available": 0, "inode_used": 0, "uuid": "2020-04-04-08-21-15-00"}], "ansible_distribution": "RedHat", "ansible_distribution_release": "Ootpa", "ansible_distribution_version": "8.2", "ansible_distribution_major_version": "8", "ansible_distribution_file_path": "/etc/redhat-release", "ansible_distribution_file_variety": "RedHat", "ansible_distribution_file_parsed": true, "ansible_distribution_file_search_string": "Red Hat", "ansible_os_family": "RedHat", "ansible_is_chroot": false, "ansible_env": {"LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:", "LANG": "C", "SUDO_GID": "1000", "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-bfjfklfoxgzvhbostuknvlnpfoefsxsd ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1624292967.8646195-1137695-61056256305346/AnsiballZ_setup.py", "USER": "root", "PWD": "/home/ansible", "HOME": "/root", "SUDO_USER": "ansible", "SUDO_UID": "1000", "MAIL": "/var/mail/root", "SHELL": "/bin/bash", "TERM": "xterm", "SHLVL": "1", "LOGNAME": "root", "PATH": "/sbin:/bin:/usr/sbin:/usr/bin", "_": "/usr/libexec/platform-python", "LC_ALL": "C", "LC_NUMERIC": "C"}, "ansible_virtualization_role": "guest", "ansible_virtualization_type": "VMware", "ansible_date_time": {"year": "2021", "month": "06", "weekday": "Monday", "weekday_number": "1", "weeknumber": "25", "day": "21", "hour": "12", "minute": "29", "second": "29", "epoch": "1624292969", "date": "2021-06-21", "time": "12:29:29", "iso8601_micro": "2021-06-21T16:29:29.530599Z", "iso8601": "2021-06-21T16:29:29Z", "iso8601_basic": "20210621T122929530599", "iso8601_basic_short": "20210621T122929", "tz": "EDT", "tz_offset": "-0400"}, "ansible_hostnqn": "", "ansible_iscsi_iqn": "iqn.1994-05.com.redhat:9a8e963cc88", "ansible_local": {}, "ansible_lsb": {}, "ansible_interfaces": ["lo", "ens192"], "ansible_ens192": {"device": "ens192", "macaddress": "00:0c:29:72:63:77", "mtu": 1500, "active": true, "module": "vmxnet3", "type": "ether", "pciid": "0000:0b:00.0", "speed": 10000, "promisc": false, "ipv4": {"address": "192.168.11.200", "broadcast": "192.168.11.255", "netmask": "255.255.255.0", "network": "192.168.11.0"}, "ipv6": [{"address": "fe80::d0eb:2348:63a1:cb77", "prefix": "64", "scope": "link"}], "features": {"rx_checksumming": "on", "tx_checksumming": "on", "tx_checksum_ipv4": "off [fixed]", "tx_checksum_ip_generic": "on", "tx_checksum_ipv6": "off [fixed]", "tx_checksum_fcoe_crc": "off [fixed]", "tx_checksum_sctp": "off [fixed]", "scatter_gather": "on", "tx_scatter_gather": "on", "tx_scatter_gather_fraglist": "off [fixed]", "tcp_segmentation_offload": "on", "tx_tcp_segmentation": "on", "tx_tcp_ecn_segmentation": "off [fixed]", "tx_tcp_mangleid_segmentation": "off", "tx_tcp6_segmentation": "on", "generic_segmentation_offload": "on", "generic_receive_offload": "on", "large_receive_offload": "on", "rx_vlan_offload": "on", "tx_vlan_offload": "on", "ntuple_filters": "off [fixed]", "receive_hashing": "on", "highdma": "on", "rx_vlan_filter": "on [fixed]", "vlan_challenged": "off [fixed]", "tx_lockless": "off [fixed]", "netns_local": "off [fixed]", "tx_gso_robust": "off [fixed]", "tx_fcoe_segmentation": "off [fixed]", "tx_gre_segmentation": "off [fixed]", "tx_gre_csum_segmentation": "off [fixed]", "tx_ipxip4_segmentation": "off [fixed]", "tx_ipxip6_segmentation": "off [fixed]", "tx_udp_tnl_segmentation": "off [fixed]", "tx_udp_tnl_csum_segmentation": "off [fixed]", "tx_gso_partial": "off [fixed]", "tx_sctp_segmentation": "off [fixed]", "tx_esp_segmentation": "off [fixed]", "tx_udp_segmentation": "off [fixed]", "tls_hw_rx_offload": "off [fixed]", "fcoe_mtu": "off [fixed]", "tx_nocache_copy": "off", "loopback": "off [fixed]", "rx_fcs": "off [fixed]", "rx_all": "off [fixed]", "tx_vlan_stag_hw_insert": "off [fixed]", "rx_vlan_stag_hw_parse": "off [fixed]", "rx_vlan_stag_filter": "off [fixed]", "l2_fwd_offload": "off [fixed]", "hw_tc_offload": "off [fixed]", "esp_hw_offload": "off [fixed]", "esp_tx_csum_hw_offload": "off [fixed]", "rx_udp_tunnel_port_offload": "off [fixed]", "tls_hw_tx_offload": "off [fixed]", "rx_gro_hw": "off [fixed]", "tls_hw_record": "off [fixed]"}, "timestamping": ["rx_software", "software"], "hw_timestamp_filters": []}, "ansible_lo": {"device": "lo", "mtu": 65536, "active": true, "type": "loopback", "promisc": false, "ipv4": {"address": "127.0.0.1", "broadcast": "", "netmask": "255.0.0.0", "network": "127.0.0.0"}, "ipv6": [{"address": "::1", "prefix": "128", "scope": "host"}], "features": {"rx_checksumming": "on [fixed]", "tx_checksumming": "on", "tx_checksum_ipv4": "off [fixed]", "tx_checksum_ip_generic": "on [fixed]", "tx_checksum_ipv6": "off [fixed]", "tx_checksum_fcoe_crc": "off [fixed]", "tx_checksum_sctp": "on [fixed]", "scatter_gather": "on", "tx_scatter_gather": "on [fixed]", "tx_scatter_gather_fraglist": "on [fixed]", "tcp_segmentation_offload": "on", "tx_tcp_segmentation": "on", "tx_tcp_ecn_segmentation": "on", "tx_tcp_mangleid_segmentation": "on", "tx_tcp6_segmentation": "on", "generic_segmentation_offload": "on", "generic_receive_offload": "on", "large_receive_offload": "off [fixed]", "rx_vlan_offload": "off [fixed]", "tx_vlan_offload": "off [fixed]", "ntuple_filters": "off [fixed]", "receive_hashing": "off [fixed]", "highdma": "on [fixed]", "rx_vlan_filter": "off [fixed]", "vlan_challenged": "on [fixed]", "tx_lockless": "on [fixed]", "netns_local": "on [fixed]", "tx_gso_robust": "off [fixed]", "tx_fcoe_segmentation": "off [fixed]", "tx_gre_segmentation": "off [fixed]", "tx_gre_csum_segmentation": "off [fixed]", "tx_ipxip4_segmentation": "off [fixed]", "tx_ipxip6_segmentation": "off [fixed]", "tx_udp_tnl_segmentation": "off [fixed]", "tx_udp_tnl_csum_segmentation": "off [fixed]", "tx_gso_partial": "off [fixed]", "tx_sctp_segmentation": "on", "tx_esp_segmentation": "off [fixed]", "tx_udp_segmentation": "off [fixed]", "tls_hw_rx_offload": "off [fixed]", "fcoe_mtu": "off [fixed]", "tx_nocache_copy": "off [fixed]", "loopback": "on [fixed]", "rx_fcs": "off [fixed]", "rx_all": "off [fixed]", "tx_vlan_stag_hw_insert": "off [fixed]", "rx_vlan_stag_hw_parse": "off [fixed]", "rx_vlan_stag_filter": "off [fixed]", "l2_fwd_offload": "off [fixed]", "hw_tc_offload": "off [fixed]", "esp_hw_offload": "off [fixed]", "esp_tx_csum_hw_offload": "off [fixed]", "rx_udp_tunnel_port_offload": "off [fixed]", "tls_hw_tx_offload": "off [fixed]", "rx_gro_hw": "off [fixed]", "tls_hw_record": "off [fixed]"}, "timestamping": ["tx_software", "rx_software", "software"], "hw_timestamp_filters": []}, "ansible_default_ipv4": {"gateway": "192.168.11.1", "interface": "ens192", "address": "192.168.11.200", "broadcast": "192.168.11.255", "netmask": "255.255.255.0", "network": "192.168.11.0", "macaddress": "00:0c:29:72:63:77", "mtu": 1500, "type": "ether", "alias": "ens192"}, "ansible_default_ipv6": {}, "ansible_all_ipv4_addresses": ["192.168.11.200"], "ansible_all_ipv6_addresses": ["fe80::d0eb:2348:63a1:cb77"], "ansible_apparmor": {"status": "disabled"}, "ansible_selinux_python_present": true, "ansible_selinux": {"status": "disabled"}, "ansible_python": {"version": {"major": 3, "minor": 6, "micro": 8, "releaselevel": "final", "serial": 0}, "version_info": [3, 6, 8, "final", 0], "executable": "/usr/libexec/platform-python", "has_sslcontext": true, "type": "cpython"}, "ansible_fibre_channel_wwn": [], "ansible_pkg_mgr": "dnf", "ansible_service_mgr": "systemd", "gather_subset": ["all"], "module_setup": true}, "invocation": {"module_args": {"gather_subset": ["all"], "gather_timeout": 10, "filter": "*", "fact_path": "/etc/ansible/facts.d"}}}\r\n', b'Shared connection to control.example.com closed.\r\n')
2021-06-21 12:29:29,585 p=1137695 u=ansible n=ansible | <control.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:29,585 p=1137695 u=ansible n=ansible | <control.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/f92cae2459 control.example.com '/bin/sh -c '"'"'rm -f -r /home/ansible/.ansible/tmp/ansible-tmp-1624292967.8646195-1137695-61056256305346/ > /dev/null 2>&1 && sleep 0'"'"''
2021-06-21 12:29:29,608 p=1137695 u=ansible n=ansible | <control.example.com> (0, b'', b'')
2021-06-21 12:29:29,622 p=1137681 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 12:29:29,622 p=1137681 u=ansible n=ansible | META: ran handlers
2021-06-21 12:29:29,629 p=1137681 u=ansible n=ansible | TASK [check for vgdata] *****************************************************************************************
2021-06-21 12:29:29,695 p=1137681 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {
    "changed": false,
    "msg": "vgdata does not exist"
}
2021-06-21 12:29:29,696 p=1137681 u=ansible n=ansible | skipping: [ansible1.example.com] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}
2021-06-21 12:29:29,724 p=1137681 u=ansible n=ansible | skipping: [ansible3.example.com] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}
2021-06-21 12:29:29,724 p=1137681 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {
    "changed": false,
    "msg": "vgdata does not exist"
}
2021-06-21 12:29:29,729 p=1137681 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {
    "changed": false,
    "msg": "vgdata does not exist"
}
2021-06-21 12:29:29,736 p=1137681 u=ansible n=ansible | TASK [check vgdata size] ****************************************************************************************
2021-06-21 12:29:29,765 p=1137681 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {
    "changed": false,
    "msg": "insufficient size"
}
2021-06-21 12:29:29,771 p=1137681 u=ansible n=ansible | skipping: [ansible3.example.com] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}
2021-06-21 12:29:29,778 p=1137681 u=ansible n=ansible | TASK [create lvm on vgdata 2GiB+] *******************************************************************************
2021-06-21 12:29:29,803 p=1137971 u=ansible n=ansible | <ansible3.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:29,804 p=1137971 u=ansible n=ansible | <ansible3.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/285c2485ef ansible3.example.com '/bin/sh -c '"'"'echo ~ansible && sleep 0'"'"''
2021-06-21 12:29:29,826 p=1137971 u=ansible n=ansible | <ansible3.example.com> (0, b'/home/ansible\n', b'')
2021-06-21 12:29:29,826 p=1137971 u=ansible n=ansible | <ansible3.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:29,827 p=1137971 u=ansible n=ansible | <ansible3.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/285c2485ef ansible3.example.com '/bin/sh -c '"'"'( umask 77 && mkdir -p "` echo /home/ansible/.ansible/tmp `"&& mkdir "` echo /home/ansible/.ansible/tmp/ansible-tmp-1624292969.8266993-1137971-154124225959283 `" && echo ansible-tmp-1624292969.8266993-1137971-154124225959283="` echo /home/ansible/.ansible/tmp/ansible-tmp-1624292969.8266993-1137971-154124225959283 `" ) && sleep 0'"'"''
2021-06-21 12:29:29,853 p=1137971 u=ansible n=ansible | <ansible3.example.com> (0, b'ansible-tmp-1624292969.8266993-1137971-154124225959283=/home/ansible/.ansible/tmp/ansible-tmp-1624292969.8266993-1137971-154124225959283\n', b'')
2021-06-21 12:29:29,914 p=1137971 u=ansible n=ansible | Using module file /usr/lib/python3.6/site-packages/ansible/modules/system/lvol.py
2021-06-21 12:29:29,914 p=1137971 u=ansible n=ansible | <ansible3.example.com> PUT /home/ansible/.ansible/tmp/ansible-local-1137681ttosmjuv/tmpgu1jk7qj TO /home/ansible/.ansible/tmp/ansible-tmp-1624292969.8266993-1137971-154124225959283/AnsiballZ_lvol.py
2021-06-21 12:29:29,915 p=1137971 u=ansible n=ansible | <ansible3.example.com> SSH: EXEC sftp -b - -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/285c2485ef '[ansible3.example.com]'
2021-06-21 12:29:29,946 p=1137971 u=ansible n=ansible | <ansible3.example.com> (0, b'sftp> put /home/ansible/.ansible/tmp/ansible-local-1137681ttosmjuv/tmpgu1jk7qj /home/ansible/.ansible/tmp/ansible-tmp-1624292969.8266993-1137971-154124225959283/AnsiballZ_lvol.py\n', b'')
2021-06-21 12:29:29,947 p=1137971 u=ansible n=ansible | <ansible3.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:29,948 p=1137971 u=ansible n=ansible | <ansible3.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/285c2485ef ansible3.example.com '/bin/sh -c '"'"'chmod u+x /home/ansible/.ansible/tmp/ansible-tmp-1624292969.8266993-1137971-154124225959283/ /home/ansible/.ansible/tmp/ansible-tmp-1624292969.8266993-1137971-154124225959283/AnsiballZ_lvol.py && sleep 0'"'"''
2021-06-21 12:29:29,976 p=1137971 u=ansible n=ansible | <ansible3.example.com> (0, b'', b'')
2021-06-21 12:29:29,977 p=1137971 u=ansible n=ansible | <ansible3.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:29,977 p=1137971 u=ansible n=ansible | <ansible3.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/285c2485ef -tt ansible3.example.com '/bin/sh -c '"'"'sudo -H -S -n  -u root /bin/sh -c '"'"'"'"'"'"'"'"'echo BECOME-SUCCESS-nxtstwwfcncvidwzllppvtmixxardptq ; /usr/libexec/platform-python /home/ansible/.ansible/tmp/ansible-tmp-1624292969.8266993-1137971-154124225959283/AnsiballZ_lvol.py'"'"'"'"'"'"'"'"' && sleep 0'"'"''
2021-06-21 12:29:30,021 p=1137971 u=ansible n=ansible | Escalation succeeded
2021-06-21 12:29:30,224 p=1137971 u=ansible n=ansible | <ansible3.example.com> (1, b'\r\n{"msg": "Sorry, no shrinking of lvdata without force=yes.", "failed": true, "invocation": {"module_args": {"vg": "vgdata", "lv": "lvdata", "size": "2000m", "state": "present", "force": false, "shrink": true, "active": true, "resizefs": false, "opts": null, "snapshot": null, "pvs": null, "thinpool": null}}}\r\n', b'Shared connection to ansible3.example.com closed.\r\n')
2021-06-21 12:29:30,225 p=1137971 u=ansible n=ansible | <ansible3.example.com> Failed to connect to the host via ssh: Shared connection to ansible3.example.com closed.
2021-06-21 12:29:30,225 p=1137971 u=ansible n=ansible | <ansible3.example.com> ESTABLISH SSH CONNECTION FOR USER: ansible
2021-06-21 12:29:30,226 p=1137971 u=ansible n=ansible | <ansible3.example.com> SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o Port=2022 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=10 -o ControlPath=/home/ansible/.ansible/cp/285c2485ef ansible3.example.com '/bin/sh -c '"'"'rm -f -r /home/ansible/.ansible/tmp/ansible-tmp-1624292969.8266993-1137971-154124225959283/ > /dev/null 2>&1 && sleep 0'"'"''
2021-06-21 12:29:30,249 p=1137971 u=ansible n=ansible | <ansible3.example.com> (0, b'', b'')
2021-06-21 12:29:30,253 p=1137681 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {
    "changed": false,
    "invocation": {
        "module_args": {
            "active": true,
            "force": false,
            "lv": "lvdata",
            "opts": null,
            "pvs": null,
            "resizefs": false,
            "shrink": true,
            "size": "2000m",
            "snapshot": null,
            "state": "present",
            "thinpool": null,
            "vg": "vgdata"
        }
    },
    "msg": "Sorry, no shrinking of lvdata without force=yes."
}
2021-06-21 12:29:30,254 p=1137681 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 12:29:30,254 p=1137681 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-21 12:29:30,255 p=1137681 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:29:30,255 p=1137681 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
2021-06-21 12:29:30,255 p=1137681 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:29:30,255 p=1137681 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:30:27,784 p=1138413 u=ansible n=ansible | PLAY [playbook that configures an LVM volume with the name lvdata in the vgdata volume group] *******************
2021-06-21 12:30:27,792 p=1138413 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 12:30:29,296 p=1138413 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 12:30:29,332 p=1138413 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 12:30:29,336 p=1138413 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 12:30:29,373 p=1138413 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 12:30:30,670 p=1138413 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 12:30:30,677 p=1138413 u=ansible n=ansible | TASK [check for vgdata] *****************************************************************************************
2021-06-21 12:30:30,755 p=1138413 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:30:30,755 p=1138413 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 12:30:30,757 p=1138413 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:30:30,769 p=1138413 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-21 12:30:30,776 p=1138413 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:30:30,783 p=1138413 u=ansible n=ansible | TASK [check vgdata size] ****************************************************************************************
2021-06-21 12:30:30,812 p=1138413 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "insufficient size"}
2021-06-21 12:30:30,819 p=1138413 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 12:30:30,826 p=1138413 u=ansible n=ansible | TASK [create lvm on vgdata 2GiB+] *******************************************************************************
2021-06-21 12:30:31,261 p=1138413 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "Sorry, no shrinking of lvdata without force=yes."}
2021-06-21 12:30:31,262 p=1138413 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 12:30:31,262 p=1138413 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-21 12:30:31,262 p=1138413 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:30:31,262 p=1138413 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
2021-06-21 12:30:31,262 p=1138413 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:30:31,262 p=1138413 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:30:58,568 p=1138886 u=ansible n=ansible | PLAY [playbook that configures an LVM volume with the name lvdata in the vgdata volume group] *******************
2021-06-21 12:30:58,575 p=1138886 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 12:31:00,080 p=1138886 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 12:31:00,134 p=1138886 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 12:31:00,171 p=1138886 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 12:31:00,176 p=1138886 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 12:31:00,483 p=1138886 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 12:31:00,490 p=1138886 u=ansible n=ansible | TASK [check for vgdata] *****************************************************************************************
2021-06-21 12:31:00,561 p=1138886 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:31:00,563 p=1138886 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:31:00,570 p=1138886 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-21 12:31:00,576 p=1138886 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 12:31:00,590 p=1138886 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:31:00,597 p=1138886 u=ansible n=ansible | TASK [check vgdata size] ****************************************************************************************
2021-06-21 12:31:00,630 p=1138886 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "insufficient size"}
2021-06-21 12:31:00,636 p=1138886 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 12:31:00,643 p=1138886 u=ansible n=ansible | TASK [create lvm on vgdata 2GiB+] *******************************************************************************
2021-06-21 12:31:01,117 p=1138886 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "Sorry, no shrinking of lvdata without force=yes."}
2021-06-21 12:31:01,119 p=1138886 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 12:31:01,119 p=1138886 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-21 12:31:01,119 p=1138886 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:31:01,119 p=1138886 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
2021-06-21 12:31:01,119 p=1138886 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:31:01,119 p=1138886 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:32:17,431 p=1139704 u=ansible n=ansible | PLAY [playbook that configures an LVM volume with the name lvdata in the vgdata volume group] *******************
2021-06-21 12:32:17,439 p=1139704 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 12:32:19,285 p=1139704 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 12:32:19,325 p=1139704 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 12:32:19,329 p=1139704 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 12:32:19,370 p=1139704 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 12:32:19,660 p=1139704 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 12:32:19,667 p=1139704 u=ansible n=ansible | TASK [check for vgdata] *****************************************************************************************
2021-06-21 12:32:19,734 p=1139704 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-21 12:32:19,736 p=1139704 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:32:19,736 p=1139704 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:32:19,759 p=1139704 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 12:32:19,761 p=1139704 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:32:19,768 p=1139704 u=ansible n=ansible | TASK [check vgdata size] ****************************************************************************************
2021-06-21 12:32:19,805 p=1139704 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "insufficient size"}
2021-06-21 12:32:19,810 p=1139704 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 12:32:19,817 p=1139704 u=ansible n=ansible | TASK [create lvm on vgdata 2GiB+] *******************************************************************************
2021-06-21 12:32:20,405 p=1139704 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-21 12:32:20,411 p=1139704 u=ansible n=ansible | TASK [set lvdata filesystem] ************************************************************************************
2021-06-21 12:32:21,645 p=1139704 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-21 12:32:21,652 p=1139704 u=ansible n=ansible | TASK [create /lvdata directory] *********************************************************************************
2021-06-21 12:32:22,061 p=1139704 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "Unsupported parameters for (file) module: type Supported parameters include: _diff_peek, _original_basename, access_time, access_time_format, attributes, backup, content, delimiter, directory_mode, follow, force, group, mode, modification_time, modification_time_format, owner, path, recurse, regexp, remote_src, selevel, serole, setype, seuser, src, state, unsafe_writes"}
2021-06-21 12:32:22,062 p=1139704 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 12:32:22,062 p=1139704 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-21 12:32:22,062 p=1139704 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:32:22,062 p=1139704 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=2    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
2021-06-21 12:32:22,063 p=1139704 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:32:22,063 p=1139704 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:33:54,316 p=1140702 u=ansible n=ansible | PLAY [playbook that configures an LVM volume with the name lvdata in the vgdata volume group] *******************
2021-06-21 12:33:54,323 p=1140702 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 12:33:56,124 p=1140702 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 12:33:56,126 p=1140702 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 12:33:56,165 p=1140702 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 12:33:56,281 p=1140702 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 12:33:57,462 p=1140702 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 12:33:57,469 p=1140702 u=ansible n=ansible | TASK [check for vgdata] *****************************************************************************************
2021-06-21 12:33:57,552 p=1140702 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:33:57,553 p=1140702 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-21 12:33:57,560 p=1140702 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 12:33:57,560 p=1140702 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:33:57,580 p=1140702 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 12:33:57,587 p=1140702 u=ansible n=ansible | TASK [check vgdata size] ****************************************************************************************
2021-06-21 12:33:57,618 p=1140702 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "insufficient size"}
2021-06-21 12:33:57,627 p=1140702 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 12:33:57,634 p=1140702 u=ansible n=ansible | TASK [create lvm on vgdata 2GiB+] *******************************************************************************
2021-06-21 12:33:58,183 p=1140702 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-21 12:33:58,189 p=1140702 u=ansible n=ansible | TASK [set lvdata filesystem] ************************************************************************************
2021-06-21 12:33:59,693 p=1140702 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-21 12:33:59,700 p=1140702 u=ansible n=ansible | TASK [create /lvdata directory] *********************************************************************************
2021-06-21 12:34:00,123 p=1140702 u=ansible n=ansible | changed: [ansible3.example.com]
2021-06-21 12:34:00,129 p=1140702 u=ansible n=ansible | TASK [mount lvdata to /lvdata] **********************************************************************************
2021-06-21 12:34:00,526 p=1140702 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 12:34:00,528 p=1140702 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 12:34:00,528 p=1140702 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-21 12:34:00,528 p=1140702 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:34:00,528 p=1140702 u=ansible n=ansible | ansible3.example.com       : ok=5    changed=3    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2021-06-21 12:34:00,528 p=1140702 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 12:34:00,529 p=1140702 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 13:11:56,349 p=1156941 u=ansible n=ansible | PLAY [managing storage exam preparation] ************************************************************************
2021-06-21 13:11:56,357 p=1156941 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 13:11:58,392 p=1156941 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 13:11:58,455 p=1156941 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 13:11:58,460 p=1156941 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 13:11:58,464 p=1156941 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 13:11:59,735 p=1156941 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 13:11:59,742 p=1156941 u=ansible n=ansible | TASK [create 1GiB partition on /dev/sdb1 on ansible1] ***********************************************************
2021-06-21 13:11:59,811 p=1156941 u=ansible n=ansible | skipping: [control.example.com]
2021-06-21 13:11:59,819 p=1156941 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-21 13:11:59,827 p=1156941 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 13:11:59,847 p=1156941 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-21 13:12:00,332 p=1156941 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 13:12:00,338 p=1156941 u=ansible n=ansible | TASK [create 3GiB partition on /dev/sdb1 on ansible3] ***********************************************************
2021-06-21 13:12:00,409 p=1156941 u=ansible n=ansible | skipping: [control.example.com]
2021-06-21 13:12:00,420 p=1156941 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-21 13:12:00,427 p=1156941 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-21 13:12:00,445 p=1156941 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-21 13:12:00,824 p=1156941 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 13:12:00,831 p=1156941 u=ansible n=ansible | TASK [setup a volume group on all hosts on which the disk /dev/sdb is defined] **********************************
2021-06-21 13:12:00,892 p=1156941 u=ansible n=ansible | skipping: [control.example.com]
2021-06-21 13:12:00,919 p=1156941 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-21 13:12:00,945 p=1156941 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-21 13:12:01,475 p=1156941 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 13:12:01,479 p=1156941 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 13:12:01,481 p=1156941 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 13:12:01,482 p=1156941 u=ansible n=ansible | ansible1.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-21 13:12:01,482 p=1156941 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-21 13:12:01,482 p=1156941 u=ansible n=ansible | ansible3.example.com       : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-21 13:12:01,482 p=1156941 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-21 13:12:01,482 p=1156941 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2021-06-21 13:13:20,260 p=1157851 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  did not find expected key

The error appears to be in '/home/ansible/task11-1.yml': line 25, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


    - name: setup a volume group on all hosts on which the disk /dev/sdb is defined
    ^ here

2021-06-21 13:13:53,275 p=1158084 u=ansible n=ansible | ERROR! A malformed block was encountered while loading tasks: {'parted': {'device': '/dev/sdb', 'number': 1, 'state': 'present', 'part_end': '1GiB'}} should be a list or None but is <class 'ansible.parsing.yaml.objects.AnsibleMapping'>

The error appears to be in '/home/ansible/task11-1.yml': line 2, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

---
- name: managing storage exam preparation
  ^ here

2021-06-21 13:15:03,939 p=1158581 u=ansible n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: ansible1

2021-06-21 13:15:03,939 p=1158581 u=ansible n=ansible | PLAY [managing storage exam preparation] ************************************************************************
2021-06-21 13:15:03,939 p=1158581 u=ansible n=ansible | skipping: no hosts matched
2021-06-21 13:15:03,940 p=1158581 u=ansible n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: ansible3

2021-06-21 13:15:03,940 p=1158581 u=ansible n=ansible | PLAY [create 3GiB partition on /dev/sdb1 on ansible3] ***********************************************************
2021-06-21 13:15:03,940 p=1158581 u=ansible n=ansible | skipping: no hosts matched
2021-06-21 13:15:03,941 p=1158581 u=ansible n=ansible | PLAY [setup a volume group on all hosts on which the disk /dev/sdb is defined] **********************************
2021-06-21 13:15:03,949 p=1158581 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 13:15:05,842 p=1158581 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 13:15:05,844 p=1158581 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 13:15:05,851 p=1158581 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 13:15:05,855 p=1158581 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 13:15:06,219 p=1158581 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 13:15:06,226 p=1158581 u=ansible n=ansible | TASK [create lvm] ***********************************************************************************************
2021-06-21 13:15:06,290 p=1158581 u=ansible n=ansible | skipping: [control.example.com]
2021-06-21 13:15:06,291 p=1158581 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-21 13:15:06,324 p=1158581 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-21 13:15:06,812 p=1158581 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 13:15:06,815 p=1158581 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 13:15:06,816 p=1158581 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 13:15:06,817 p=1158581 u=ansible n=ansible | ansible1.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-21 13:15:06,817 p=1158581 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-21 13:15:06,817 p=1158581 u=ansible n=ansible | ansible3.example.com       : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-21 13:15:06,817 p=1158581 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-21 13:15:06,817 p=1158581 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-21 13:15:41,428 p=1159129 u=ansible n=ansible | PLAY [managing storage exam preparation] ************************************************************************
2021-06-21 13:15:41,436 p=1159129 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 13:15:42,416 p=1159129 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 13:15:42,422 p=1159129 u=ansible n=ansible | TASK [create partition on ansible1] *****************************************************************************
2021-06-21 13:15:42,856 p=1159129 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 13:15:42,860 p=1159129 u=ansible n=ansible | PLAY [create 3GiB partition on /dev/sdb1 on ansible3] ***********************************************************
2021-06-21 13:15:42,863 p=1159129 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 13:15:43,685 p=1159129 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 13:15:43,692 p=1159129 u=ansible n=ansible | TASK [create partition on ansibel3] *****************************************************************************
2021-06-21 13:15:44,072 p=1159129 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 13:15:44,074 p=1159129 u=ansible n=ansible | PLAY [setup a volume group on all hosts on which the disk /dev/sdb is defined] **********************************
2021-06-21 13:15:44,077 p=1159129 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 13:15:45,336 p=1159129 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 13:15:45,345 p=1159129 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 13:15:45,489 p=1159129 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 13:15:45,531 p=1159129 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 13:15:45,640 p=1159129 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 13:15:45,647 p=1159129 u=ansible n=ansible | TASK [create lvm] ***********************************************************************************************
2021-06-21 13:15:45,714 p=1159129 u=ansible n=ansible | skipping: [control.example.com]
2021-06-21 13:15:45,738 p=1159129 u=ansible n=ansible | skipping: [ansible2.example.com]
2021-06-21 13:15:45,756 p=1159129 u=ansible n=ansible | skipping: [ansible4.example.com]
2021-06-21 13:15:46,268 p=1159129 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 13:15:46,273 p=1159129 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 13:15:46,274 p=1159129 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 13:15:46,274 p=1159129 u=ansible n=ansible | ansible1.example.com       : ok=4    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-21 13:15:46,274 p=1159129 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-21 13:15:46,274 p=1159129 u=ansible n=ansible | ansible3.example.com       : ok=4    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2021-06-21 13:15:46,274 p=1159129 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-21 13:15:46,274 p=1159129 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2021-06-21 13:18:25,594 p=1160582 u=ansible n=ansible | PLAY [playbook that configures an LVM volume with the name lvdata in the vgdata volume group] *******************
2021-06-21 13:18:25,602 p=1160582 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************
2021-06-21 13:18:27,512 p=1160582 u=ansible n=ansible | ok: [ansible2.example.com]
2021-06-21 13:18:27,515 p=1160582 u=ansible n=ansible | ok: [ansible4.example.com]
2021-06-21 13:18:27,545 p=1160582 u=ansible n=ansible | ok: [ansible3.example.com]
2021-06-21 13:18:27,547 p=1160582 u=ansible n=ansible | ok: [ansible1.example.com]
2021-06-21 13:18:27,873 p=1160582 u=ansible n=ansible | ok: [control.example.com]
2021-06-21 13:18:27,880 p=1160582 u=ansible n=ansible | TASK [check for vgdata] *****************************************************************************************
2021-06-21 13:18:27,949 p=1160582 u=ansible n=ansible | fatal: [control.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 13:18:27,950 p=1160582 u=ansible n=ansible | fatal: [ansible2.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 13:18:27,950 p=1160582 u=ansible n=ansible | skipping: [ansible1.example.com]
2021-06-21 13:18:27,973 p=1160582 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 13:18:27,977 p=1160582 u=ansible n=ansible | fatal: [ansible4.example.com]: FAILED! => {"changed": false, "msg": "vgdata does not exist"}
2021-06-21 13:18:27,983 p=1160582 u=ansible n=ansible | TASK [check vgdata size] ****************************************************************************************
2021-06-21 13:18:28,016 p=1160582 u=ansible n=ansible | fatal: [ansible1.example.com]: FAILED! => {"changed": false, "msg": "insufficient size"}
2021-06-21 13:18:28,019 p=1160582 u=ansible n=ansible | skipping: [ansible3.example.com]
2021-06-21 13:18:28,026 p=1160582 u=ansible n=ansible | TASK [create lvm on vgdata 2GiB+] *******************************************************************************
2021-06-21 13:18:28,475 p=1160582 u=ansible n=ansible | fatal: [ansible3.example.com]: FAILED! => {"changed": false, "msg": "Sorry, no shrinking of lvdata without force=yes."}
2021-06-21 13:18:28,476 p=1160582 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************
2021-06-21 13:18:28,477 p=1160582 u=ansible n=ansible | ansible1.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2021-06-21 13:18:28,477 p=1160582 u=ansible n=ansible | ansible2.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 13:18:28,477 p=1160582 u=ansible n=ansible | ansible3.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
2021-06-21 13:18:28,477 p=1160582 u=ansible n=ansible | ansible4.example.com       : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2021-06-21 13:18:28,477 p=1160582 u=ansible n=ansible | control.example.com        : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
